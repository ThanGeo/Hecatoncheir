<profile_xml>

<thread id="1.0.0.61237" node="1" context="0" thread="0">
<metadata>
<attribute>
<name>CPU Cores</name>
<value>8</value>
</attribute>
<attribute>
<name>CPU MHz</name>
<value>3695.998</value>
</attribute>
<attribute>
<name>CPU Type</name>
<value>QEMU Virtual CPU version 2.5+</value>
</attribute>
<attribute>
<name>CPU Vendor</name>
<value>GenuineIntel</value>
</attribute>
<attribute>
<name>CPUs Allowed</name>
<value>ff</value>
</attribute>
<attribute>
<name>CPUs Allowed List</name>
<value>0-7</value>
</attribute>
<attribute>
<name>CWD</name>
<value>/home/hec/thanasis/Hecatoncheir</value>
</attribute>
<attribute>
<name>Cache Size</name>
<value>16384 KB</value>
</attribute>
<attribute>
<name>Command Line</name>
<value>build/Hecatoncheir/worker</value>
</attribute>
<attribute>
<name>Executable</name>
<value>/home/hec/thanasis/Hecatoncheir/build/Hecatoncheir/worker</value>
</attribute>
<attribute>
<name>Hostname</name>
<value>vm1</value>
</attribute>
<attribute>
<name>Local Time</name>
<value>2025-09-12T23:26:18+03:00</value>
</attribute>
<attribute>
<name>MPI Processor Name</name>
<value>vm1</value>
</attribute>
<attribute>
<name>Memories Allowed</name>
<value>00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000000,00000001</value>
</attribute>
<attribute>
<name>Memories Allowed List</name>
<value>0</value>
</attribute>
<attribute>
<name>Memory Size</name>
<value>12247356 kB</value>
</attribute>
<attribute>
<name>Node Name</name>
<value>vm1</value>
</attribute>
<attribute>
<name>OS Machine</name>
<value>x86_64</value>
</attribute>
<attribute>
<name>OS Name</name>
<value>Linux</value>
</attribute>
<attribute>
<name>OS Release</name>
<value>6.8.0-79-generic</value>
</attribute>
<attribute>
<name>OS Version</name>
<value>#79~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Fri Aug 15 16:54:53 UTC 2</value>
</attribute>
<attribute>
<name>Starting Timestamp</name>
<value>1757708778999481</value>
</attribute>
<attribute>
<name>TAU Architecture</name>
<value>default</value>
</attribute>
<attribute>
<name>TAU Config</name>
<value> -PROFILEMEMORY -mpi -openmp -cc=mpicc -c++=mpicxx -fortran=mpif90 -bfd=download -cc=/bin/mpicc.mpich -c++=/bin/mpicxx.mpich -mpiinc=/usr/include/x86_64-linux-gnu/mpich -mpilib= -prefix=/home/hec/tau-2.34.1/mpich-install</value>
</attribute>
<attribute>
<name>TAU Makefile</name>
<value>/home/hec/tau-2.34.1/mpich-install/x86_64/lib/Makefile.tau-memory-mpi-openmp</value>
</attribute>
<attribute>
<name>TAU Version</name>
<value>2.34-git</value>
</attribute>
<attribute>
<name>TAU_BFD_LOOKUP</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_CALLPATH</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_CALLPATH_DEPTH</name>
<value>2</value>
</attribute>
<attribute>
<name>TAU_CALLSITE_DEPTH</name>
<value>1</value>
</attribute>
<attribute>
<name>TAU_COMM_MATRIX</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_COMPENSATE</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_CUDA_BINARY_EXE</name>
<value></value>
</attribute>
<attribute>
<name>TAU_CUPTI_API</name>
<value>runtime</value>
</attribute>
<attribute>
<name>TAU_CUPTI_PC</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_CURRENT_TIMER_EXIT_PARAMS</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_EBS_KEEP_UNRESOLVED_ADDR</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_ENABLE_THREAD_CONTEXT</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_IBM_BG_HWP_COUNTERS</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_MEASURE_TAU</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_MEMDBG_PROTECT_ABOVE</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_MEMDBG_PROTECT_BELOW</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_MEMDBG_PROTECT_FREE</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_MEMMGR_MAX_BLOCKS</name>
<value>64</value>
</attribute>
<attribute>
<name>TAU_OPENMP_RUNTIME</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_OPENMP_RUNTIME_EVENTS</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_OPENMP_RUNTIME_STATES</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_OUTPUT_CUDA_CSV</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_PAPI_MULTIPLEXING</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_PROFILE</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_PROFILE_FORMAT</name>
<value>snapshot</value>
</attribute>
<attribute>
<name>TAU_RECYCLE_THREADS</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_REGION_ADDRESSES</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_SAMPLING</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_SHOW_MEMORY_FUNCTIONS</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_SIGNALS_GDB</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_THROTTLE</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_THROTTLE_NUMCALLS</name>
<value>100000</value>
</attribute>
<attribute>
<name>TAU_THROTTLE_PERCALL</name>
<value>10</value>
</attribute>
<attribute>
<name>TAU_TRACE</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_TRACE_FORMAT</name>
<value>tau</value>
</attribute>
<attribute>
<name>TAU_TRACK_CUDA_CDP</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_TRACK_CUDA_ENV</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_TRACK_CUDA_INSTRUCTIONS</name>
<value></value>
</attribute>
<attribute>
<name>TAU_TRACK_CUDA_SASS</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_TRACK_HEADROOM</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_TRACK_HEAP</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_TRACK_IO_PARAMS</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_TRACK_MEMORY_FOOTPRINT</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_TRACK_MEMORY_LEAKS</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_TRACK_MESSAGE</name>
<value>on</value>
</attribute>
<attribute>
<name>TAU_TRACK_SIGNALS</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_TRACK_UNIFIED_MEMORY</name>
<value>off</value>
</attribute>
<attribute>
<name>TAU_VERBOSE_RANK</name>
<value>-1</value>
</attribute>
<attribute>
<name>Timestamp</name>
<value>1757708778999564</value>
</attribute>
<attribute>
<name>UTC Time</name>
<value>2025-09-12T20:26:18Z</value>
</attribute>
<attribute>
<name>pid</name>
<value>61237</value>
</attribute>
<attribute>
<name>tid</name>
<value>61237</value>
</attribute>
<attribute>
<name>username</name>
<value>hec</value>
</attribute>
<attribute>
<name>Ending Timestamp</name>
<value>1757711788996232</value>
</attribute>
</metadata>
</thread>

<definitions thread="1.0.0.61237">
<metric id="0"><name>TIME</name>
<units>unknown</units>
</metric>
</definitions>

<definitions thread="1.0.0.61237">
<event id="0"><name>.TAU application </name><group>TAU_DEFAULT</group></event>
<event id="1"><name>_GLOBAL__sub_I_main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {89,0}] </name><group>TAU_DEFAULT</group></event>
<event id="2"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {89,0}] </name><group>TAU_DEFAULT</group></event>
<event id="3"><name>_GLOBAL__sub_I_g_world_size [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/def.cpp} {17,0}] </name><group>TAU_DEFAULT</group></event>
<event id="4"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/def.cpp} {17,0}] </name><group>TAU_DEFAULT</group></event>
<event id="5"><name>_GLOBAL__sub_I__ZN4comm4host15gatherResponsesEv [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_host.cpp} {1069,0}] </name><group>TAU_DEFAULT</group></event>
<event id="6"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_host.cpp} {1069,0}] </name><group>TAU_DEFAULT</group></event>
<event id="7"><name>_GLOBAL__sub_I__ZN4comm6worker29serializeAndSendGeometryBatchEP5Batch [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1061,0}] </name><group>TAU_DEFAULT</group></event>
<event id="8"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1061,0}] </name><group>TAU_DEFAULT</group></event>
<event id="9"><name>_GLOBAL__sub_I__ZN4comm4recv15receiveResponseEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {60,0}] </name><group>TAU_DEFAULT</group></event>
<event id="10"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {60,0}] </name><group>TAU_DEFAULT</group></event>
<event id="11"><name>_GLOBAL__sub_I__ZN4comm4send12sendResponseEiiRi [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {87,0}] </name><group>TAU_DEFAULT</group></event>
<event id="12"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {87,0}] </name><group>TAU_DEFAULT</group></event>
<event id="13"><name>_GLOBAL__sub_I__ZN4pack9packShapeEP5ShapeR13SerializedMsgIcE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {662,0}] </name><group>TAU_DEFAULT</group></event>
<event id="14"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {662,0}] </name><group>TAU_DEFAULT</group></event>
<event id="15"><name>_GLOBAL__sub_I__ZN12partitioning19getPartitionsForMBRER3MBRRSt6vectorIiSaIiEE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/partitioning.cpp} {808,0}] </name><group>TAU_DEFAULT</group></event>
<event id="16"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/partitioning.cpp} {808,0}] </name><group>TAU_DEFAULT</group></event>
<event id="17"><name>_GLOBAL__sub_I__ZN7storage6writer13partitionFile36appendDatasetMetadataToPartitionFileEP8_IO_FILEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}] </name><group>TAU_DEFAULT</group></event>
<event id="18"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}] </name><group>TAU_DEFAULT</group></event>
<event id="19"><name>_GLOBAL__sub_I__ZN7storage6reader33getDatasetLineCountWithSystemCallEP7DatasetRm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/read.cpp} {503,0}] </name><group>TAU_DEFAULT</group></event>
<event id="20"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/read.cpp} {503,0}] </name><group>TAU_DEFAULT</group></event>
<event id="21"><name>_GLOBAL__sub_I__ZN5setup11setupSystemEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/setup.cpp} {28,0}] </name><group>TAU_DEFAULT</group></event>
<event id="22"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/setup.cpp} {28,0}] </name><group>TAU_DEFAULT</group></event>
<event id="23"><name>_GLOBAL__sub_I__ZN6parser17g_querySupportMapE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}] </name><group>TAU_DEFAULT</group></event>
<event id="24"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}] </name><group>TAU_DEFAULT</group></event>
<event id="25"><name>_GLOBAL__sub_I__ZN10configurer10initWorkerEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {182,0}] </name><group>TAU_DEFAULT</group></event>
<event id="26"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {182,0}] </name><group>TAU_DEFAULT</group></event>
<event id="27"><name>_GLOBAL__sub_I__ZN9statement19getPartitioningTypeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEER16PartitioningType [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/statement.cpp} {38,0}] </name><group>TAU_DEFAULT</group></event>
<event id="28"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/statement.cpp} {38,0}] </name><group>TAU_DEFAULT</group></event>
<event id="29"><name>_GLOBAL__sub_I__ZN5APRIL6writer9saveAPRILEP8_IO_FILEmjP9AprilData [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/storage.cpp} {195,0}] </name><group>TAU_DEFAULT</group></event>
<event id="30"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/storage.cpp} {195,0}] </name><group>TAU_DEFAULT</group></event>
<event id="31"><name>_GLOBAL__sub_I__ZN3hec14spatialQueriesE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {1422,0}] </name><group>TAU_DEFAULT</group></event>
<event id="32"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {1422,0}] </name><group>TAU_DEFAULT</group></event>
<event id="33"><name>_GLOBAL__sub_I_g_config [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}] </name><group>TAU_DEFAULT</group></event>
<event id="34"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}] </name><group>TAU_DEFAULT</group></event>
<event id="35"><name>DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}] </name><group>TAU_DEFAULT</group></event>
<event id="36"><name>_GLOBAL__sub_I__ZN7hilbert4xy2dEjjj [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {300,0}] </name><group>TAU_DEFAULT</group></event>
<event id="37"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {300,0}] </name><group>TAU_DEFAULT</group></event>
<event id="38"><name>_GLOBAL__sub_I__ZN4comm5probeEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {254,0}] </name><group>TAU_DEFAULT</group></event>
<event id="39"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {254,0}] </name><group>TAU_DEFAULT</group></event>
<event id="40"><name>_GLOBAL__sub_I__ZN7storage25generatePartitionFilePathEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}] </name><group>TAU_DEFAULT</group></event>
<event id="41"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}] </name><group>TAU_DEFAULT</group></event>
<event id="42"><name>_GLOBAL__sub_I__ZN5APRIL10generation23rasterDataspaceMetadataE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}] </name><group>TAU_DEFAULT</group></event>
<event id="43"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}] </name><group>TAU_DEFAULT</group></event>
<event id="44"><name>_GLOBAL__sub_I__ZN8twolayer12processQueryEPN3hec5QueryERSt10unique_ptrINS0_11QResultBaseESt14default_deleteIS4_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {60,0}] </name><group>TAU_DEFAULT</group></event>
<event id="45"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {60,0}] </name><group>TAU_DEFAULT</group></event>
<event id="46"><name>_GLOBAL__sub_I__ZN8twolayer12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/range_filter.cpp} {687,0}] </name><group>TAU_DEFAULT</group></event>
<event id="47"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/range_filter.cpp} {687,0}] </name><group>TAU_DEFAULT</group></event>
<event id="48"><name>_GLOBAL__sub_I__ZN8twolayer24intersection_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {491,0}] </name><group>TAU_DEFAULT</group></event>
<event id="49"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {491,0}] </name><group>TAU_DEFAULT</group></event>
<event id="50"><name>_GLOBAL__sub_I__ZN8twolayer23topological_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}] </name><group>TAU_DEFAULT</group></event>
<event id="51"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}] </name><group>TAU_DEFAULT</group></event>
<event id="52"><name>_GLOBAL__sub_I__ZN12uniform_grid12processQueryEPN3hec5QueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS4_EEERSt10unique_ptrINS0_11QResultBaseESt14default_deleteISG_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/filter.cpp} {69,0}] </name><group>TAU_DEFAULT</group></event>
<event id="53"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/filter.cpp} {69,0}] </name><group>TAU_DEFAULT</group></event>
<event id="54"><name>_GLOBAL__sub_I__ZN12uniform_grid12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/range_filter.cpp} {259,0}] </name><group>TAU_DEFAULT</group></event>
<event id="55"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/range_filter.cpp} {259,0}] </name><group>TAU_DEFAULT</group></event>
<event id="56"><name>_GLOBAL__sub_I__ZN12uniform_grid10knn_filter8evaluateEPN3hec8KNNQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/knn_filter.cpp} {57,0}] </name><group>TAU_DEFAULT</group></event>
<event id="57"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/knn_filter.cpp} {57,0}] </name><group>TAU_DEFAULT</group></event>
<event id="58"><name>_GLOBAL__sub_I__ZN12uniform_grid15distance_filter8evaluateEPN3hec17DistanceJoinQueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS5_EEERSt10unique_ptrINS1_11QResultBaseESt14default_deleteISH_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/dj_filter.cpp} {245,0}] </name><group>TAU_DEFAULT</group></event>
<event id="59"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/dj_filter.cpp} {245,0}] </name><group>TAU_DEFAULT</group></event>
<event id="60"><name>_GLOBAL__sub_I__ZN10refinement8topology10insideCodeE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {489,0}] </name><group>TAU_DEFAULT</group></event>
<event id="61"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {489,0}] </name><group>TAU_DEFAULT</group></event>
<event id="62"><name>_GLOBAL__sub_I__ZN5APRIL28getCommonSectionIDsOfObjectsEP7DatasetS1_mm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}] </name><group>TAU_DEFAULT</group></event>
<event id="63"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}] </name><group>TAU_DEFAULT</group></event>
<event id="64"><name>_GLOBAL__sub_I__ZN5APRIL12uncompressed8standard21intersectionJoinAPRILEP9AprilDataS3_Ri [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {582,0}] </name><group>TAU_DEFAULT</group></event>
<event id="65"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {582,0}] </name><group>TAU_DEFAULT</group></event>
<event id="66"><name>main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] </name><group>TAU_DEFAULT</group></event>
<event id="67"><name>configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] </name><group>TAU_DEFAULT</group></event>
<event id="68"><name>MPI_Init_thread()  </name><group>MPI</group></event>
<event id="69"><name>MPI_Intercomm_merge()  </name><group>MPI</group></event>
<event id="70"><name>MPI_Comm_rank()  </name><group>MPI</group></event>
<event id="71"><name>MPI_Comm_split()  </name><group>MPI</group></event>
<event id="72"><name>MPI_Comm_size()  </name><group>MPI</group></event>
<event id="73"><name>MPI_Comm_free()  </name><group>MPI</group></event>
<event id="74"><name>MPI_Barrier()  </name><group>MPI</group></event>
<event id="75"><name>comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] </name><group>TAU_DEFAULT</group></event>
<event id="76"><name><![CDATA[comm::probe(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {6,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="77"><name>MPI_Probe()  </name><group>MPI</group></event>
<event id="78"><name>comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] </name><group>TAU_DEFAULT</group></event>
<event id="79"><name>comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] </name><group>TAU_DEFAULT</group></event>
<event id="80"><name>MPI_Get_count()  </name><group>MPI</group></event>
<event id="81"><name>MPI_Recv()  </name><group>MPI</group></event>
<event id="82"><name><![CDATA[unpack::unpackSystemMetadata(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {351,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="83"><name>configurer::verifySystemDirectories() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {78,0}] </name><group>TAU_DEFAULT</group></event>
<event id="84"><name><![CDATA[verifyDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {57,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="85"><name><![CDATA[comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="86"><name>MPI_Send()  </name><group>MPI</group></event>
<event id="87"><name><![CDATA[comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="88"><name><![CDATA[comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="89"><name>DatasetMetadata::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {203,0}] </name><group>TAU_DEFAULT</group></event>
<event id="90"><name><![CDATA[getFileNameFromPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {73,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="91"><name>storage::generatePartitionFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {7,0}] </name><group>TAU_DEFAULT</group></event>
<event id="92"><name>TwoGridPartitioning::getGlobalPPD() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1572,0}] [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="93"><name>storage::generateAPRILFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {23,0}] </name><group>TAU_DEFAULT</group></event>
<event id="94"><name>AprilConfig::getN() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {111,0}] </name><group>TAU_DEFAULT</group></event>
<event id="95"><name><![CDATA[DatasetOptions::addDataset(Dataset&&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1341,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="96"><name><![CDATA[comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="97"><name>Dataset::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {384,0}] </name><group>TAU_DEFAULT</group></event>
<event id="98"><name>DataspaceMetadata::set(double, double, double, double) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {516,0}] </name><group>TAU_DEFAULT</group></event>
<event id="99"><name>DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}] </name><group>TAU_DEFAULT</group></event>
<event id="100"><name>DatasetOptions::updateDataspace() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1360,0}] </name><group>TAU_DEFAULT</group></event>
<event id="101"><name>DatasetOptions::updateDatasetDataspaceToGlobal() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1393,0}] </name><group>TAU_DEFAULT</group></event>
<event id="102"><name><![CDATA[TwoGridPartitioning::setPartGridDataspace(DataspaceMetadata&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1582,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="103"><name><![CDATA[comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="104"><name>comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] </name><group>TAU_DEFAULT</group></event>
<event id="105"><name><![CDATA[comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="106"><name><![CDATA[comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="107"><name>Batch::Batch() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1402,0}] </name><group>TAU_DEFAULT</group></event>
<event id="108"><name>Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}] </name><group>TAU_DEFAULT</group></event>
<event id="109"><name><![CDATA[shape_factory::createEmpty(DataType, Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1651,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="110"><name>shape_factory::createEmptyPolygonShape() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1639,0}] </name><group>TAU_DEFAULT</group></event>
<event id="111"><name><![CDATA[Batch::addObjectToBatch(Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1408,0}]]]> [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="112"><name><![CDATA[Dataset::storeObject(Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {256,0}]]]> [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="113"><name><![CDATA[comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="114"><name><![CDATA[comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="115"><name>Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] </name><group>TAU_DEFAULT</group></event>
<event id="116"><name>TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] </name><group>TAU_DEFAULT</group></event>
<event id="117"><name><![CDATA[TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}]]]> [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="118"><name>TwoGridPartitioning::getDistributionPPD() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1564,0}] [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="119"><name>TwoGridPartitioning::getPartPartionExtentX() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1588,0}] [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="120"><name>TwoGridPartitioning::getPartPartionExtentY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1592,0}] [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="121"><name>TwoGridPartitioning::getPartitionID(int, int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1560,0}] [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="122"><name>TwoLayerIndex::getOrCreatePartition(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1043,0}] [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="123"><name>PartitionTwoLayer::addObject(Shape*, TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {123,0}] [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="124"><name>TwoLayerIndex::sortPartitionsOnY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1078,0}] </name><group>TAU_DEFAULT</group></event>
<event id="125"><name>BaseIndex::getPartitions() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {888,0}] </name><group>TAU_DEFAULT</group></event>
<event id="126"><name>PartitionTwoLayer::getContents(TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {119,0}] </name><group>TAU_DEFAULT</group></event>
<event id="127"><name>Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] </name><group>TAU_DEFAULT</group></event>
<event id="128"><name><![CDATA[APRIL::generation::setRasterBounds(DataspaceMetadata&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {12,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="129"><name><![CDATA[APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="130"><name>AprilConfig::getCellsPerDim() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {115,0}] [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="131"><name><![CDATA[APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="132"><name><![CDATA[APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="133"><name><![CDATA[APRIL::generation::mapXYToHilbert(double&, double&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {42,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="134"><name><![CDATA[APRIL::generation::mapSingleValueToHilbert(double, double, double, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {31,0}]]]> [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="135"><name><![CDATA[APRIL::generation::calculatePartialAndUncertain(Shape&, unsigned int&, APRIL::generation::RasterData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {128,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="136"><name><![CDATA[APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="137"><name>hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}] </name><group>TAU_DEFAULT</group></event>
<event id="138"><name><![CDATA[hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="139"><name><![CDATA[APRIL::generation::checkY(double&, double&, double&, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {23,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="140"><name><![CDATA[APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="141"><name><![CDATA[hilbert::d2xy(unsigned int, unsigned int, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {33,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="142"><name><![CDATA[APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="143"><name><![CDATA[binarySearchInVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {122,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="144"><name><![CDATA[binarySearchInIntervalVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {99,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="145"><name><![CDATA[comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="146"><name><![CDATA[comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="147"><name><![CDATA[hec::Query::createFromBuffer(char*&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {15,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="148"><name><![CDATA[hec::PredicateJoinQuery::deserialize(char*&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {138,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="149"><name><![CDATA[qresult_factory::createNew(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1744,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="150"><name>hec::QResultCount::QResultCount(int, hec::QueryType, hec::QueryResultType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {580,0}] </name><group>TAU_DEFAULT</group></event>
<event id="151"><name>DatasetOptions::getDatasetR() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1254,0}] </name><group>TAU_DEFAULT</group></event>
<event id="152"><name><![CDATA[TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="153"><name><![CDATA[twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="154"><name><![CDATA[twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="155"><name>hec::QResultCount::cloneEmpty() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {682,0}] </name><group>TAU_DEFAULT</group></event>
<event id="156"><name>BaseIndex::getPartition(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {892,0}] </name><group>TAU_DEFAULT</group></event>
<event id="157"><name><![CDATA[twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="158"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="159"><name><![CDATA[twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="160"><name>twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] </name><group>TAU_DEFAULT</group></event>
<event id="161"><name><![CDATA[twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="162"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="163"><name>APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] </name><group>TAU_DEFAULT</group></event>
<event id="164"><name><![CDATA[APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="165"><name><![CDATA[APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]> [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="166"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}]]]> [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="167"><name><![CDATA[twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="168"><name>hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}] [THROTTLED]</name><group>TAU_DISABLE</group></event>
<event id="169"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="170"><name><![CDATA[twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="171"><name>refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] </name><group>TAU_DEFAULT</group></event>
<event id="172"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="173"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="174"><name>mergeResultObjects(hec::QResultBase*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {26,0}] </name><group>TAU_DEFAULT</group></event>
<event id="175"><name>hec::QResultCount::mergeResults(hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {652,0}] </name><group>TAU_DEFAULT</group></event>
<event id="176"><name><![CDATA[hec::QResultCount::serialize(char**, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {605,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="177"><name>hec::QResultCount::calculateBufferSize() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {596,0}] </name><group>TAU_DEFAULT</group></event>
<event id="178"><name><![CDATA[comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="179"><name>DatasetOptions::unloadDataset(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1262,0}] </name><group>TAU_DEFAULT</group></event>
<event id="180"><name>Dataset::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {499,0}] </name><group>TAU_DEFAULT</group></event>
<event id="181"><name>BaseIndex::~BaseIndex() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {923,0}] </name><group>TAU_DEFAULT</group></event>
<event id="182"><name>BaseIndex::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {911,0}] </name><group>TAU_DEFAULT</group></event>
<event id="183"><name><![CDATA[comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="184"><name><![CDATA[comm::recv::receiveInstructionMessage(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {37,0}]]]> </name><group>TAU_DEFAULT</group></event>
<event id="185"><name>terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}] </name><group>TAU_DEFAULT</group></event>
<event id="186"><name>MPI_Finalize()  </name><group>MPI</group></event>
</definitions>

<definitions thread="1.0.0.61237">
<userevent id="0"><name>Peak Memory Usage Resident Set Size (VmHWM) (KB)</name></userevent>
<userevent id="1"><name>Memory Footprint (VmRSS) (KB)</name></userevent>
<userevent id="2"><name>Threads</name></userevent>
<userevent id="3"><name>Voluntary Context Switches</name></userevent>
<userevent id="4"><name>Non-voluntary Context Switches</name></userevent>
<userevent id="5"><name>.TAU application  - Heap Memory Used (KB)</name></userevent>
<userevent id="6"><name>Heap Memory Used (KB) at Entry</name></userevent>
<userevent id="7"><name>Heap Memory Used (KB) at Entry : .TAU application</name></userevent>
<userevent id="8"><name>_GLOBAL__sub_I_main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {89,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="9"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I_main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {89,0}]</name></userevent>
<userevent id="10"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {89,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="11"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I_main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {89,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {89,0}]</name></userevent>
<userevent id="12"><name>Heap Memory Used (KB) at Exit</name></userevent>
<userevent id="13"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I_main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {89,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {89,0}]</name></userevent>
<userevent id="14"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I_main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {89,0}]</name></userevent>
<userevent id="15"><name>_GLOBAL__sub_I_g_world_size [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/def.cpp} {17,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="16"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I_g_world_size [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/def.cpp} {17,0}]</name></userevent>
<userevent id="17"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/def.cpp} {17,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="18"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I_g_world_size [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/def.cpp} {17,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/def.cpp} {17,0}]</name></userevent>
<userevent id="19"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I_g_world_size [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/def.cpp} {17,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/def.cpp} {17,0}]</name></userevent>
<userevent id="20"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I_g_world_size [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/def.cpp} {17,0}]</name></userevent>
<userevent id="21"><name>_GLOBAL__sub_I__ZN4comm4host15gatherResponsesEv [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_host.cpp} {1069,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="22"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4comm4host15gatherResponsesEv [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_host.cpp} {1069,0}]</name></userevent>
<userevent id="23"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_host.cpp} {1069,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="24"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4comm4host15gatherResponsesEv [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_host.cpp} {1069,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_host.cpp} {1069,0}]</name></userevent>
<userevent id="25"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4comm4host15gatherResponsesEv [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_host.cpp} {1069,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_host.cpp} {1069,0}]</name></userevent>
<userevent id="26"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4comm4host15gatherResponsesEv [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_host.cpp} {1069,0}]</name></userevent>
<userevent id="27"><name>_GLOBAL__sub_I__ZN4comm6worker29serializeAndSendGeometryBatchEP5Batch [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1061,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="28"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4comm6worker29serializeAndSendGeometryBatchEP5Batch [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1061,0}]</name></userevent>
<userevent id="29"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1061,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="30"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4comm6worker29serializeAndSendGeometryBatchEP5Batch [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1061,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1061,0}]</name></userevent>
<userevent id="31"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4comm6worker29serializeAndSendGeometryBatchEP5Batch [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1061,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1061,0}]</name></userevent>
<userevent id="32"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4comm6worker29serializeAndSendGeometryBatchEP5Batch [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1061,0}]</name></userevent>
<userevent id="33"><name>_GLOBAL__sub_I__ZN4comm4recv15receiveResponseEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {60,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="34"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4comm4recv15receiveResponseEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {60,0}]</name></userevent>
<userevent id="35"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {60,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="36"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4comm4recv15receiveResponseEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {60,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {60,0}]</name></userevent>
<userevent id="37"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4comm4recv15receiveResponseEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {60,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {60,0}]</name></userevent>
<userevent id="38"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4comm4recv15receiveResponseEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {60,0}]</name></userevent>
<userevent id="39"><name>_GLOBAL__sub_I__ZN4comm4send12sendResponseEiiRi [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {87,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="40"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4comm4send12sendResponseEiiRi [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {87,0}]</name></userevent>
<userevent id="41"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {87,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="42"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4comm4send12sendResponseEiiRi [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {87,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {87,0}]</name></userevent>
<userevent id="43"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4comm4send12sendResponseEiiRi [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {87,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {87,0}]</name></userevent>
<userevent id="44"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4comm4send12sendResponseEiiRi [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {87,0}]</name></userevent>
<userevent id="45"><name>_GLOBAL__sub_I__ZN4pack9packShapeEP5ShapeR13SerializedMsgIcE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {662,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="46"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4pack9packShapeEP5ShapeR13SerializedMsgIcE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {662,0}]</name></userevent>
<userevent id="47"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {662,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="48"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4pack9packShapeEP5ShapeR13SerializedMsgIcE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {662,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {662,0}]</name></userevent>
<userevent id="49"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4pack9packShapeEP5ShapeR13SerializedMsgIcE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {662,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {662,0}]</name></userevent>
<userevent id="50"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4pack9packShapeEP5ShapeR13SerializedMsgIcE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {662,0}]</name></userevent>
<userevent id="51"><name>_GLOBAL__sub_I__ZN12partitioning19getPartitionsForMBRER3MBRRSt6vectorIiSaIiEE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/partitioning.cpp} {808,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="52"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN12partitioning19getPartitionsForMBRER3MBRRSt6vectorIiSaIiEE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/partitioning.cpp} {808,0}]</name></userevent>
<userevent id="53"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/partitioning.cpp} {808,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="54"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN12partitioning19getPartitionsForMBRER3MBRRSt6vectorIiSaIiEE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/partitioning.cpp} {808,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/partitioning.cpp} {808,0}]</name></userevent>
<userevent id="55"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN12partitioning19getPartitionsForMBRER3MBRRSt6vectorIiSaIiEE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/partitioning.cpp} {808,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/partitioning.cpp} {808,0}]</name></userevent>
<userevent id="56"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN12partitioning19getPartitionsForMBRER3MBRRSt6vectorIiSaIiEE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/partitioning.cpp} {808,0}]</name></userevent>
<userevent id="57"><name>_GLOBAL__sub_I__ZN7storage6writer13partitionFile36appendDatasetMetadataToPartitionFileEP8_IO_FILEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="58"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN7storage6writer13partitionFile36appendDatasetMetadataToPartitionFileEP8_IO_FILEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}]</name></userevent>
<userevent id="59"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="60"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN7storage6writer13partitionFile36appendDatasetMetadataToPartitionFileEP8_IO_FILEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}]</name></userevent>
<userevent id="61"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN7storage6writer13partitionFile36appendDatasetMetadataToPartitionFileEP8_IO_FILEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}]</name></userevent>
<userevent id="62"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN7storage6writer13partitionFile36appendDatasetMetadataToPartitionFileEP8_IO_FILEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}]</name></userevent>
<userevent id="63"><name>Increase in Heap Memory (KB)</name></userevent>
<userevent id="64"><name>Increase in Heap Memory (KB) : _GLOBAL__sub_I__ZN7storage6writer13partitionFile36appendDatasetMetadataToPartitionFileEP8_IO_FILEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/write.cpp} {86,0}]</name></userevent>
<userevent id="65"><name>_GLOBAL__sub_I__ZN7storage6reader33getDatasetLineCountWithSystemCallEP7DatasetRm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/read.cpp} {503,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="66"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN7storage6reader33getDatasetLineCountWithSystemCallEP7DatasetRm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/read.cpp} {503,0}]</name></userevent>
<userevent id="67"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/read.cpp} {503,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="68"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN7storage6reader33getDatasetLineCountWithSystemCallEP7DatasetRm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/read.cpp} {503,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/read.cpp} {503,0}]</name></userevent>
<userevent id="69"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN7storage6reader33getDatasetLineCountWithSystemCallEP7DatasetRm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/read.cpp} {503,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/read.cpp} {503,0}]</name></userevent>
<userevent id="70"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN7storage6reader33getDatasetLineCountWithSystemCallEP7DatasetRm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/read.cpp} {503,0}]</name></userevent>
<userevent id="71"><name>_GLOBAL__sub_I__ZN5setup11setupSystemEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/setup.cpp} {28,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="72"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5setup11setupSystemEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/setup.cpp} {28,0}]</name></userevent>
<userevent id="73"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/setup.cpp} {28,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="74"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5setup11setupSystemEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/setup.cpp} {28,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/setup.cpp} {28,0}]</name></userevent>
<userevent id="75"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5setup11setupSystemEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/setup.cpp} {28,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/setup.cpp} {28,0}]</name></userevent>
<userevent id="76"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5setup11setupSystemEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/setup.cpp} {28,0}]</name></userevent>
<userevent id="77"><name>_GLOBAL__sub_I__ZN6parser17g_querySupportMapE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="78"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN6parser17g_querySupportMapE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}]</name></userevent>
<userevent id="79"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="80"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN6parser17g_querySupportMapE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}]</name></userevent>
<userevent id="81"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN6parser17g_querySupportMapE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}]</name></userevent>
<userevent id="82"><name>Increase in Heap Memory (KB) : _GLOBAL__sub_I__ZN6parser17g_querySupportMapE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}]</name></userevent>
<userevent id="83"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN6parser17g_querySupportMapE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}]</name></userevent>
<userevent id="84"><name>Increase in Heap Memory (KB) : _GLOBAL__sub_I__ZN6parser17g_querySupportMapE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/parse.cpp} {568,0}]</name></userevent>
<userevent id="85"><name>_GLOBAL__sub_I__ZN10configurer10initWorkerEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {182,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="86"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN10configurer10initWorkerEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {182,0}]</name></userevent>
<userevent id="87"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {182,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="88"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN10configurer10initWorkerEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {182,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {182,0}]</name></userevent>
<userevent id="89"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN10configurer10initWorkerEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {182,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {182,0}]</name></userevent>
<userevent id="90"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN10configurer10initWorkerEiPPc [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {182,0}]</name></userevent>
<userevent id="91"><name>_GLOBAL__sub_I__ZN9statement19getPartitioningTypeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEER16PartitioningType [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/statement.cpp} {38,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="92"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN9statement19getPartitioningTypeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEER16PartitioningType [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/statement.cpp} {38,0}]</name></userevent>
<userevent id="93"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/statement.cpp} {38,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="94"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN9statement19getPartitioningTypeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEER16PartitioningType [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/statement.cpp} {38,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/statement.cpp} {38,0}]</name></userevent>
<userevent id="95"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN9statement19getPartitioningTypeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEER16PartitioningType [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/statement.cpp} {38,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/statement.cpp} {38,0}]</name></userevent>
<userevent id="96"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN9statement19getPartitioningTypeERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEER16PartitioningType [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/statement.cpp} {38,0}]</name></userevent>
<userevent id="97"><name>_GLOBAL__sub_I__ZN5APRIL6writer9saveAPRILEP8_IO_FILEmjP9AprilData [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/storage.cpp} {195,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="98"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5APRIL6writer9saveAPRILEP8_IO_FILEmjP9AprilData [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/storage.cpp} {195,0}]</name></userevent>
<userevent id="99"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/storage.cpp} {195,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="100"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5APRIL6writer9saveAPRILEP8_IO_FILEmjP9AprilData [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/storage.cpp} {195,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/storage.cpp} {195,0}]</name></userevent>
<userevent id="101"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5APRIL6writer9saveAPRILEP8_IO_FILEmjP9AprilData [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/storage.cpp} {195,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/storage.cpp} {195,0}]</name></userevent>
<userevent id="102"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5APRIL6writer9saveAPRILEP8_IO_FILEmjP9AprilData [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/storage.cpp} {195,0}]</name></userevent>
<userevent id="103"><name>_GLOBAL__sub_I__ZN3hec14spatialQueriesE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {1422,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="104"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN3hec14spatialQueriesE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {1422,0}]</name></userevent>
<userevent id="105"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {1422,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="106"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN3hec14spatialQueriesE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {1422,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {1422,0}]</name></userevent>
<userevent id="107"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN3hec14spatialQueriesE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {1422,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {1422,0}]</name></userevent>
<userevent id="108"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN3hec14spatialQueriesE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {1422,0}]</name></userevent>
<userevent id="109"><name>_GLOBAL__sub_I_g_config [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="110"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I_g_config [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}]</name></userevent>
<userevent id="111"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="112"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I_g_config [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}]</name></userevent>
<userevent id="113"><name>DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="114"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I_g_config [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}] =&gt; DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]</name></userevent>
<userevent id="115"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I_g_config [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}] =&gt; DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]</name></userevent>
<userevent id="116"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I_g_config [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}]</name></userevent>
<userevent id="117"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I_g_config [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1814,0}]</name></userevent>
<userevent id="118"><name>_GLOBAL__sub_I__ZN7hilbert4xy2dEjjj [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {300,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="119"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN7hilbert4xy2dEjjj [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {300,0}]</name></userevent>
<userevent id="120"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {300,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="121"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN7hilbert4xy2dEjjj [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {300,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {300,0}]</name></userevent>
<userevent id="122"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN7hilbert4xy2dEjjj [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {300,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {300,0}]</name></userevent>
<userevent id="123"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN7hilbert4xy2dEjjj [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {300,0}]</name></userevent>
<userevent id="124"><name>_GLOBAL__sub_I__ZN4comm5probeEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {254,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="125"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4comm5probeEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {254,0}]</name></userevent>
<userevent id="126"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {254,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="127"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN4comm5probeEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {254,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {254,0}]</name></userevent>
<userevent id="128"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4comm5probeEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {254,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {254,0}]</name></userevent>
<userevent id="129"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN4comm5probeEiiRiR10MPI_Status [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {254,0}]</name></userevent>
<userevent id="130"><name>_GLOBAL__sub_I__ZN7storage25generatePartitionFilePathEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="131"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN7storage25generatePartitionFilePathEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}]</name></userevent>
<userevent id="132"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="133"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN7storage25generatePartitionFilePathEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}]</name></userevent>
<userevent id="134"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN7storage25generatePartitionFilePathEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}]</name></userevent>
<userevent id="135"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN7storage25generatePartitionFilePathEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}]</name></userevent>
<userevent id="136"><name>Increase in Heap Memory (KB) : _GLOBAL__sub_I__ZN7storage25generatePartitionFilePathEP7Dataset [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {42,0}]</name></userevent>
<userevent id="137"><name>_GLOBAL__sub_I__ZN5APRIL10generation23rasterDataspaceMetadataE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="138"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5APRIL10generation23rasterDataspaceMetadataE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}]</name></userevent>
<userevent id="139"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="140"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5APRIL10generation23rasterDataspaceMetadataE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}]</name></userevent>
<userevent id="141"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5APRIL10generation23rasterDataspaceMetadataE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}] =&gt; DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]</name></userevent>
<userevent id="142"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5APRIL10generation23rasterDataspaceMetadataE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}] =&gt; DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]</name></userevent>
<userevent id="143"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5APRIL10generation23rasterDataspaceMetadataE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}]</name></userevent>
<userevent id="144"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5APRIL10generation23rasterDataspaceMetadataE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {598,0}]</name></userevent>
<userevent id="145"><name>_GLOBAL__sub_I__ZN8twolayer12processQueryEPN3hec5QueryERSt10unique_ptrINS0_11QResultBaseESt14default_deleteIS4_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {60,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="146"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN8twolayer12processQueryEPN3hec5QueryERSt10unique_ptrINS0_11QResultBaseESt14default_deleteIS4_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {60,0}]</name></userevent>
<userevent id="147"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {60,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="148"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN8twolayer12processQueryEPN3hec5QueryERSt10unique_ptrINS0_11QResultBaseESt14default_deleteIS4_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {60,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {60,0}]</name></userevent>
<userevent id="149"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN8twolayer12processQueryEPN3hec5QueryERSt10unique_ptrINS0_11QResultBaseESt14default_deleteIS4_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {60,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {60,0}]</name></userevent>
<userevent id="150"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN8twolayer12processQueryEPN3hec5QueryERSt10unique_ptrINS0_11QResultBaseESt14default_deleteIS4_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {60,0}]</name></userevent>
<userevent id="151"><name>_GLOBAL__sub_I__ZN8twolayer12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/range_filter.cpp} {687,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="152"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN8twolayer12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/range_filter.cpp} {687,0}]</name></userevent>
<userevent id="153"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/range_filter.cpp} {687,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="154"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN8twolayer12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/range_filter.cpp} {687,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/range_filter.cpp} {687,0}]</name></userevent>
<userevent id="155"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN8twolayer12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/range_filter.cpp} {687,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/range_filter.cpp} {687,0}]</name></userevent>
<userevent id="156"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN8twolayer12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/range_filter.cpp} {687,0}]</name></userevent>
<userevent id="157"><name>_GLOBAL__sub_I__ZN8twolayer24intersection_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {491,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="158"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN8twolayer24intersection_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {491,0}]</name></userevent>
<userevent id="159"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {491,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="160"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN8twolayer24intersection_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {491,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {491,0}]</name></userevent>
<userevent id="161"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN8twolayer24intersection_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {491,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {491,0}]</name></userevent>
<userevent id="162"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN8twolayer24intersection_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {491,0}]</name></userevent>
<userevent id="163"><name>_GLOBAL__sub_I__ZN8twolayer23topological_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="164"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN8twolayer23topological_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}]</name></userevent>
<userevent id="165"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="166"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN8twolayer23topological_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}]</name></userevent>
<userevent id="167"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN8twolayer23topological_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}]</name></userevent>
<userevent id="168"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN8twolayer23topological_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}]</name></userevent>
<userevent id="169"><name>Increase in Heap Memory (KB) : _GLOBAL__sub_I__ZN8twolayer23topological_join_filter8evaluateEPN3hec18PredicateJoinQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/topology_join_filter.cpp} {520,0}]</name></userevent>
<userevent id="170"><name>_GLOBAL__sub_I__ZN12uniform_grid12processQueryEPN3hec5QueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS4_EEERSt10unique_ptrINS0_11QResultBaseESt14default_deleteISG_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/filter.cpp} {69,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="171"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN12uniform_grid12processQueryEPN3hec5QueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS4_EEERSt10unique_ptrINS0_11QResultBaseESt14default_deleteISG_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/filter.cpp} {69,0}]</name></userevent>
<userevent id="172"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/filter.cpp} {69,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="173"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN12uniform_grid12processQueryEPN3hec5QueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS4_EEERSt10unique_ptrINS0_11QResultBaseESt14default_deleteISG_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/filter.cpp} {69,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/filter.cpp} {69,0}]</name></userevent>
<userevent id="174"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN12uniform_grid12processQueryEPN3hec5QueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS4_EEERSt10unique_ptrINS0_11QResultBaseESt14default_deleteISG_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/filter.cpp} {69,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/filter.cpp} {69,0}]</name></userevent>
<userevent id="175"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN12uniform_grid12processQueryEPN3hec5QueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS4_EEERSt10unique_ptrINS0_11QResultBaseESt14default_deleteISG_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/filter.cpp} {69,0}]</name></userevent>
<userevent id="176"><name>_GLOBAL__sub_I__ZN12uniform_grid12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/range_filter.cpp} {259,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="177"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN12uniform_grid12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/range_filter.cpp} {259,0}]</name></userevent>
<userevent id="178"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/range_filter.cpp} {259,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="179"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN12uniform_grid12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/range_filter.cpp} {259,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/range_filter.cpp} {259,0}]</name></userevent>
<userevent id="180"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN12uniform_grid12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/range_filter.cpp} {259,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/range_filter.cpp} {259,0}]</name></userevent>
<userevent id="181"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN12uniform_grid12range_filter8evaluateEPN3hec10RangeQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/range_filter.cpp} {259,0}]</name></userevent>
<userevent id="182"><name>_GLOBAL__sub_I__ZN12uniform_grid10knn_filter8evaluateEPN3hec8KNNQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/knn_filter.cpp} {57,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="183"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN12uniform_grid10knn_filter8evaluateEPN3hec8KNNQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/knn_filter.cpp} {57,0}]</name></userevent>
<userevent id="184"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/knn_filter.cpp} {57,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="185"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN12uniform_grid10knn_filter8evaluateEPN3hec8KNNQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/knn_filter.cpp} {57,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/knn_filter.cpp} {57,0}]</name></userevent>
<userevent id="186"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN12uniform_grid10knn_filter8evaluateEPN3hec8KNNQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/knn_filter.cpp} {57,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/knn_filter.cpp} {57,0}]</name></userevent>
<userevent id="187"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN12uniform_grid10knn_filter8evaluateEPN3hec8KNNQueryERSt10unique_ptrINS1_11QResultBaseESt14default_deleteIS5_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/knn_filter.cpp} {57,0}]</name></userevent>
<userevent id="188"><name>_GLOBAL__sub_I__ZN12uniform_grid15distance_filter8evaluateEPN3hec17DistanceJoinQueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS5_EEERSt10unique_ptrINS1_11QResultBaseESt14default_deleteISH_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/dj_filter.cpp} {245,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="189"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN12uniform_grid15distance_filter8evaluateEPN3hec17DistanceJoinQueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS5_EEERSt10unique_ptrINS1_11QResultBaseESt14default_deleteISH_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/dj_filter.cpp} {245,0}]</name></userevent>
<userevent id="190"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/dj_filter.cpp} {245,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="191"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN12uniform_grid15distance_filter8evaluateEPN3hec17DistanceJoinQueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS5_EEERSt10unique_ptrINS1_11QResultBaseESt14default_deleteISH_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/dj_filter.cpp} {245,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/dj_filter.cpp} {245,0}]</name></userevent>
<userevent id="192"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN12uniform_grid15distance_filter8evaluateEPN3hec17DistanceJoinQueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS5_EEERSt10unique_ptrINS1_11QResultBaseESt14default_deleteISH_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/dj_filter.cpp} {245,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/dj_filter.cpp} {245,0}]</name></userevent>
<userevent id="193"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN12uniform_grid15distance_filter8evaluateEPN3hec17DistanceJoinQueryERSt13unordered_mapIi7DJBatchSt4hashIiESt8equal_toIiESaISt4pairIKiS5_EEERSt10unique_ptrINS1_11QResultBaseESt14default_deleteISH_EE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/UniformGrid/dj_filter.cpp} {245,0}]</name></userevent>
<userevent id="194"><name>_GLOBAL__sub_I__ZN10refinement8topology10insideCodeE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {489,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="195"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN10refinement8topology10insideCodeE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {489,0}]</name></userevent>
<userevent id="196"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {489,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="197"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN10refinement8topology10insideCodeE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {489,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {489,0}]</name></userevent>
<userevent id="198"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN10refinement8topology10insideCodeE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {489,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {489,0}]</name></userevent>
<userevent id="199"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN10refinement8topology10insideCodeE [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {489,0}]</name></userevent>
<userevent id="200"><name>_GLOBAL__sub_I__ZN5APRIL28getCommonSectionIDsOfObjectsEP7DatasetS1_mm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="201"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5APRIL28getCommonSectionIDsOfObjectsEP7DatasetS1_mm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}]</name></userevent>
<userevent id="202"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="203"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5APRIL28getCommonSectionIDsOfObjectsEP7DatasetS1_mm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}]</name></userevent>
<userevent id="204"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5APRIL28getCommonSectionIDsOfObjectsEP7DatasetS1_mm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}]</name></userevent>
<userevent id="205"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5APRIL28getCommonSectionIDsOfObjectsEP7DatasetS1_mm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}]</name></userevent>
<userevent id="206"><name>Increase in Heap Memory (KB) : _GLOBAL__sub_I__ZN5APRIL28getCommonSectionIDsOfObjectsEP7DatasetS1_mm [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {341,0}]</name></userevent>
<userevent id="207"><name>_GLOBAL__sub_I__ZN5APRIL12uncompressed8standard21intersectionJoinAPRILEP9AprilDataS3_Ri [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {582,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="208"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5APRIL12uncompressed8standard21intersectionJoinAPRILEP9AprilDataS3_Ri [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {582,0}]</name></userevent>
<userevent id="209"><name>__static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {582,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="210"><name>Heap Memory Used (KB) at Entry : _GLOBAL__sub_I__ZN5APRIL12uncompressed8standard21intersectionJoinAPRILEP9AprilDataS3_Ri [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {582,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {582,0}]</name></userevent>
<userevent id="211"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5APRIL12uncompressed8standard21intersectionJoinAPRILEP9AprilDataS3_Ri [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {582,0}] =&gt; __static_initialization_and_destruction_0(int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {582,0}]</name></userevent>
<userevent id="212"><name>Heap Memory Used (KB) at Exit : _GLOBAL__sub_I__ZN5APRIL12uncompressed8standard21intersectionJoinAPRILEP9AprilDataS3_Ri [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {582,0}]</name></userevent>
<userevent id="213"><name>main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="214"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}]</name></userevent>
<userevent id="215"><name>configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="216"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}]</name></userevent>
<userevent id="217"><name>MPI_Init_thread()   - Heap Memory Used (KB)</name></userevent>
<userevent id="218"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Init_thread()  </name></userevent>
<userevent id="219"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Init_thread()  </name></userevent>
<userevent id="220"><name>Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Init_thread()  </name></userevent>
<userevent id="221"><name>MPI_Intercomm_merge()   - Heap Memory Used (KB)</name></userevent>
<userevent id="222"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Intercomm_merge()  </name></userevent>
<userevent id="223"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Intercomm_merge()  </name></userevent>
<userevent id="224"><name>Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Intercomm_merge()  </name></userevent>
<userevent id="225"><name>MPI_Comm_rank()   - Heap Memory Used (KB)</name></userevent>
<userevent id="226"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Comm_rank()  </name></userevent>
<userevent id="227"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Comm_rank()  </name></userevent>
<userevent id="228"><name>MPI_Comm_split()   - Heap Memory Used (KB)</name></userevent>
<userevent id="229"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Comm_split()  </name></userevent>
<userevent id="230"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Comm_split()  </name></userevent>
<userevent id="231"><name>MPI_Comm_size()   - Heap Memory Used (KB)</name></userevent>
<userevent id="232"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Comm_size()  </name></userevent>
<userevent id="233"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Comm_size()  </name></userevent>
<userevent id="234"><name>MPI_Comm_free()   - Heap Memory Used (KB)</name></userevent>
<userevent id="235"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Comm_free()  </name></userevent>
<userevent id="236"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}] =&gt; MPI_Comm_free()  </name></userevent>
<userevent id="237"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}]</name></userevent>
<userevent id="238"><name>Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; configurer::initWorker(int, char**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {7,0}]</name></userevent>
<userevent id="239"><name>MPI_Barrier()   - Heap Memory Used (KB)</name></userevent>
<userevent id="240"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; MPI_Barrier()  </name></userevent>
<userevent id="241"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; MPI_Barrier()  </name></userevent>
<userevent id="242"><name>comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="243"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}]</name></userevent>
<userevent id="244"><name><![CDATA[comm::probe(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {6,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="245"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::probe(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {6,0}]]]></name></userevent>
<userevent id="246"><name>MPI_Probe()   - Heap Memory Used (KB)</name></userevent>
<userevent id="247"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::probe(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {6,0}] => MPI_Probe()  ]]></name></userevent>
<userevent id="248"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::probe(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {6,0}] => MPI_Probe()  ]]></name></userevent>
<userevent id="249"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::probe(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {6,0}]]]></name></userevent>
<userevent id="250"><name>comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="251"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}]</name></userevent>
<userevent id="252"><name>comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="253"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}]</name></userevent>
<userevent id="254"><name>MPI_Get_count()   - Heap Memory Used (KB)</name></userevent>
<userevent id="255"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] =&gt; MPI_Get_count()  </name></userevent>
<userevent id="256"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] =&gt; MPI_Get_count()  </name></userevent>
<userevent id="257"><name>MPI_Recv()   - Heap Memory Used (KB)</name></userevent>
<userevent id="258"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] =&gt; MPI_Recv()  </name></userevent>
<userevent id="259"><name>Message size received from all nodes</name></userevent>
<userevent id="260"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] =&gt; MPI_Recv()  </name></userevent>
<userevent id="261"><name>Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] =&gt; MPI_Recv()  </name></userevent>
<userevent id="262"><name><![CDATA[unpack::unpackSystemMetadata(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {351,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="263"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => unpack::unpackSystemMetadata(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {351,0}]]]></name></userevent>
<userevent id="264"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => unpack::unpackSystemMetadata(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {351,0}] => DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]]]></name></userevent>
<userevent id="265"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => unpack::unpackSystemMetadata(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {351,0}] => DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]]]></name></userevent>
<userevent id="266"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => unpack::unpackSystemMetadata(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/pack.cpp} {351,0}]]]></name></userevent>
<userevent id="267"><name>configurer::verifySystemDirectories() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {78,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="268"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] =&gt; configurer::verifySystemDirectories() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {78,0}]</name></userevent>
<userevent id="269"><name><![CDATA[verifyDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {57,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="270"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => configurer::verifySystemDirectories() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {78,0}] => verifyDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {57,0}]]]></name></userevent>
<userevent id="271"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => configurer::verifySystemDirectories() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {78,0}] => verifyDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {57,0}]]]></name></userevent>
<userevent id="272"><name><![CDATA[Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => configurer::verifySystemDirectories() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {78,0}] => verifyDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {57,0}]]]></name></userevent>
<userevent id="273"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] =&gt; configurer::verifySystemDirectories() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {78,0}]</name></userevent>
<userevent id="274"><name>Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] =&gt; configurer::verifySystemDirectories() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/config/configure.cpp} {78,0}]</name></userevent>
<userevent id="275"><name><![CDATA[comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="276"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]></name></userevent>
<userevent id="277"><name>MPI_Send()   - Heap Memory Used (KB)</name></userevent>
<userevent id="278"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="279"><name>Message size sent to all nodes</name></userevent>
<userevent id="280"><name>Message size sent to node 0</name></userevent>
<userevent id="281"><name><![CDATA[Message size sent to node 0 : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="282"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="283"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]></name></userevent>
<userevent id="284"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}]</name></userevent>
<userevent id="285"><name>Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] =&gt; comm::worker::handleSysMetadataMessage(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {489,0}]</name></userevent>
<userevent id="286"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}]</name></userevent>
<userevent id="287"><name>Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] =&gt; comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}]</name></userevent>
<userevent id="288"><name><![CDATA[comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="289"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}]]]></name></userevent>
<userevent id="290"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="291"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="292"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="293"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="294"><name><![CDATA[comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="295"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}]]]></name></userevent>
<userevent id="296"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]]]></name></userevent>
<userevent id="297"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]]]></name></userevent>
<userevent id="298"><name>DatasetMetadata::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {203,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="299"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => DatasetMetadata::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {203,0}]]]></name></userevent>
<userevent id="300"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => DatasetMetadata::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {203,0}]]]></name></userevent>
<userevent id="301"><name><![CDATA[getFileNameFromPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {73,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="302"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => getFileNameFromPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {73,0}]]]></name></userevent>
<userevent id="303"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => getFileNameFromPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {73,0}]]]></name></userevent>
<userevent id="304"><name>storage::generatePartitionFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {7,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="305"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => storage::generatePartitionFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {7,0}]]]></name></userevent>
<userevent id="306"><name>TwoGridPartitioning::getGlobalPPD() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1572,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="307"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => storage::generatePartitionFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {7,0}] => TwoGridPartitioning::getGlobalPPD() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1572,0}]]]></name></userevent>
<userevent id="308"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => storage::generatePartitionFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {7,0}] => TwoGridPartitioning::getGlobalPPD() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1572,0}]]]></name></userevent>
<userevent id="309"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => storage::generatePartitionFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {7,0}]]]></name></userevent>
<userevent id="310"><name>storage::generateAPRILFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {23,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="311"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => storage::generateAPRILFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {23,0}]]]></name></userevent>
<userevent id="312"><name>AprilConfig::getN() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {111,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="313"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => storage::generateAPRILFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {23,0}] => AprilConfig::getN() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {111,0}]]]></name></userevent>
<userevent id="314"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => storage::generateAPRILFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {23,0}] => AprilConfig::getN() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {111,0}]]]></name></userevent>
<userevent id="315"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => storage::generateAPRILFilePath(Dataset*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/storage/utils.cpp} {23,0}]]]></name></userevent>
<userevent id="316"><name><![CDATA[DatasetOptions::addDataset(Dataset&&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1341,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="317"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => DatasetOptions::addDataset(Dataset&&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1341,0}]]]></name></userevent>
<userevent id="318"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}] => DatasetOptions::addDataset(Dataset&&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1341,0}]]]></name></userevent>
<userevent id="319"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}] => comm::execute::prepareDataset(SerializedMsg<char>&, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {28,0}]]]></name></userevent>
<userevent id="320"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePrepareDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {531,0}]]]></name></userevent>
<userevent id="321"><name><![CDATA[comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="322"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}]]]></name></userevent>
<userevent id="323"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="324"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="325"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="326"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="327"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]]]></name></userevent>
<userevent id="328"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => DataspaceMetadata::DataspaceMetadata() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {509,0}]]]></name></userevent>
<userevent id="329"><name>Dataset::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {384,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="330"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => Dataset::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {384,0}]]]></name></userevent>
<userevent id="331"><name>DataspaceMetadata::set(double, double, double, double) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {516,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="332"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => Dataset::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {384,0}] => DataspaceMetadata::set(double, double, double, double) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {516,0}]]]></name></userevent>
<userevent id="333"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => Dataset::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {384,0}] => DataspaceMetadata::set(double, double, double, double) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {516,0}]]]></name></userevent>
<userevent id="334"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => Dataset::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {384,0}]]]></name></userevent>
<userevent id="335"><name>DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="336"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]]]></name></userevent>
<userevent id="337"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]]]></name></userevent>
<userevent id="338"><name>DatasetOptions::updateDataspace() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1360,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="339"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => DatasetOptions::updateDataspace() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1360,0}]]]></name></userevent>
<userevent id="340"><name>DatasetOptions::updateDatasetDataspaceToGlobal() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1393,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="341"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => DatasetOptions::updateDataspace() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1360,0}] => DatasetOptions::updateDatasetDataspaceToGlobal() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1393,0}]]]></name></userevent>
<userevent id="342"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => DatasetOptions::updateDataspace() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1360,0}] => DatasetOptions::updateDatasetDataspaceToGlobal() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1393,0}]]]></name></userevent>
<userevent id="343"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => DatasetOptions::updateDataspace() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1360,0}]]]></name></userevent>
<userevent id="344"><name><![CDATA[TwoGridPartitioning::setPartGridDataspace(DataspaceMetadata&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1582,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="345"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => TwoGridPartitioning::setPartGridDataspace(DataspaceMetadata&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1582,0}]]]></name></userevent>
<userevent id="346"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}] => TwoGridPartitioning::setPartGridDataspace(DataspaceMetadata&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1582,0}]]]></name></userevent>
<userevent id="347"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleDatasetInfoMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {585,0}]]]></name></userevent>
<userevent id="348"><name><![CDATA[comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="349"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}]]]></name></userevent>
<userevent id="350"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="351"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="352"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="353"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="354"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]]]></name></userevent>
<userevent id="355"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]]]></name></userevent>
<userevent id="356"><name>comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="357"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}]]]></name></userevent>
<userevent id="358"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]]]></name></userevent>
<userevent id="359"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]]]></name></userevent>
<userevent id="360"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::probe(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {6,0}]]]></name></userevent>
<userevent id="361"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::probe(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {6,0}] => MPI_Probe()  ]]></name></userevent>
<userevent id="362"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::probe(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {6,0}] => MPI_Probe()  ]]></name></userevent>
<userevent id="363"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::probe(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {6,0}]]]></name></userevent>
<userevent id="364"><name><![CDATA[comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="365"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}]]]></name></userevent>
<userevent id="366"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="367"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="368"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="369"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="370"><name><![CDATA[comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="371"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}]]]></name></userevent>
<userevent id="372"><name>Batch::Batch() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1402,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="373"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::Batch() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1402,0}]]]></name></userevent>
<userevent id="374"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::Batch() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1402,0}]]]></name></userevent>
<userevent id="375"><name>Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="376"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}]]]></name></userevent>
<userevent id="377"><name><![CDATA[shape_factory::createEmpty(DataType, Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1651,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="378"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}] => shape_factory::createEmpty(DataType, Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1651,0}]]]></name></userevent>
<userevent id="379"><name>shape_factory::createEmptyPolygonShape() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1639,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="380"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}] => shape_factory::createEmpty(DataType, Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1651,0}] => shape_factory::createEmptyPolygonShape() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1639,0}]]]></name></userevent>
<userevent id="381"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}] => shape_factory::createEmpty(DataType, Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1651,0}] => shape_factory::createEmptyPolygonShape() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1639,0}]]]></name></userevent>
<userevent id="382"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}] => shape_factory::createEmpty(DataType, Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1651,0}]]]></name></userevent>
<userevent id="383"><name><![CDATA[Batch::addObjectToBatch(Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1408,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="384"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}] => Batch::addObjectToBatch(Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1408,0}]]]></name></userevent>
<userevent id="385"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}] => Batch::addObjectToBatch(Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1408,0}]]]></name></userevent>
<userevent id="386"><name><![CDATA[Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}] => Batch::addObjectToBatch(Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1408,0}]]]></name></userevent>
<userevent id="387"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}]]]></name></userevent>
<userevent id="388"><name><![CDATA[Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Batch::deserialize(char const*, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1500,0}]]]></name></userevent>
<userevent id="389"><name><![CDATA[Dataset::storeObject(Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {256,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="390"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Dataset::storeObject(Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {256,0}]]]></name></userevent>
<userevent id="391"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Dataset::storeObject(Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {256,0}]]]></name></userevent>
<userevent id="392"><name><![CDATA[Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}] => Dataset::storeObject(Shape&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {256,0}]]]></name></userevent>
<userevent id="393"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}]]]></name></userevent>
<userevent id="394"><name><![CDATA[Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => comm::worker::deserializeBatchMessageAndHandle(char*, int, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {74,0}]]]></name></userevent>
<userevent id="395"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}]]]></name></userevent>
<userevent id="396"><name><![CDATA[Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}]]]></name></userevent>
<userevent id="397"><name><![CDATA[Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}] => comm::worker::pullBatchMessageAndHandle(MPI_Status, Dataset*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {155,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="398"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}]]]></name></userevent>
<userevent id="399"><name><![CDATA[Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::worker::listenForDatasetPartitioning(DatasetIndex) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {190,0}]]]></name></userevent>
<userevent id="400"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]></name></userevent>
<userevent id="401"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="402"><name><![CDATA[Message size sent to node 0 : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="403"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="404"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]></name></userevent>
<userevent id="405"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}]]]></name></userevent>
<userevent id="406"><name><![CDATA[Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handlePartitionDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {619,0}]]]></name></userevent>
<userevent id="407"><name><![CDATA[comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="408"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}]]]></name></userevent>
<userevent id="409"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="410"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="411"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="412"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="413"><name><![CDATA[comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="414"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}]]]></name></userevent>
<userevent id="415"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]]]></name></userevent>
<userevent id="416"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]]]></name></userevent>
<userevent id="417"><name>Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="418"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}]]]></name></userevent>
<userevent id="419"><name>TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="420"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}]]]></name></userevent>
<userevent id="421"><name><![CDATA[TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="422"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}]]]></name></userevent>
<userevent id="423"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}] => TwoGridPartitioning::getGlobalPPD() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1572,0}]]]></name></userevent>
<userevent id="424"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}] => TwoGridPartitioning::getGlobalPPD() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1572,0}]]]></name></userevent>
<userevent id="425"><name>TwoGridPartitioning::getDistributionPPD() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1564,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="426"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}] => TwoGridPartitioning::getDistributionPPD() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1564,0}]]]></name></userevent>
<userevent id="427"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}] => TwoGridPartitioning::getDistributionPPD() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1564,0}]]]></name></userevent>
<userevent id="428"><name>TwoGridPartitioning::getPartPartionExtentX() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1588,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="429"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}] => TwoGridPartitioning::getPartPartionExtentX() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1588,0}]]]></name></userevent>
<userevent id="430"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}] => TwoGridPartitioning::getPartPartionExtentX() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1588,0}]]]></name></userevent>
<userevent id="431"><name>TwoGridPartitioning::getPartPartionExtentY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1592,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="432"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}] => TwoGridPartitioning::getPartPartionExtentY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1592,0}]]]></name></userevent>
<userevent id="433"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}] => TwoGridPartitioning::getPartPartionExtentY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1592,0}]]]></name></userevent>
<userevent id="434"><name>TwoGridPartitioning::getPartitionID(int, int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1560,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="435"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}] => TwoGridPartitioning::getPartitionID(int, int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1560,0}]]]></name></userevent>
<userevent id="436"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}] => TwoGridPartitioning::getPartitionID(int, int, int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1560,0}]]]></name></userevent>
<userevent id="437"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getPartitionsForMBR(Shape*, std::vector<int, std::allocator<int> >&, std::vector<TwoLayerClass, std::allocator<TwoLayerClass> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {930,0}]]]></name></userevent>
<userevent id="438"><name>TwoLayerIndex::getOrCreatePartition(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1043,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="439"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getOrCreatePartition(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1043,0}]]]></name></userevent>
<userevent id="440"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => TwoLayerIndex::getOrCreatePartition(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1043,0}]]]></name></userevent>
<userevent id="441"><name>PartitionTwoLayer::addObject(Shape*, TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {123,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="442"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => PartitionTwoLayer::addObject(Shape*, TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {123,0}]]]></name></userevent>
<userevent id="443"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}] => PartitionTwoLayer::addObject(Shape*, TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {123,0}]]]></name></userevent>
<userevent id="444"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::addObject(Shape*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1056,0}]]]></name></userevent>
<userevent id="445"><name>TwoLayerIndex::sortPartitionsOnY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1078,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="446"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::sortPartitionsOnY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1078,0}]]]></name></userevent>
<userevent id="447"><name>BaseIndex::getPartitions() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {888,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="448"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::sortPartitionsOnY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1078,0}] => BaseIndex::getPartitions() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {888,0}]]]></name></userevent>
<userevent id="449"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::sortPartitionsOnY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1078,0}] => BaseIndex::getPartitions() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {888,0}]]]></name></userevent>
<userevent id="450"><name>PartitionTwoLayer::getContents(TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {119,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="451"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::sortPartitionsOnY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1078,0}] => PartitionTwoLayer::getContents(TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {119,0}]]]></name></userevent>
<userevent id="452"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::sortPartitionsOnY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1078,0}] => PartitionTwoLayer::getContents(TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {119,0}]]]></name></userevent>
<userevent id="453"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}] => TwoLayerIndex::sortPartitionsOnY() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1078,0}]]]></name></userevent>
<userevent id="454"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildIndex(hec::IndexType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {264,0}]]]></name></userevent>
<userevent id="455"><name>Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="456"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}]]]></name></userevent>
<userevent id="457"><name><![CDATA[APRIL::generation::setRasterBounds(DataspaceMetadata&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {12,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="458"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::setRasterBounds(DataspaceMetadata&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {12,0}]]]></name></userevent>
<userevent id="459"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::setRasterBounds(DataspaceMetadata&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {12,0}]]]></name></userevent>
<userevent id="460"><name><![CDATA[APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="461"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}]]]></name></userevent>
<userevent id="462"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}]]]></name></userevent>
<userevent id="463"><name>AprilConfig::getCellsPerDim() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {115,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="464"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => AprilConfig::getCellsPerDim() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {115,0}]]]></name></userevent>
<userevent id="465"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => AprilConfig::getCellsPerDim() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {115,0}]]]></name></userevent>
<userevent id="466"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => AprilConfig::getCellsPerDim() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {115,0}]]]></name></userevent>
<userevent id="467"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => AprilConfig::getCellsPerDim() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {115,0}]]]></name></userevent>
<userevent id="468"><name><![CDATA[APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="469"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}]]]></name></userevent>
<userevent id="470"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}]]]></name></userevent>
<userevent id="471"><name><![CDATA[APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="472"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}]]]></name></userevent>
<userevent id="473"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}]]]></name></userevent>
<userevent id="474"><name><![CDATA[APRIL::generation::mapXYToHilbert(double&, double&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {42,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="475"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}] => APRIL::generation::mapXYToHilbert(double&, double&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {42,0}]]]></name></userevent>
<userevent id="476"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}] => APRIL::generation::mapXYToHilbert(double&, double&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {42,0}]]]></name></userevent>
<userevent id="477"><name><![CDATA[APRIL::generation::mapSingleValueToHilbert(double, double, double, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {31,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="478"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}] => APRIL::generation::mapSingleValueToHilbert(double, double, double, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {31,0}]]]></name></userevent>
<userevent id="479"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}] => APRIL::generation::mapXYToHilbert(double&, double&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {42,0}]]]></name></userevent>
<userevent id="480"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}] => APRIL::generation::mapXYToHilbert(double&, double&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {42,0}]]]></name></userevent>
<userevent id="481"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}] => APRIL::generation::mapSingleValueToHilbert(double, double, double, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {31,0}]]]></name></userevent>
<userevent id="482"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}]]]></name></userevent>
<userevent id="483"><name><![CDATA[APRIL::generation::calculatePartialAndUncertain(Shape&, unsigned int&, APRIL::generation::RasterData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {128,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="484"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::calculatePartialAndUncertain(Shape&, unsigned int&, APRIL::generation::RasterData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {128,0}]]]></name></userevent>
<userevent id="485"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::calculatePartialAndUncertain(Shape&, unsigned int&, APRIL::generation::RasterData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {128,0}]]]></name></userevent>
<userevent id="486"><name><![CDATA[APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="487"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}]]]></name></userevent>
<userevent id="488"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}] => APRIL::generation::mapSingleValueToHilbert(double, double, double, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {31,0}]]]></name></userevent>
<userevent id="489"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}] => APRIL::generation::mapSingleValueToHilbert(double, double, double, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {31,0}]]]></name></userevent>
<userevent id="490"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::mapObjectToHilbertSpace(Shape&, APRIL::generation::RasterData&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {94,0}]]]></name></userevent>
<userevent id="491"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::calculatePartialAndUncertain(Shape&, unsigned int&, APRIL::generation::RasterData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {128,0}]]]></name></userevent>
<userevent id="492"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::calculatePartialAndUncertain(Shape&, unsigned int&, APRIL::generation::RasterData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {128,0}]]]></name></userevent>
<userevent id="493"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}]]]></name></userevent>
<userevent id="494"><name>hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="495"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}]]]></name></userevent>
<userevent id="496"><name><![CDATA[hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="497"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="498"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="499"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}]]]></name></userevent>
<userevent id="500"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="501"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="502"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}]]]></name></userevent>
<userevent id="503"><name><![CDATA[APRIL::generation::checkY(double&, double&, double&, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {23,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="504"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::calculatePartialAndUncertain(Shape&, unsigned int&, APRIL::generation::RasterData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {128,0}] => APRIL::generation::checkY(double&, double&, double&, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {23,0}]]]></name></userevent>
<userevent id="505"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}]]]></name></userevent>
<userevent id="506"><name><![CDATA[APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="507"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::calculatePartialAndUncertain(Shape&, unsigned int&, APRIL::generation::RasterData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {128,0}] => APRIL::generation::checkY(double&, double&, double&, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {23,0}]]]></name></userevent>
<userevent id="508"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}]]]></name></userevent>
<userevent id="509"><name><![CDATA[hilbert::d2xy(unsigned int, unsigned int, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {33,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="510"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => hilbert::d2xy(unsigned int, unsigned int, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {33,0}]]]></name></userevent>
<userevent id="511"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => hilbert::d2xy(unsigned int, unsigned int, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {33,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="512"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => hilbert::d2xy(unsigned int, unsigned int, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {33,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="513"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}]]]></name></userevent>
<userevent id="514"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::getPartialCellsFromMatrix(APRIL::generation::RasterData&, unsigned int, unsigned int**) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {254,0}]]]></name></userevent>
<userevent id="515"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}]]]></name></userevent>
<userevent id="516"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => hilbert::d2xy(unsigned int, unsigned int, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {33,0}]]]></name></userevent>
<userevent id="517"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => hilbert::d2xy(unsigned int, unsigned int, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {33,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="518"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => hilbert::d2xy(unsigned int, unsigned int, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {33,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="519"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => hilbert::d2xy(unsigned int, unsigned int, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {33,0}]]]></name></userevent>
<userevent id="520"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}]]]></name></userevent>
<userevent id="521"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}]]]></name></userevent>
<userevent id="522"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}]]]></name></userevent>
<userevent id="523"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => hilbert::d2xy(unsigned int, unsigned int, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {33,0}]]]></name></userevent>
<userevent id="524"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}]]]></name></userevent>
<userevent id="525"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}]]]></name></userevent>
<userevent id="526"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}]]]></name></userevent>
<userevent id="527"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::calculatePartialAndUncertain(Shape&, unsigned int&, APRIL::generation::RasterData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {128,0}] => APRIL::generation::checkY(double&, double&, double&, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {23,0}]]]></name></userevent>
<userevent id="528"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::calculatePartialAndUncertain(Shape&, unsigned int&, APRIL::generation::RasterData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {128,0}] => APRIL::generation::checkY(double&, double&, double&, unsigned int&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {23,0}]]]></name></userevent>
<userevent id="529"><name><![CDATA[APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="530"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}]]]></name></userevent>
<userevent id="531"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}]]]></name></userevent>
<userevent id="532"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}]]]></name></userevent>
<userevent id="533"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}]]]></name></userevent>
<userevent id="534"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}]]]></name></userevent>
<userevent id="535"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="536"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="537"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}]]]></name></userevent>
<userevent id="538"><name><![CDATA[binarySearchInVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {122,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="539"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => binarySearchInVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {122,0}]]]></name></userevent>
<userevent id="540"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => binarySearchInVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {122,0}]]]></name></userevent>
<userevent id="541"><name><![CDATA[binarySearchInIntervalVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {99,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="542"><name><![CDATA[Heap Memory Used (KB) at Entry : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => binarySearchInIntervalVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {99,0}]]]></name></userevent>
<userevent id="543"><name><![CDATA[Heap Memory Used (KB) at Exit : APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => binarySearchInIntervalVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {99,0}]]]></name></userevent>
<userevent id="544"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}]]]></name></userevent>
<userevent id="545"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="546"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}] => hilbert::rot(unsigned int, unsigned int&, unsigned int&, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {8,0}]]]></name></userevent>
<userevent id="547"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => hilbert::xy2d(unsigned int, unsigned int, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {21,0}]]]></name></userevent>
<userevent id="548"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => binarySearchInVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {122,0}]]]></name></userevent>
<userevent id="549"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => binarySearchInVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {122,0}]]]></name></userevent>
<userevent id="550"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => binarySearchInIntervalVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {99,0}]]]></name></userevent>
<userevent id="551"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}] => APRIL::generation::memory::createAPRILforObject(Shape*, DataType, AprilConfig&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {566,0}] => APRIL::generation::intervalizeRegionShape(Shape, unsigned int, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {367,0}] => APRIL::generation::computeAllAndFullIntervals(Shape&, unsigned int, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, AprilData&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {293,0}] => APRIL::generation::checkNeighborsInInterval(unsigned int&, unsigned int&, unsigned int&, APRIL::generation::RasterData&, std::vector<unsigned int, std::allocator<unsigned int> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/generate.cpp} {59,0}] => binarySearchInIntervalVector(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/utils.cpp} {99,0}]]]></name></userevent>
<userevent id="552"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}] => Dataset::buildAPRIL() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {300,0}]]]></name></userevent>
<userevent id="553"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::execute::buildIndex(SerializedMsg<char>&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {60,0}]]]></name></userevent>
<userevent id="554"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]></name></userevent>
<userevent id="555"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="556"><name><![CDATA[Message size sent to node 0 : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="557"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="558"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]></name></userevent>
<userevent id="559"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleBuildIndexMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {676,0}]]]></name></userevent>
<userevent id="560"><name><![CDATA[comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="561"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}]]]></name></userevent>
<userevent id="562"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="563"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="564"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="565"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="566"><name><![CDATA[comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="567"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}]]]></name></userevent>
<userevent id="568"><name><![CDATA[hec::Query::createFromBuffer(char*&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {15,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="569"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => hec::Query::createFromBuffer(char*&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {15,0}]]]></name></userevent>
<userevent id="570"><name><![CDATA[hec::PredicateJoinQuery::deserialize(char*&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {138,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="571"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => hec::Query::createFromBuffer(char*&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {15,0}] => hec::PredicateJoinQuery::deserialize(char*&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {138,0}]]]></name></userevent>
<userevent id="572"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => hec::Query::createFromBuffer(char*&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {15,0}] => hec::PredicateJoinQuery::deserialize(char*&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {138,0}]]]></name></userevent>
<userevent id="573"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => hec::Query::createFromBuffer(char*&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {15,0}]]]></name></userevent>
<userevent id="574"><name><![CDATA[qresult_factory::createNew(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1744,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="575"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => qresult_factory::createNew(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1744,0}]]]></name></userevent>
<userevent id="576"><name>hec::QResultCount::QResultCount(int, hec::QueryType, hec::QueryResultType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {580,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="577"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => qresult_factory::createNew(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1744,0}] => hec::QResultCount::QResultCount(int, hec::QueryType, hec::QueryResultType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {580,0}]]]></name></userevent>
<userevent id="578"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => qresult_factory::createNew(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1744,0}] => hec::QResultCount::QResultCount(int, hec::QueryType, hec::QueryResultType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {580,0}]]]></name></userevent>
<userevent id="579"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => qresult_factory::createNew(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1744,0}]]]></name></userevent>
<userevent id="580"><name>DatasetOptions::getDatasetR() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1254,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="581"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => DatasetOptions::getDatasetR() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1254,0}]]]></name></userevent>
<userevent id="582"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => DatasetOptions::getDatasetR() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1254,0}]]]></name></userevent>
<userevent id="583"><name><![CDATA[TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="584"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}]]]></name></userevent>
<userevent id="585"><name><![CDATA[twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="586"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}]]]></name></userevent>
<userevent id="587"><name><![CDATA[twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="588"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}]]]></name></userevent>
<userevent id="589"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]]]></name></userevent>
<userevent id="590"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => DatasetOptions::getDatasetByIdx(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1304,0}]]]></name></userevent>
<userevent id="591"><name>hec::QResultCount::cloneEmpty() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {682,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="592"><name>Heap Memory Used (KB) at Entry : hec::QResultCount::cloneEmpty() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {682,0}]</name></userevent>
<userevent id="593"><name>Heap Memory Used (KB) at Entry : hec::QResultCount::cloneEmpty() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {682,0}] =&gt; hec::QResultCount::QResultCount(int, hec::QueryType, hec::QueryResultType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {580,0}]</name></userevent>
<userevent id="594"><name>Heap Memory Used (KB) at Exit : hec::QResultCount::cloneEmpty() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {682,0}] =&gt; hec::QResultCount::QResultCount(int, hec::QueryType, hec::QueryResultType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {580,0}]</name></userevent>
<userevent id="595"><name>Heap Memory Used (KB) at Exit : hec::QResultCount::cloneEmpty() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {682,0}]</name></userevent>
<userevent id="596"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => hec::QResultCount::cloneEmpty() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {682,0}]]]></name></userevent>
<userevent id="597"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => hec::QResultCount::cloneEmpty() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {682,0}] => hec::QResultCount::QResultCount(int, hec::QueryType, hec::QueryResultType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {580,0}]]]></name></userevent>
<userevent id="598"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => hec::QResultCount::cloneEmpty() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {682,0}] => hec::QResultCount::QResultCount(int, hec::QueryType, hec::QueryResultType) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {580,0}]]]></name></userevent>
<userevent id="599"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => hec::QResultCount::cloneEmpty() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {682,0}]]]></name></userevent>
<userevent id="600"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => BaseIndex::getPartitions() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {888,0}]]]></name></userevent>
<userevent id="601"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => BaseIndex::getPartitions() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {888,0}]]]></name></userevent>
<userevent id="602"><name>Heap Memory Used (KB) at Entry : BaseIndex::getPartitions() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {888,0}]</name></userevent>
<userevent id="603"><name>Heap Memory Used (KB) at Exit : BaseIndex::getPartitions() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {888,0}]</name></userevent>
<userevent id="604"><name>BaseIndex::getPartition(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {892,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="605"><name>Heap Memory Used (KB) at Entry : BaseIndex::getPartition(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {892,0}]</name></userevent>
<userevent id="606"><name>Heap Memory Used (KB) at Exit : BaseIndex::getPartition(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {892,0}]</name></userevent>
<userevent id="607"><name>Heap Memory Used (KB) at Entry : PartitionTwoLayer::getContents(TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {119,0}]</name></userevent>
<userevent id="608"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => BaseIndex::getPartition(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {892,0}]]]></name></userevent>
<userevent id="609"><name>Heap Memory Used (KB) at Exit : PartitionTwoLayer::getContents(TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {119,0}]</name></userevent>
<userevent id="610"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => BaseIndex::getPartition(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {892,0}]]]></name></userevent>
<userevent id="611"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => PartitionTwoLayer::getContents(TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {119,0}]]]></name></userevent>
<userevent id="612"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => PartitionTwoLayer::getContents(TwoLayerClass) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {119,0}]]]></name></userevent>
<userevent id="613"><name><![CDATA[twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="614"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}]]]></name></userevent>
<userevent id="615"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="616"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}]]]></name></userevent>
<userevent id="617"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}]]]></name></userevent>
<userevent id="618"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}]]]></name></userevent>
<userevent id="619"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}]]]></name></userevent>
<userevent id="620"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}]]]></name></userevent>
<userevent id="621"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}]]]></name></userevent>
<userevent id="622"><name><![CDATA[twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="623"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}]]]></name></userevent>
<userevent id="624"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}]]]></name></userevent>
<userevent id="625"><name>twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="626"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="627"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="628"><name><![CDATA[twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="629"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}]]]></name></userevent>
<userevent id="630"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="631"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}]]]></name></userevent>
<userevent id="632"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}]]]></name></userevent>
<userevent id="633"><name>APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="634"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="635"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="636"><name><![CDATA[APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="637"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="638"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="639"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="640"><name><![CDATA[APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="641"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="642"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="643"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="644"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="645"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="646"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="647"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}]]]></name></userevent>
<userevent id="648"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}]]]></name></userevent>
<userevent id="649"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="650"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="651"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="652"><name><![CDATA[twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="653"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}]]]></name></userevent>
<userevent id="654"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}]]]></name></userevent>
<userevent id="655"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="656"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="657"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="658"><name>hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="659"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="660"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="661"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="662"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="663"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="664"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="665"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="666"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="667"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="668"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="669"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="670"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}]]]></name></userevent>
<userevent id="671"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}]]]></name></userevent>
<userevent id="672"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="673"><name><![CDATA[twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="674"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="675"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}]]]></name></userevent>
<userevent id="676"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}]]]></name></userevent>
<userevent id="677"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="678"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="679"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="680"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="681"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="682"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="683"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}]]]></name></userevent>
<userevent id="684"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}]]]></name></userevent>
<userevent id="685"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}]]]></name></userevent>
<userevent id="686"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}]]]></name></userevent>
<userevent id="687"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}]]]></name></userevent>
<userevent id="688"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}]]]></name></userevent>
<userevent id="689"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}]]]></name></userevent>
<userevent id="690"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}]]]></name></userevent>
<userevent id="691"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}]]]></name></userevent>
<userevent id="692"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}]]]></name></userevent>
<userevent id="693"><name>refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="694"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="695"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="696"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="697"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="698"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="699"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="700"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}]]]></name></userevent>
<userevent id="701"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}]]]></name></userevent>
<userevent id="702"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="703"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="704"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="705"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}]]]></name></userevent>
<userevent id="706"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}]]]></name></userevent>
<userevent id="707"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="708"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="709"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}]]]></name></userevent>
<userevent id="710"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="711"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="712"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="713"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}]]]></name></userevent>
<userevent id="714"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="715"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="716"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="717"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="718"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="719"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="720"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="721"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="722"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="723"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="724"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_1(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {225,0}] => twolayer::intersection_join_filter::internal_sweepRollY_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {31,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="725"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="726"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="727"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="728"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="729"><name><![CDATA[twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="730"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}]]]></name></userevent>
<userevent id="731"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}]]]></name></userevent>
<userevent id="732"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="733"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="734"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="735"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="736"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="737"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="738"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="739"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="740"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="741"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="742"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="743"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="744"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="745"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="746"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="747"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="748"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="749"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="750"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="751"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="752"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="753"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="754"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="755"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="756"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="757"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="758"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="759"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="760"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="761"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="762"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="763"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="764"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="765"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="766"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="767"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="768"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="769"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="770"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}]]]></name></userevent>
<userevent id="771"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}]]]></name></userevent>
<userevent id="772"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="773"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="774"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="775"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="776"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="777"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="778"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="779"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="780"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="781"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="782"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}]]]></name></userevent>
<userevent id="783"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}]]]></name></userevent>
<userevent id="784"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}]]]></name></userevent>
<userevent id="785"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}]]]></name></userevent>
<userevent id="786"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="787"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="788"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="789"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="790"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="791"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_2(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {258,0}] => twolayer::intersection_join_filter::internal_sweepRollY_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {63,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="792"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="793"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="794"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="795"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="796"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="797"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="798"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="799"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="800"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="801"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="802"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="803"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="804"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="805"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="806"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="807"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="808"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="809"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="810"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="811"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="812"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="813"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="814"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="815"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="816"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="817"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="818"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="819"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_5(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {340,0}] => twolayer::intersection_join_filter::internal_sweepRollY_5(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {192,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="820"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="821"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="822"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="823"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="824"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="825"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_2(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {128,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="826"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="827"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="828"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="829"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="830"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}] => APRIL::intersectionJoinIntervalLists(std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int, std::vector<unsigned int, std::allocator<unsigned int> >&, unsigned int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {9,0}]]]></name></userevent>
<userevent id="831"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="832"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="833"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="834"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="835"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="836"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="837"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="838"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="839"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_4(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {315,0}] => twolayer::intersection_join_filter::internal_sweepRollY_4(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {160,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="840"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="841"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::internal_sweepRollY_3_1(__gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, __gnu_cxx::__normal_iterator<Shape**, std::vector<Shape*, std::allocator<Shape*> > >&, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {95,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="842"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="843"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="844"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="845"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="846"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="847"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="848"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="849"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="850"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="851"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => APRIL::uncompressed::standard::intersectionJoinAPRIL(AprilData*, AprilData*, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/join.cpp} {276,0}]]]></name></userevent>
<userevent id="852"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}]]]></name></userevent>
<userevent id="853"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}]]]></name></userevent>
<userevent id="854"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="855"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="856"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="857"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="858"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="859"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="860"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="861"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => refinement::relate::refineIntersectionJoin(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/refinement/topology.cpp} {378,0}]]]></name></userevent>
<userevent id="862"><name><![CDATA[Heap Memory Used (KB) at Entry : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="863"><name><![CDATA[Heap Memory Used (KB) at Exit : twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="864"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="865"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => twolayer::intersection_join_filter::sweepRollY_3(std::vector<Shape*, std::allocator<Shape*> >*, std::vector<Shape*, std::allocator<Shape*> >*, int, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {281,0}] => twolayer::intersection_join_filter::forwardPair(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {9,0}] => APRIL::standard::IntermediateFilterEntrypoint(Shape*, Shape*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/APRIL/filter.cpp} {229,0}] => hec::QResultCount::addResult(unsigned long, unsigned long) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {591,0}]]]></name></userevent>
<userevent id="866"><name>mergeResultObjects(hec::QResultBase*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {26,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="867"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => mergeResultObjects(hec::QResultBase*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {26,0}]]]></name></userevent>
<userevent id="868"><name>hec::QResultCount::mergeResults(hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {652,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="869"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => mergeResultObjects(hec::QResultBase*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {26,0}] => hec::QResultCount::mergeResults(hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {652,0}]]]></name></userevent>
<userevent id="870"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => mergeResultObjects(hec::QResultBase*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {26,0}] => hec::QResultCount::mergeResults(hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {652,0}]]]></name></userevent>
<userevent id="871"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}] => mergeResultObjects(hec::QResultBase*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {26,0}]]]></name></userevent>
<userevent id="872"><name>Heap Memory Used (KB) at Entry : mergeResultObjects(hec::QResultBase*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {26,0}]</name></userevent>
<userevent id="873"><name>Heap Memory Used (KB) at Entry : mergeResultObjects(hec::QResultBase*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {26,0}] =&gt; hec::QResultCount::mergeResults(hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {652,0}]</name></userevent>
<userevent id="874"><name>Heap Memory Used (KB) at Exit : mergeResultObjects(hec::QResultBase*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {26,0}] =&gt; hec::QResultCount::mergeResults(hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {652,0}]</name></userevent>
<userevent id="875"><name>Heap Memory Used (KB) at Exit : mergeResultObjects(hec::QResultBase*, hec::QResultBase*) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {26,0}]</name></userevent>
<userevent id="876"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}] => twolayer::intersection_join_filter::evaluate(hec::PredicateJoinQuery*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/intersection_join_filter.cpp} {363,0}]]]></name></userevent>
<userevent id="877"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}] => twolayer::processQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/TwoLayer/filter.cpp} {6,0}]]]></name></userevent>
<userevent id="878"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}] => TwoLayerIndex::evaluateQuery(hec::Query*, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1091,0}]]]></name></userevent>
<userevent id="879"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => comm::execute::evaluateQuery(SerializedMsg<char>&, std::unique_ptr<hec::QResultBase, std::default_delete<hec::QResultBase> >&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_common.cpp} {129,0}]]]></name></userevent>
<userevent id="880"><name><![CDATA[hec::QResultCount::serialize(char**, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {605,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="881"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => hec::QResultCount::serialize(char**, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {605,0}]]]></name></userevent>
<userevent id="882"><name>hec::QResultCount::calculateBufferSize() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {596,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="883"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => hec::QResultCount::serialize(char**, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {605,0}] => hec::QResultCount::calculateBufferSize() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {596,0}]]]></name></userevent>
<userevent id="884"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => hec::QResultCount::serialize(char**, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {605,0}] => hec::QResultCount::calculateBufferSize() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {596,0}]]]></name></userevent>
<userevent id="885"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => hec::QResultCount::serialize(char**, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/API/containers.cpp} {605,0}]]]></name></userevent>
<userevent id="886"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="887"><name><![CDATA[Message size sent to node 0 : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="888"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="889"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleQueryMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {774,0}]]]></name></userevent>
<userevent id="890"><name><![CDATA[comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="891"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}]]]></name></userevent>
<userevent id="892"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="893"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => MPI_Get_count()  ]]></name></userevent>
<userevent id="894"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="895"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="896"><name>DatasetOptions::unloadDataset(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1262,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="897"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => DatasetOptions::unloadDataset(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1262,0}]]]></name></userevent>
<userevent id="898"><name>Dataset::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {499,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="899"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => DatasetOptions::unloadDataset(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1262,0}] => Dataset::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {499,0}]]]></name></userevent>
<userevent id="900"><name>BaseIndex::~BaseIndex() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {923,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="901"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => DatasetOptions::unloadDataset(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1262,0}] => Dataset::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {499,0}] => BaseIndex::~BaseIndex() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {923,0}]]]></name></userevent>
<userevent id="902"><name>BaseIndex::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {911,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="903"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => DatasetOptions::unloadDataset(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1262,0}] => Dataset::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {499,0}] => BaseIndex::~BaseIndex() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {923,0}] => BaseIndex::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {911,0}]]]></name></userevent>
<userevent id="904"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => DatasetOptions::unloadDataset(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1262,0}] => Dataset::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {499,0}] => BaseIndex::~BaseIndex() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {923,0}] => BaseIndex::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {911,0}]]]></name></userevent>
<userevent id="905"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => DatasetOptions::unloadDataset(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1262,0}] => Dataset::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {499,0}] => BaseIndex::~BaseIndex() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {923,0}]]]></name></userevent>
<userevent id="906"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => DatasetOptions::unloadDataset(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1262,0}] => Dataset::clear() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {499,0}]]]></name></userevent>
<userevent id="907"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => DatasetOptions::unloadDataset(int) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/containers.cpp} {1262,0}]]]></name></userevent>
<userevent id="908"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]></name></userevent>
<userevent id="909"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="910"><name><![CDATA[Message size sent to node 0 : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="911"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="912"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]></name></userevent>
<userevent id="913"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::handleUnloadDatasetMessage(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {550,0}]]]></name></userevent>
<userevent id="914"><name><![CDATA[comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="915"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}]]]></name></userevent>
<userevent id="916"><name><![CDATA[comm::recv::receiveInstructionMessage(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {37,0}]  - Heap Memory Used (KB)]]></name></userevent>
<userevent id="917"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}] => comm::recv::receiveInstructionMessage(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {37,0}]]]></name></userevent>
<userevent id="918"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}] => comm::recv::receiveInstructionMessage(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {37,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="919"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}] => comm::recv::receiveInstructionMessage(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {37,0}] => MPI_Recv()  ]]></name></userevent>
<userevent id="920"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}] => comm::recv::receiveInstructionMessage(int, int, int&, MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/recv.cpp} {37,0}]]]></name></userevent>
<userevent id="921"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]></name></userevent>
<userevent id="922"><name><![CDATA[Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="923"><name><![CDATA[Message size sent to node 0 : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="924"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}] => MPI_Send()  ]]></name></userevent>
<userevent id="925"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}] => comm::send::sendResponse(int, int, int&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/send.cpp} {7,0}]]]></name></userevent>
<userevent id="926"><name><![CDATA[Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] => comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}] => comm::worker::pullIncoming(MPI_Status) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {942,0}] => comm::worker::pullInstructionAndPerform(MPI_Status&) [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {458,0}]]]></name></userevent>
<userevent id="927"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}]</name></userevent>
<userevent id="928"><name>Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; comm::worker::listen() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/src/env/comm_worker.cpp} {1039,0}]</name></userevent>
<userevent id="929"><name>terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}]  - Heap Memory Used (KB)</name></userevent>
<userevent id="930"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}]</name></userevent>
<userevent id="931"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}] =&gt; MPI_Barrier()  </name></userevent>
<userevent id="932"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}] =&gt; MPI_Barrier()  </name></userevent>
<userevent id="933"><name>MPI_Finalize()   - Heap Memory Used (KB)</name></userevent>
<userevent id="934"><name>Heap Memory Used (KB) at Entry : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}] =&gt; MPI_Finalize()  </name></userevent>
<userevent id="935"><name>Peak Memory Usage Resident Set Size (VmHWM) (KB)</name></userevent>
<userevent id="936"><name>Memory Footprint (VmRSS) (KB)</name></userevent>
<userevent id="937"><name>Threads</name></userevent>
<userevent id="938"><name>Voluntary Context Switches</name></userevent>
<userevent id="939"><name>Non-voluntary Context Switches</name></userevent>
<userevent id="940"><name>Memory Footprint (VmRSS) (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}] =&gt; MPI_Finalize()  </name></userevent>
<userevent id="941"><name>Peak Memory Usage Resident Set Size (VmHWM) (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}] =&gt; MPI_Finalize()  </name></userevent>
<userevent id="942"><name>Threads : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}] =&gt; MPI_Finalize()  </name></userevent>
<userevent id="943"><name>Voluntary Context Switches : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}] =&gt; MPI_Finalize()  </name></userevent>
<userevent id="944"><name>Non-voluntary Context Switches : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}] =&gt; MPI_Finalize()  </name></userevent>
<userevent id="945"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}] =&gt; MPI_Finalize()  </name></userevent>
<userevent id="946"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}] =&gt; terminate() [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {21,0}]</name></userevent>
<userevent id="947"><name>Heap Memory Used (KB) at Exit : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}]</name></userevent>
<userevent id="948"><name>Increase in Heap Memory (KB) : main [{/home/hec/thanasis/Hecatoncheir/Hecatoncheir/worker.cpp} {45,0}]</name></userevent>
<userevent id="949"><name>Heap Memory Used (KB) at Exit : .TAU application</name></userevent>
</definitions>

<profile thread="1.0.0.61237">
<name>final</name>
<timestamp>1757711789005818</timestamp>
<interval_data metrics="0 ">
0 1 33 1058345 3010006307 
1 1 1 120 141 
2 1 0 21 21 
3 1 1 92 103 
4 1 0 11 11 
5 1 1 214 229 
6 1 0 15 15 
7 1 1 320 341 
8 1 0 21 21 
9 1 1 119 137 
10 1 0 18 18 
11 1 1 118 130 
12 1 0 12 12 
13 1 1 184 195 
14 1 0 11 11 
15 1 1 359 374 
16 1 0 15 15 
17 1 1 109 120 
18 1 0 11 11 
19 1 1 481 494 
20 1 0 13 13 
21 1 1 124 136 
22 1 0 12 12 
23 1 1 203 230 
24 1 0 27 27 
25 1 1 176 189 
26 1 0 13 13 
27 1 1 103 114 
28 1 0 11 11 
29 1 1 126 138 
30 1 0 12 12 
31 1 1 291 304 
32 1 0 13 13 
33 1 1 473 535 
34 1 1 50 62 
35 10 0 80 80 
36 1 1 108 119 
37 1 0 11 11 
38 1 1 157 169 
39 1 0 12 12 
40 1 1 163 175 
41 1 0 12 12 
42 1 1 278 303 
43 1 1 15 25 
44 1 1 119 131 
45 1 0 12 12 
46 1 1 446 459 
47 1 0 13 13 
48 1 1 135 147 
49 1 0 12 12 
50 1 1 345 358 
51 1 0 13 13 
52 1 1 113 124 
53 1 0 11 11 
54 1 1 456 476 
55 1 0 20 20 
56 1 1 718 738 
57 1 0 20 20 
58 1 1 543 556 
59 1 0 13 13 
60 1 1 565 588 
61 1 0 23 23 
62 1 1 134 146 
63 1 0 12 12 
64 1 1 184 197 
65 1 0 13 13 
66 1 4 4771 3008939366 
67 1 7 122 308297 
68 1 0 305396 305396 
69 1 0 1763 1763 
70 2 0 20 20 
71 1 0 974 974 
72 1 0 10 10 
73 1 0 12 12 
74 3 0 4015 4015 
75 1 24 1950 3008608789 
76 38 38 401 1202453586 
77 38 0 1202453185 1202453185 
78 12 12 5112 2029628755 
79 1 5 162 346 
80 37 0 267 267 
81 38 0 371725 371725 
82 1 2 14 29 
83 1 3 34 79 
84 3 0 45 45 
85 7 7 156 317 
86 8 0 184 184 
87 2 6 76 626 
88 2 14 276 518 
89 2 0 20 20 
90 2 0 26 26 
91 2 2 64 85 
92 100001 0 462484 462484 
93 2 2 52 69 
94 2 0 17 17 
95 2 0 16 16 
96 2 14 264 515 
97 2 2 66 84 
98 2 0 18 18 
99 10 0 102 102 
100 2 2 49 68 
101 2 0 19 19 
102 2 0 18 18 
103 2 10 6801 227397792 
104 2 54 639 227390886 
105 26 78 26577 3914728 
106 26 100053 1623135 3516477 
107 26 0 160 160 
108 26 100027 584874 1323794 
109 26 26 1078 1288 
110 26 0 210 210 
111 100001 0 737632 737632 
112 100001 0 569388 569388 
113 1 4 2097 1778613294 
114 1 6 2930 1778611109 
115 2 1604770 1200305 20545915 
116 1604768 816291 11967668 19083209 
117 616289 500003 3853353 6162886 
118 100001 0 457648 457648 
119 100001 0 462225 462225 
120 100001 0 465278 465278 
121 100001 0 461919 461919 
122 100001 0 480530 480530 
123 100001 0 472125 472125 
124 2 33752 97408 262401 
125 3 0 58 58 
126 50004 0 262642 262642 
127 2 200599 555100471 1758062241 
128 2 0 24 24 
129 200597 401194 6221741 1202961746 
130 200597 0 5424478 5424478 
131 200597 802388 6577032 1191315527 
132 200597 6635403 13280763 184734933 
133 6279639 0 161799449 161799449 
134 355764 0 9654721 9654721 
135 200597 2583972 10493216 77189181 
136 200597 991872 6926812 452009907 
137 1492397 23878352 64898018 668595652 
138 31787424 0 805584022 805584022 
139 2583972 0 66695965 66695965 
140 200597 788037 6829357 470804474 
141 494317 7909072 21907280 223793668 
142 293720 809691 8680404 240181449 
143 231211 0 5986894 5986894 
144 77955 0 2001594 2001594 
145 1 5 1521 23039966 
146 1 4 18371 23038330 
147 1 1 2155 2186 
148 1 0 31 31 
149 1 1 581 607 
150 2 0 40 40 
151 1 0 21 21 
152 1 1 503 23017145 
153 1 1 532 23016642 
154 1 25597 24732 23016110 
155 1 1 18 32 
156 1211 0 8394 8394 
157 903 674519 385500 17700723 
158 674519 310306 4682972 17315223 
159 1806 11112 17819 1613484 
160 431764 431764 3227064 16476584 
161 1806 109569 107789 2220706 
162 8127 33474 78723 1137273 
163 431764 691514 3498194 13249520 
164 431764 184055 3256243 5096788 
165 184055 0 1840545 1840545 
166 100001 238 916094 929734 
167 1806 864 12038 1275947 
168 100001 0 753866 753866 
169 864 40054 31750 1263909 
170 1806 7809 15825 67935 
171 223020 63271 3900672 4405451 
172 11112 46148 105548 1595665 
173 7809 103 48153 52110 
174 1 1 6398 6421 
175 1 0 23 23 
176 1 1 40 54 
177 1 0 14 14 
178 2 8 160 564691 
179 2 2 247932 564392 
180 2 2 311585 316460 
181 2 2 971 4875 
182 2 0 3904 3904 
183 1 2 6265 6413 
184 1 1 22 88 
185 1 3 46 16954 
186 1 0 13448 13448 
</interval_data>
<atomic_data>
0 1 7424 7424 7424 55115776
1 1 7424 7424 7424 55115776
2 1 1 1 1 1
3 1 0 0 0 0
4 1 0 0 0 0
5 1 7680 7680 7680 58982400
6 50786299 1830172 7680 1824239.000169632 1.69460715131733E+20
7 1 7680 7680 7680 58982400
8 1 67792 67792 67792 4595755264
9 1 67792 67792 67792 4595755264
10 1 67792 67792 67792 4595755264
11 1 67792 67792 67792 4595755264
12 50786299 1830172 67792 1824239.255471874 1.694607419585031E+20
13 1 67792 67792 67792 4595755264
14 1 67792 67792 67792 4595755264
15 1 68176 68176 68176 4647966976
16 1 68176 68176 68176 4647966976
17 1 68176 68176 68176 4647966976
18 1 68176 68176 68176 4647966976
19 1 68176 68176 68176 4647966976
20 1 68176 68176 68176 4647966976
21 1 72272 72272 72272 5223241984
22 1 72272 72272 72272 5223241984
23 1 72272 72272 72272 5223241984
24 1 72272 72272 72272 5223241984
25 1 72272 72272 72272 5223241984
26 1 72272 72272 72272 5223241984
27 1 77008 77008 77008 5930232064
28 1 77008 77008 77008 5930232064
29 1 77008 77008 77008 5930232064
30 1 77008 77008 77008 5930232064
31 1 77008 77008 77008 5930232064
32 1 77008 77008 77008 5930232064
33 1 77664 77664 77664 6031696896
34 1 77664 77664 77664 6031696896
35 1 77664 77664 77664 6031696896
36 1 77664 77664 77664 6031696896
37 1 77664 77664 77664 6031696896
38 1 77664 77664 77664 6031696896
39 1 78944 78944 78944 6232155136
40 1 78944 78944 78944 6232155136
41 1 78944 78944 78944 6232155136
42 1 78944 78944 78944 6232155136
43 1 78944 78944 78944 6232155136
44 1 78944 78944 78944 6232155136
45 1 83040 83040 83040 6895641600
46 1 83040 83040 83040 6895641600
47 1 83040 83040 83040 6895641600
48 1 83040 83040 83040 6895641600
49 1 83040 83040 83040 6895641600
50 1 83040 83040 83040 6895641600
51 1 100576 100576 100576 10115531776
52 1 100576 100576 100576 10115531776
53 1 100576 100576 100576 10115531776
54 1 100576 100576 100576 10115531776
55 1 100576 100576 100576 10115531776
56 1 100576 100576 100576 10115531776
57 1 101748 101748 101748 10352655504
58 1 101748 101748 101748 10352655504
59 1 101876 101876 101876 10378719376
60 1 101876 101876 101876 10378719376
61 1 101876 101876 101876 10378719376
62 1 101876 101876 101876 10378719376
63 648 1553016 36 17196.54938271605 8869599888752
64 1 128 128 128 16384
65 1 117492 117492 117492 13804370064
66 1 117492 117492 117492 13804370064
67 1 117492 117492 117492 13804370064
68 1 117492 117492 117492 13804370064
69 1 117492 117492 117492 13804370064
70 1 117492 117492 117492 13804370064
71 1 117620 117620 117620 13834464400
72 1 117620 117620 117620 13834464400
73 1 117620 117620 117620 13834464400
74 1 117620 117620 117620 13834464400
75 1 117620 117620 117620 13834464400
76 1 117620 117620 117620 13834464400
77 1 124660 124660 124660 15540115600
78 1 124660 124660 124660 15540115600
79 1 124660 124660 124660 15540115600
80 1 124660 124660 124660 15540115600
81 1 124788 124788 124788 15572044944
82 1 128 128 128 16384
83 1 124788 124788 124788 15572044944
84 1 128 128 128 16384
85 1 128116 128116 128116 16413709456
86 1 128116 128116 128116 16413709456
87 1 128116 128116 128116 16413709456
88 1 128116 128116 128116 16413709456
89 1 128116 128116 128116 16413709456
90 1 128116 128116 128116 16413709456
91 1 128884 128884 128884 16611085456
92 1 128884 128884 128884 16611085456
93 1 128884 128884 128884 16611085456
94 1 128884 128884 128884 16611085456
95 1 128884 128884 128884 16611085456
96 1 128884 128884 128884 16611085456
97 1 132340 132340 132340 17513875600
98 1 132340 132340 132340 17513875600
99 1 132340 132340 132340 17513875600
100 1 132340 132340 132340 17513875600
101 1 132340 132340 132340 17513875600
102 1 132340 132340 132340 17513875600
103 1 137076 137076 137076 18789829776
104 1 137076 137076 137076 18789829776
105 1 137076 137076 137076 18789829776
106 1 137076 137076 137076 18789829776
107 1 137076 137076 137076 18789829776
108 1 137076 137076 137076 18789829776
109 1 147572 147572 147572 21777495184
110 1 147572 147572 147572 21777495184
111 1 147572 147572 147572 21777495184
112 1 147572 147572 147572 21777495184
113 10 1049452 147572 336801.6 1725685713440
114 1 147572 147572 147572 21777495184
115 1 147572 147572 147572 21777495184
116 1 147572 147572 147572 21777495184
117 1 147572 147572 147572 21777495184
118 1 147572 147572 147572 21777495184
119 1 147572 147572 147572 21777495184
120 1 147572 147572 147572 21777495184
121 1 147572 147572 147572 21777495184
122 1 147572 147572 147572 21777495184
123 1 147572 147572 147572 21777495184
124 1 151412 151412 151412 22925593744
125 1 151412 151412 151412 22925593744
126 1 151412 151412 151412 22925593744
127 1 151412 151412 151412 22925593744
128 1 151412 151412 151412 22925593744
129 1 151412 151412 151412 22925593744
130 1 153716 153716 153716 23628608656
131 1 153716 153716 153716 23628608656
132 1 153844 153844 153844 23667976336
133 1 153844 153844 153844 23667976336
134 1 153844 153844 153844 23667976336
135 1 153844 153844 153844 23667976336
136 1 128 128 128 16384
137 1 163060 163060 163060 26588563600
138 1 163060 163060 163060 26588563600
139 1 163060 163060 163060 26588563600
140 1 163060 163060 163060 26588563600
141 1 163060 163060 163060 26588563600
142 1 163060 163060 163060 26588563600
143 1 163060 163060 163060 26588563600
144 1 163060 163060 163060 26588563600
145 1 164212 164212 164212 26965580944
146 1 164212 164212 164212 26965580944
147 1 164212 164212 164212 26965580944
148 1 164212 164212 164212 26965580944
149 1 164212 164212 164212 26965580944
150 1 164212 164212 164212 26965580944
151 1 178932 178932 178932 32016660624
152 1 178932 178932 178932 32016660624
153 1 178932 178932 178932 32016660624
154 1 178932 178932 178932 32016660624
155 1 178932 178932 178932 32016660624
156 1 178932 178932 178932 32016660624
157 1 179956 179956 179956 32384161936
158 1 179956 179956 179956 32384161936
159 1 179956 179956 179956 32384161936
160 1 179956 179956 179956 32384161936
161 1 179956 179956 179956 32384161936
162 1 179956 179956 179956 32384161936
163 1 182900 182900 182900 33452410000
164 1 182900 182900 182900 33452410000
165 1 183028 183028 183028 33499248784
166 1 183028 183028 183028 33499248784
167 1 183028 183028 183028 33499248784
168 1 183028 183028 183028 33499248784
169 1 128 128 128 16384
170 1 184692 184692 184692 34111134864
171 1 184692 184692 184692 34111134864
172 1 184692 184692 184692 34111134864
173 1 184692 184692 184692 34111134864
174 1 184692 184692 184692 34111134864
175 1 184692 184692 184692 34111134864
176 1 199924 199924 199924 39969605776
177 1 199924 199924 199924 39969605776
178 1 199924 199924 199924 39969605776
179 1 199924 199924 199924 39969605776
180 1 199924 199924 199924 39969605776
181 1 199924 199924 199924 39969605776
182 1 226036 226036 226036 51092273296
183 1 226036 226036 226036 51092273296
184 1 226036 226036 226036 51092273296
185 1 226036 226036 226036 51092273296
186 1 226036 226036 226036 51092273296
187 1 226036 226036 226036 51092273296
188 1 240480 240480 240480 57830630400
189 1 240480 240480 240480 57830630400
190 1 240480 240480 240480 57830630400
191 1 240480 240480 240480 57830630400
192 1 240480 240480 240480 57830630400
193 1 240480 240480 240480 57830630400
194 1 273760 273760 273760 74944537600
195 1 273760 273760 273760 74944537600
196 1 273760 273760 273760 74944537600
197 1 273760 273760 273760 74944537600
198 1 273760 273760 273760 74944537600
199 1 273760 273760 273760 74944537600
200 1 275108 275108 275108 75684411664
201 1 275108 275108 275108 75684411664
202 1 275236 275236 275236 75754855696
203 1 275236 275236 275236 75754855696
204 1 275236 275236 275236 75754855696
205 1 275236 275236 275236 75754855696
206 1 128 128 128 16384
207 1 277156 277156 277156 76815448336
208 1 277156 277156 277156 76815448336
209 1 277156 277156 277156 76815448336
210 1 277156 277156 277156 76815448336
211 1 277156 277156 277156 76815448336
212 1 277156 277156 277156 76815448336
213 1 277156 277156 277156 76815448336
214 1 277156 277156 277156 76815448336
215 1 277156 277156 277156 76815448336
216 1 277156 277156 277156 76815448336
217 1 277156 277156 277156 76815448336
218 1 277156 277156 277156 76815448336
219 1 286372 286372 286372 82008922384
220 1 9216 9216 9216 84934656
221 1 286500 286500 286500 82082250000
222 1 286500 286500 286500 82082250000
223 1 286628 286628 286628 82155610384
224 1 128 128 128 16384
225 2 286628 286628 286628 164311220768
226 2 286628 286628 286628 164311220768
227 2 286628 286628 286628 164311220768
228 1 286628 286628 286628 82155610384
229 1 286628 286628 286628 82155610384
230 1 286628 286628 286628 82155610384
231 1 286628 286628 286628 82155610384
232 1 286628 286628 286628 82155610384
233 1 286628 286628 286628 82155610384
234 1 286628 286628 286628 82155610384
235 1 286628 286628 286628 82155610384
236 1 286628 286628 286628 82155610384
237 1 286628 286628 286628 82155610384
238 1 9472 9472 9472 89718784
239 3 1830172 286628 1315657.333333333 6781214709552
240 1 286628 286628 286628 82155610384
241 1 286628 286628 286628 82155610384
242 1 286628 286628 286628 82155610384
243 1 286628 286628 286628 82155610384
244 38 1830172 286628 1092832.105263158 56252138183888
245 12 1830172 286628 1056994 19361712076736
246 38 1830172 286628 1092832.105263158 56252138183888
247 12 1830172 286628 1056994 19361712076736
248 12 1830172 286628 1056994 19361712076736
249 12 1830172 286628 1056994 19361712076736
250 12 1830172 286628 1056994 19361712076736
251 12 1830172 286628 1056994 19361712076736
252 1 286628 286628 286628 82155610384
253 1 286628 286628 286628 82155610384
254 37 1830172 286628 1072904 52902608634304
255 1 286628 286628 286628 82155610384
256 1 286628 286628 286628 82155610384
257 38 1830172 286628 1092832.105263158 56252138183888
258 1 286628 286628 286628 82155610384
259 38 150365180 0 28722102.60526316 8.146474517110781E+16
260 1 286756 286756 286756 82229003536
261 1 128 128 128 16384
262 1 286756 286756 286756 82229003536
263 1 286756 286756 286756 82229003536
264 2 286756 286756 286756 164458007072
265 2 286756 286756 286756 164458007072
266 1 286756 286756 286756 82229003536
267 1 286756 286756 286756 82229003536
268 1 286756 286756 286756 82229003536
269 3 286884 286756 286841.3333333333 246833862448
270 3 286884 286756 286841.3333333333 246833862448
271 3 286884 286884 286884 246907288368
272 1 128 128 128 16384
273 1 286884 286884 286884 82302429456
274 1 128 128 128 16384
275 7 1830172 286884 1498170.857142857 17931299677680
276 1 286884 286884 286884 82302429456
277 8 1830172 286884 1539671 21280829227264
278 1 286884 286884 286884 82302429456
279 8 20 0 2.5 400
280 8 20 0 2.5 400
281 1 0 0 0 0
282 1 286884 286884 286884 82302429456
283 1 286884 286884 286884 82302429456
284 1 286884 286884 286884 82302429456
285 1 256 256 256 65536
286 12 1830172 286884 1185622.666666667 22629086015936
287 3 780720 256 514514.6666666667 1191033738560
288 2 286884 286884 286884 164604858912
289 2 286884 286884 286884 164604858912
290 2 286884 286884 286884 164604858912
291 2 286884 286884 286884 164604858912
292 2 286884 286884 286884 164604858912
293 2 286884 286884 286884 164604858912
294 2 286884 286884 286884 164604858912
295 2 286884 286884 286884 164604858912
296 4 286884 286884 286884 329209717824
297 4 286884 286884 286884 329209717824
298 2 286884 286884 286884 164604858912
299 2 286884 286884 286884 164604858912
300 2 286884 286884 286884 164604858912
301 2 286884 286884 286884 164604858912
302 2 286884 286884 286884 164604858912
303 2 286884 286884 286884 164604858912
304 2 286884 286884 286884 164604858912
305 2 286884 286884 286884 164604858912
306 100001 1830172 286884 1830141.134548655 3.349497700327978E+17
307 2 286884 286884 286884 164604858912
308 2 286884 286884 286884 164604858912
309 2 286884 286884 286884 164604858912
310 2 286884 286884 286884 164604858912
311 2 286884 286884 286884 164604858912
312 2 286884 286884 286884 164604858912
313 2 286884 286884 286884 164604858912
314 2 286884 286884 286884 164604858912
315 2 286884 286884 286884 164604858912
316 2 286884 286884 286884 164604858912
317 2 286884 286884 286884 164604858912
318 2 286884 286884 286884 164604858912
319 2 286884 286884 286884 164604858912
320 2 286884 286884 286884 164604858912
321 2 1049452 286884 668168 1183651929760
322 2 1049452 286884 668168 1183651929760
323 2 1049452 286884 668168 1183651929760
324 2 1049452 286884 668168 1183651929760
325 2 1049452 286884 668168 1183651929760
326 2 1049452 286884 668168 1183651929760
327 2 1049452 286884 668168 1183651929760
328 2 1049452 286884 668168 1183651929760
329 2 1049452 286884 668168 1183651929760
330 2 1049452 286884 668168 1183651929760
331 2 1049452 286884 668168 1183651929760
332 2 1049452 286884 668168 1183651929760
333 2 1049452 286884 668168 1183651929760
334 2 1049452 286884 668168 1183651929760
335 10 1830172 286884 1132969.6 16949073987616
336 2 1049452 286884 668168 1183651929760
337 2 1049452 286884 668168 1183651929760
338 2 1049452 286884 668168 1183651929760
339 2 1049452 286884 668168 1183651929760
340 2 1049452 286884 668168 1183651929760
341 2 1049452 286884 668168 1183651929760
342 2 1049452 286884 668168 1183651929760
343 2 1049452 286884 668168 1183651929760
344 2 1049452 286884 668168 1183651929760
345 2 1049452 286884 668168 1183651929760
346 2 1049452 286884 668168 1183651929760
347 2 1049452 286884 668168 1183651929760
348 2 1049452 286884 668168 1183651929760
349 2 1049452 286884 668168 1183651929760
350 2 1049452 286884 668168 1183651929760
351 2 1049452 286884 668168 1183651929760
352 2 1049452 286884 668168 1183651929760
353 2 1049452 286884 668168 1183651929760
354 2 1049452 286884 668168 1183651929760
355 2 1049452 286884 668168 1183651929760
356 2 1049452 286884 668168 1183651929760
357 2 1049452 286884 668168 1183651929760
358 2 1049452 286884 668168 1183651929760
359 2 1049452 286884 668168 1183651929760
360 26 1830172 286884 1109372.769230769 36890426107152
361 26 1830172 286884 1109372.769230769 36890426107152
362 26 1830172 286884 1109372.769230769 36890426107152
363 26 1830172 286884 1109372.769230769 36890426107152
364 26 1830172 286884 1109372.769230769 36890426107152
365 26 1830172 286884 1109372.769230769 36890426107152
366 26 1830172 286884 1109372.769230769 36890426107152
367 26 1830172 286884 1109372.769230769 36890426107152
368 26 1830172 286884 1109372.769230769 36890426107152
369 26 1830172 286884 1116815.076923077 37380131517728
370 26 1830172 286884 1116815.076923077 37380131517728
371 26 1830172 286884 1116815.076923077 37380131517728
372 26 1830172 286884 1116815.076923077 37380131517728
373 26 1830172 286884 1116815.076923077 37380131517728
374 26 1830172 286884 1116815.076923077 37380131517728
375 26 1830172 286884 1116815.076923077 37380131517728
376 26 1830172 286884 1116815.076923077 37380131517728
377 26 1830172 286884 1116815.076923077 37380131517728
378 26 1830172 286884 1116815.076923077 37380131517728
379 26 1830172 286884 1116815.076923077 37380131517728
380 26 1830172 286884 1116815.076923077 37380131517728
381 26 1830172 286884 1116815.076923077 37380131517728
382 26 1830172 286884 1116815.076923077 37380131517728
383 100001 377260 286884 301612.7810321897 9164528525558032
384 100001 377260 286884 301612.7810321897 9164528525558032
385 100001 377260 286884 301613.0626293737 9164545475850512
386 220 128 128 128 3604480
387 26 1830172 315044 1125066.153846154 37906034874656
388 5 123392 128 42905.6 19810844672
389 100001 382240 315044 350024.8431515685 1.229166851481454E+16
390 100001 382240 315044 350024.8431515685 1.229166851481454E+16
391 100001 382240 315044 350025.5151048489 1.229171536951021E+16
392 367 9728 40 183.0953678474114 134290672
393 26 1830172 377260 1168730 40157653227280
394 15 284928 1084 89985.86666666667 189326229232
395 26 1830172 377260 1168730 40157653227280
396 15 370356 1084 102885.8666666667 279481297952
397 4 85428 36 48375 13180878128
398 2 1830172 1049452 1439812 4450879049888
399 2 780720 762568 771644 1191033673024
400 2 1830172 1049452 1439812 4450879049888
401 2 1830172 1049452 1439812 4450879049888
402 2 0 0 0 0
403 2 1830172 1049452 1439812 4450879049888
404 2 1830172 1049452 1439812 4450879049888
405 2 1830172 1049452 1439812 4450879049888
406 2 780720 762568 771644 1191033673024
407 1 1830172 1830172 1830172 3349529549584
408 1 1830172 1830172 1830172 3349529549584
409 1 1830172 1830172 1830172 3349529549584
410 1 1830172 1830172 1830172 3349529549584
411 1 1830172 1830172 1830172 3349529549584
412 1 1830172 1830172 1830172 3349529549584
413 1 1830172 1830172 1830172 3349529549584
414 1 1830172 1830172 1830172 3349529549584
415 2 1830172 1830172 1830172 6699059099168
416 2 1830172 1830172 1830172 6699059099168
417 2 1830172 1830172 1830172 6699059099168
418 2 1830172 1830172 1830172 6699059099168
419 1604768 1830172 1830172 1830172 5.375217836436417E+18
420 1604768 1830172 1830172 1830172 5.375217836436417E+18
421 616289 1830172 1830172 1830172 2.064278216574402E+18
422 616289 1830172 1830172 1830172 2.064278216574402E+18
423 99999 1830172 1830172 1830172 3.349496054279389E+17
424 99999 1830172 1830172 1830172 3.349496054279389E+17
425 100001 1830172 1830172 1830172 3.34956304487038E+17
426 100001 1830172 1830172 1830172 3.34956304487038E+17
427 100001 1830172 1830172 1830172 3.34956304487038E+17
428 100001 1830172 1830172 1830172 3.34956304487038E+17
429 100001 1830172 1830172 1830172 3.34956304487038E+17
430 100001 1830172 1830172 1830172 3.34956304487038E+17
431 100001 1830172 1830172 1830172 3.34956304487038E+17
432 100001 1830172 1830172 1830172 3.34956304487038E+17
433 100001 1830172 1830172 1830172 3.34956304487038E+17
434 100001 1830172 1830172 1830172 3.34956304487038E+17
435 100001 1830172 1830172 1830172 3.34956304487038E+17
436 100001 1830172 1830172 1830172 3.34956304487038E+17
437 616289 1830172 1830172 1830172 2.064278216574402E+18
438 100001 1830172 1830172 1830172 3.34956304487038E+17
439 100001 1830172 1830172 1830172 3.34956304487038E+17
440 100001 1830172 1830172 1830172 3.34956304487038E+17
441 100001 1830172 1830172 1830172 3.34956304487038E+17
442 100001 1830172 1830172 1830172 3.34956304487038E+17
443 100001 1830172 1830172 1830172 3.34956304487038E+17
444 1604768 1830172 1830172 1830172 5.375217836436417E+18
445 2 1830172 1830172 1830172 6699059099168
446 2 1830172 1830172 1830172 6699059099168
447 3 1830172 1830172 1830172 10048588648752
448 2 1830172 1830172 1830172 6699059099168
449 2 1830172 1830172 1830172 6699059099168
450 50004 1830172 1830172 1830172 1.674898755972867E+17
451 33750 1830172 1830172 1830172 1.1304662229846E+17
452 33750 1830172 1830172 1830172 1.1304662229846E+17
453 2 1830172 1830172 1830172 6699059099168
454 2 1830172 1830172 1830172 6699059099168
455 2 1830172 1830172 1830172 6699059099168
456 2 1830172 1830172 1830172 6699059099168
457 2 1830172 1830172 1830172 6699059099168
458 2 1830172 1830172 1830172 6699059099168
459 2 1830172 1830172 1830172 6699059099168
460 200597 1830172 1830172 1830172 6.719055790553806E+17
461 141688 1830172 1830172 1830172 4.745881428198792E+17
462 45472 1830172 1830172 1830172 1.523098076786445E+17
463 200597 1830172 1830172 1830172 6.719055790553806E+17
464 133407 1830172 1830172 1830172 4.468506886199066E+17
465 45493 1830172 1830172 1830172 1.523801477991855E+17
466 140854 1830172 1830172 1830172 4.717946351755395E+17
467 46232 1830172 1830172 1830172 1.548554501363162E+17
468 200597 1830172 1830172 1830172 6.719055790553806E+17
469 140405 1830172 1830172 1830172 4.702906964077835E+17
470 45579 1830172 1830172 1830172 1.526682073404483E+17
471 200597 1830172 1830172 1830172 6.719055790553806E+17
472 139922 1830172 1830172 1830172 4.686728736353421E+17
473 43701 1830172 1830172 1830172 1.463777908463596E+17
474 6279639 1830172 1830172 1830172 2.103383639052288E+19
475 1639685 1830172 1830172 1830172 5.492173359727621E+18
476 1626010 1830172 1830172 1830172 5.446368543133778E+18
477 355764 1830172 1830172 1830172 1.191642030673199E+18
478 81044 1830172 1830172 1830172 2.714592728158774E+17
479 4566002 1830172 1830172 1830172 1.529395862152407E+19
480 4572532 1830172 1830172 1830172 1.531583104947774E+19
481 81720 1830172 1830172 1830172 2.737235547913854E+17
482 44847 1830172 1830172 1830172 1.502163517101645E+17
483 200597 1830172 1830172 1830172 6.719055790553806E+17
484 46060 1830172 1830172 1830172 1.542793310537905E+17
485 45102 1830172 1830172 1830172 1.510704817453044E+17
486 200597 1830172 1830172 1830172 6.719055790553806E+17
487 45717 1830172 1830172 1830172 1.531304424182887E+17
488 257997 1830172 1830172 1830172 8.641685752005838E+17
489 258725 1830172 1830172 1830172 8.666070327126693E+17
490 141496 1830172 1830172 1830172 4.739450331463622E+17
491 144122 1830172 1830172 1830172 4.827408977435277E+17
492 141127 1830172 1830172 1830172 4.727090567425716E+17
493 144977 1830172 1830172 1830172 4.856047455084084E+17
494 1492397 1830172 1830172 1830172 4.998827851393144E+18
495 252589 1830172 1830172 1830172 8.460543193965201E+17
496 31787424 1830172 1830172 1830172 1.064729159447597E+20
497 4204132 1830172 1830172 1830172 1.408186436369982E+19
498 4156285 1830172 1830172 1830172 1.392159942337838E+19
499 710327 1830172 1830172 1830172 2.379261276362289E+18
500 11579563 1830172 1830172 1830172 3.878608844577142E+19
501 11670475 1830172 1830172 1830172 3.909060087629811E+19
502 253934 1830172 1830172 1830172 8.50559436640689E+17
503 2583972 1830172 1830172 1830172 8.655090569742277E+18
504 665035 1830172 1830172 1830172 2.227554383997644E+18
505 44693 1830172 1830172 1830172 1.497005241595311E+17
506 200597 1830172 1830172 1830172 6.719055790553806E+17
507 667868 1830172 1830172 1830172 2.23704360121157E+18
508 45083 1830172 1830172 1830172 1.510068406838626E+17
509 494317 1830172 1830172 1830172 1.655729398354494E+18
510 121072 1830172 1830172 1830172 4.055342416259853E+17
511 2041565 1830172 1830172 1830172 6.83828229521089E+18
512 2025157 1830172 1830172 1830172 6.783323214357378E+18
513 702119 1830172 1830172 1830172 2.351768337817333E+18
514 141105 1830172 1830172 1830172 4.726353670924811E+17
515 142835 1830172 1830172 1830172 4.784300532132337E+17
516 347574 1830172 1830172 1830172 1.164209383662237E+18
517 5814154 1830172 1830172 1830172 1.94746806275464E+19
518 5757447 1830172 1830172 1830172 1.928473885530646E+19
519 122136 1830172 1830172 1830172 4.090981410667257E+17
520 43658 1830172 1830172 1830172 1.462337610757282E+17
521 43568 1830172 1830172 1830172 1.459323034162671E+17
522 43975 1830172 1830172 1830172 1.472955619429412E+17
523 345686 1830172 1830172 1830172 1.157885471872652E+18
524 138688 1830172 1830172 1830172 4.645395541711752E+17
525 137905 1830172 1830172 1830172 4.619168725338635E+17
526 137565 1830172 1830172 1830172 4.607780324870104E+17
527 1843012 1830172 1830172 1830172 6.173223154504686E+18
528 1870482 1830172 1830172 1830172 6.265234731238351E+18
529 293720 1830172 1830172 1830172 9.838238192998015E+17
530 76035 1830172 1830172 1830172 2.546814793020913E+17
531 75595 1830172 1830172 1830172 2.532076863002814E+17
532 206782 1830172 1830172 1830172 6.926224193194587E+17
533 206772 1830172 1830172 1830172 6.92588924023963E+17
534 161566 1830172 1830172 1830172 5.411700912061919E+17
535 2648836 1830172 1830172 1830172 8.872354454462061E+18
536 2625130 1830172 1830172 1830172 8.792950506953933E+18
537 164362 1830172 1830172 1830172 5.505353758267841E+17
538 231211 1830172 1830172 1830172 7.744480766858554E+17
539 74973 1830172 1830172 1830172 2.511242789204501E+17
540 74992 1830172 1830172 1830172 2.511879199818919E+17
541 77955 1830172 1830172 1830172 2.611125760372619E+17
542 25417 1830172 1830172 1830172 8.513499256177653E+16
543 24676 1830172 1830172 1830172 8.265299116553478E+16
544 356987 1830172 1830172 1830172 1.19573850531232E+18
545 5800998 1830172 1830172 1830172 1.943061421677544E+19
546 5856577 1830172 1830172 1830172 1.961677771968202E+19
547 352987 1830172 1830172 1830172 1.182340387114048E+18
548 165276 1830172 1830172 1830172 5.535968458350892E+17
549 163423 1830172 1830172 1830172 5.473901675797397E+17
550 55496 1830172 1830172 1830172 1.858854918835142E+17
551 54673 1830172 1830172 1830172 1.831288290642197E+17
552 2 1830172 1830172 1830172 6699059099168
553 1 1830172 1830172 1830172 3349529549584
554 1 1830172 1830172 1830172 3349529549584
555 1 1830172 1830172 1830172 3349529549584
556 1 0 0 0 0
557 1 1830172 1830172 1830172 3349529549584
558 1 1830172 1830172 1830172 3349529549584
559 1 1830172 1830172 1830172 3349529549584
560 1 1830172 1830172 1830172 3349529549584
561 1 1830172 1830172 1830172 3349529549584
562 1 1830172 1830172 1830172 3349529549584
563 1 1830172 1830172 1830172 3349529549584
564 1 1830172 1830172 1830172 3349529549584
565 1 1830172 1830172 1830172 3349529549584
566 1 1830172 1830172 1830172 3349529549584
567 1 1830172 1830172 1830172 3349529549584
568 1 1830172 1830172 1830172 3349529549584
569 1 1830172 1830172 1830172 3349529549584
570 1 1830172 1830172 1830172 3349529549584
571 1 1830172 1830172 1830172 3349529549584
572 1 1830172 1830172 1830172 3349529549584
573 1 1830172 1830172 1830172 3349529549584
574 1 1830172 1830172 1830172 3349529549584
575 1 1830172 1830172 1830172 3349529549584
576 2 1830172 1830172 1830172 6699059099168
577 1 1830172 1830172 1830172 3349529549584
578 1 1830172 1830172 1830172 3349529549584
579 1 1830172 1830172 1830172 3349529549584
580 1 1830172 1830172 1830172 3349529549584
581 1 1830172 1830172 1830172 3349529549584
582 1 1830172 1830172 1830172 3349529549584
583 1 1830172 1830172 1830172 3349529549584
584 1 1830172 1830172 1830172 3349529549584
585 1 1830172 1830172 1830172 3349529549584
586 1 1830172 1830172 1830172 3349529549584
587 1 1830172 1830172 1830172 3349529549584
588 1 1830172 1830172 1830172 3349529549584
589 2 1830172 1830172 1830172 6699059099168
590 2 1830172 1830172 1830172 6699059099168
591 1 1830172 1830172 1830172 3349529549584
596 1 1830172 1830172 1830172 3349529549584
597 1 1830172 1830172 1830172 3349529549584
598 1 1830172 1830172 1830172 3349529549584
599 1 1830172 1830172 1830172 3349529549584
600 1 1830172 1830172 1830172 3349529549584
601 1 1830172 1830172 1830172 3349529549584
604 1211 1830172 1830172 1830172 4056280284546224
605 342 1830172 1830172 1830172 1145539105957728
606 296 1830172 1830172 1830172 991460746676864
607 2600 1830172 1830172 1830172 8708776828918400
608 1200 1830172 1830172 1830172 4019435459500800
609 2550 1830172 1830172 1830172 8541300351439200
610 1201 1830172 1830172 1830172 4022784989050384
611 16125 1830172 1830172 1830172 5.4011163987042E+16
612 16136 1830172 1830172 1830172 5.404800881208742E+16
613 903 1830172 1830172 1830172 3024625183274352
614 116 1830172 1830172 1830172 388545427751744
615 674519 1830172 1830172 1830172 2.259321322245746E+18
616 12182 1830172 1830172 1830172 4.080396897303229E+16
617 11243 1830172 1830172 1830172 3.765876072597291E+16
618 135 1830172 1830172 1830172 452186489193840
619 898 1830172 1830172 1830172 3007877535526432
620 664383 1830172 1830172 1830172 2.225370490731325E+18
621 665145 1830172 1830172 1830172 2.227922832248096E+18
622 1806 1830172 1830172 1830172 6049250366548704
623 294 1830172 1830172 1830172 984761687577696
624 271 1830172 1830172 1830172 907722507937264
625 431764 1830172 1830172 1830172 1.446206276440367E+18
626 3071 1830172 1830172 1830172 1.028640524677246E+16
627 305647 1830172 1830172 1830172 1.023773658237499E+18
628 1806 1830172 1830172 1830172 6049250366548704
629 276 1830172 1830172 1830172 924470155685184
630 8127 1830172 1830172 1830172 2.722162664946917E+16
631 238 1830172 1830172 1830172 797188032800992
632 249 1830172 1830172 1830172 834032857846416
633 431764 1830172 1830172 1830172 1.446206276440367E+18
634 2933 1830172 1830172 1830172 9824170168929872
635 413 1830172 1830172 1830172 1383355703978192
636 431764 1830172 1830172 1830172 1.446206276440367E+18
637 2942 1830172 1830172 1830172 9854315934876128
638 305126 1830172 1830172 1830172 1.022028553342174E+18
639 305362 1830172 1830172 1830172 1.022819042315872E+18
640 184055 1830172 1830172 1830172 6.164976612464268E+17
641 144412 1830172 1830172 1830172 4.837122613129025E+17
642 144150 1830172 1830172 1830172 4.828346845709156E+17
643 366 1830172 1830172 1830172 1225927815147744
644 360 1830172 1830172 1830172 1205830637850240
645 305960 1830172 1830172 1830172 1.024822060986514E+18
646 100001 1830172 1830172 1830172 3.34956304487038E+17
647 4257 1830172 1830172 1830172 1.425894729257909E+16
648 3524 1830172 1830172 1830172 1.180374213273402E+16
649 6993 1830172 1830172 1830172 2.342326014024091E+16
650 6688 1830172 1830172 1830172 2.240165362761779E+16
651 3187 1830172 1830172 1830172 1.067495067452421E+16
652 1806 1830172 1830172 1830172 6049250366548704
653 292 1830172 1830172 1830172 978062628478528
654 284 1830172 1830172 1830172 951266392081856
655 570 1830172 1830172 1830172 1909231843262880
656 611 1830172 1830172 1830172 2046562554795824
657 446 1830172 1830172 1830172 1493890179114464
658 100001 1830172 1830172 1830172 3.34956304487038E+17
659 15785 1830172 1830172 1830172 5.287232394018344E+16
660 240 1830172 1830172 1830172 803887091900160
661 232 1830172 1830172 1830172 777090855503488
662 15796 1830172 1830172 1830172 5.290916876522886E+16
663 306036 1830172 1830172 1830172 1.025076625232281E+18
664 306006 1830172 1830172 1830172 1.024976139345794E+18
665 70 1830172 1830172 1830172 234467068470880
666 864 1830172 1830172 1830172 2893993530840576
667 69 1830172 1830172 1830172 231117538921296
668 2802 1830172 1830172 1830172 9385381797934368
669 2958 1830172 1830172 1830172 9907908407669472
670 77 1830172 1830172 1830172 257913775317968
671 89 1830172 1830172 1830172 298108129912976
672 344 1830172 1830172 1830172 1152238165056896
673 1806 1830172 1830172 1830172 6049250366548704
674 359 1830172 1830172 1830172 1202481108300656
675 282 1830172 1830172 1830172 944567332982688
676 281 1830172 1830172 1830172 941217803433104
677 982 1830172 1830172 1830172 3289238017691488
678 892 1830172 1830172 1830172 2987780358228928
679 870 1830172 1830172 1830172 2914090708138080
680 1041 1830172 1830172 1830172 3486860261116944
681 1165 1830172 1830172 1830172 3902201925265360
682 901 1830172 1830172 1830172 3017926124175184
683 891 1830172 1830172 1830172 2984430828679344
684 1791 1830172 1830172 1830172 5999007423304944
685 1791 1830172 1830172 1830172 5999007423304944
686 1792 1830172 1830172 1830172 6002356952854528
687 1794 1830172 1830172 1830172 6009056011953696
688 194 1830172 1830172 1830172 649808732619296
689 1784 1830172 1830172 1830172 5975560716457856
690 1785 1830172 1830172 1830172 5978910246007440
691 1793 1830172 1830172 1830172 6005706482404112
692 1791 1830172 1830172 1830172 5999007423304944
693 223020 1830172 1830172 1830172 7.470120801453439E+17
694 1832 1830172 1830172 1830172 6136338134837888
695 197 1830172 1830172 1830172 659857321268048
696 183 1830172 1830172 1830172 612963907573872
697 832 1830172 1830172 1830172 2786808585253888
698 883 1830172 1830172 1830172 2957634592282672
699 11112 1830172 1830172 1830172 3.721997235497741E+16
700 10997 1830172 1830172 1830172 3.683477645677525E+16
701 10989 1830172 1830172 1830172 3.680798022037858E+16
702 1647 1830172 1830172 1830172 5516675168164848
703 611 1830172 1830172 1830172 2046562554795824
704 654 1830172 1830172 1830172 2190592325427936
705 94232 1830172 1830172 1830172 3.156328685155802E+17
706 94559 1830172 1830172 1830172 3.16728164678289E+17
707 194685 1830172 1830172 1830172 6.521031603583346E+17
708 193819 1830172 1830172 1830172 6.492024677684087E+17
709 360 1830172 1830172 1830172 1205830637850240
710 875 1830172 1830172 1830172 2930838355886000
711 799 1830172 1830172 1830172 2676274110117616
712 721 1830172 1830172 1830172 2415010805250064
713 301 1830172 1830172 1830172 1008208394424784
714 1215 1830172 1830172 1830172 4069678402744560
715 1173 1830172 1830172 1830172 3928998161662032
716 700 1830172 1830172 1830172 2344670684708800
717 179 1830172 1830172 1830172 599565789375536
718 120 1830172 1830172 1830172 401943545950080
719 742 1830172 1830172 1830172 2485350925791328
720 828 1830172 1830172 1830172 2773410467055552
721 44 1830172 1830172 1830172 147379300181696
722 54 1830172 1830172 1830172 180874595677536
723 55195 1830172 1830172 1830172 1.848772834890942E+17
724 55604 1830172 1830172 1830172 1.862472410748675E+17
725 67 1830172 1830172 1830172 224418479822128
726 17 1830172 1830172 1830172 56942002342928
727 14 1830172 1830172 1830172 46893413694176
728 41 1830172 1830172 1830172 137330711532944
729 7809 1830172 1830172 1830172 2.615647625270146E+16
730 132 1830172 1830172 1830172 442137900545088
731 156 1830172 1830172 1830172 522526609735104
732 79 1830172 1830172 1830172 264612834417136
733 24 1830172 1830172 1830172 80388709190016
734 35 1830172 1830172 1830172 117233534235440
735 92 1830172 1830172 1830172 308156718561728
736 6 1830172 1830172 1830172 20097177297504
737 6 1830172 1830172 1830172 20097177297504
738 2 1830172 1830172 1830172 6699059099168
739 11 1830172 1830172 1830172 36844825045424
740 6 1830172 1830172 1830172 20097177297504
741 7 1830172 1830172 1830172 23446706847088
742 2 1830172 1830172 1830172 6699059099168
743 3 1830172 1830172 1830172 10048588648752
744 126 1830172 1830172 1830172 422040723247584
745 137 1830172 1830172 1830172 458885548293008
746 32 1830172 1830172 1830172 107184945586688
747 34 1830172 1830172 1830172 113884004685856
748 25 1830172 1830172 1830172 83738238739600
749 75 1830172 1830172 1830172 251214716218800
750 52 1830172 1830172 1830172 174175536578368
751 38 1830172 1830172 1830172 127282122884192
752 21 1830172 1830172 1830172 70340120541264
753 23 1830172 1830172 1830172 77039179640432
754 32 1830172 1830172 1830172 107184945586688
755 31 1830172 1830172 1830172 103835416037104
756 4 1830172 1830172 1830172 13398118198336
757 5 1830172 1830172 1830172 16747647747920
758 45835 1830172 1830172 1830172 1.535256869051377E+17
759 45751 1830172 1830172 1830172 1.53244326422974E+17
760 45768 1830172 1830172 1830172 1.533012684253167E+17
761 10695 1830172 1830172 1830172 3.582321853280088E+16
762 10645 1830172 1830172 1830172 3.565574205532168E+16
763 45852 1830172 1830172 1830172 1.535826289074804E+17
764 12872 1830172 1830172 1830172 4.311514436224525E+16
765 12838 1830172 1830172 1830172 4.300126035755939E+16
766 45826 1830172 1830172 1830172 1.534955411391916E+17
767 45834 1830172 1830172 1830172 1.535223373755882E+17
768 3460 1830172 1830172 1830172 1.158937224156064E+16
769 3462 1830172 1830172 1830172 1.159607130065981E+16
770 8052 1830172 1830172 1830172 2.697041193325037E+16
771 8027 1830172 1830172 1830172 2.688667369451077E+16
772 33251 1830172 1830172 1830172 1.113752070532176E+17
773 33203 1830172 1830172 1830172 1.112144296348376E+17
774 33204 1830172 1830172 1830172 1.112177791643871E+17
775 6609 1830172 1830172 1830172 2.213704079320066E+16
776 6611 1830172 1830172 1830172 2.214373985229982E+16
777 33271 1830172 1830172 1830172 1.114421976442093E+17
778 8327 1830172 1830172 1830172 2.789153255938597E+16
779 8295 1830172 1830172 1830172 2.778434761379928E+16
780 33267 1830172 1830172 1830172 1.114287995260109E+17
781 33266 1830172 1830172 1830172 1.114254499964613E+17
782 856 1830172 1830172 1830172 2867197294443904
783 858 1830172 1830172 1830172 2873896353543072
784 7753 1830172 1830172 1830172 2.596890259792475E+16
785 7751 1830172 1830172 1830172 2.596220353882558E+16
786 2 1830172 1830172 1830172 6699059099168
787 3 1830172 1830172 1830172 10048588648752
790 4581 1830172 1830172 1830172 1.53441948666443E+16
791 4579 1830172 1830172 1830172 1.533749580754514E+16
794 1 1830172 1830172 1830172 3349529549584
796 2248 1830172 1830172 1830172 7529742427464832
797 2262 1830172 1830172 1830172 7576635841159008
798 39671 1830172 1830172 1830172 1.328791867615469E+17
799 39582 1830172 1830172 1830172 1.325810786316339E+17
800 39580 1830172 1830172 1830172 1.325743795725347E+17
801 11137 1830172 1830172 1830172 3.730371059371701E+16
802 11118 1830172 1830172 1830172 3.724006953227491E+16
803 39674 1830172 1830172 1830172 1.328892353501956E+17
804 39624 1830172 1830172 1830172 1.327217588727164E+17
805 39648 1830172 1830172 1830172 1.328021475819064E+17
806 3103 1830172 1830172 1830172 1.039359019235915E+16
807 3092 1830172 1830172 1830172 1.035674536731373E+16
808 233 1830172 1830172 1830172 780440385053072
809 233 1830172 1830172 1830172 780440385053072
810 229 1830172 1830172 1830172 767042266854736
811 361 1830172 1830172 1830172 1209180167399824
812 359 1830172 1830172 1830172 1202481108300656
813 231 1830172 1830172 1830172 773741325953904
814 233 1830172 1830172 1830172 780440385053072
815 231 1830172 1830172 1830172 773741325953904
816 790 1830172 1830172 1830172 2646128344171360
817 801 1830172 1830172 1830172 2682973169216784
818 12845 1830172 1830172 1830172 4.302470706440648E+16
819 12849 1830172 1830172 1830172 4.303810518260482E+16
820 110 1830172 1830172 1830172 368448250454240
821 106 1830172 1830172 1830172 355050132255904
822 34 1830172 1830172 1830172 113884004685856
823 33 1830172 1830172 1830172 110534475136272
824 3134 1830172 1830172 1830172 1.049742560839626E+16
825 3133 1830172 1830172 1830172 1.049407607884667E+16
826 102 1830172 1830172 1830172 341652014057568
827 101 1830172 1830172 1830172 338302484507984
828 103 1830172 1830172 1830172 345001543607152
829 17 1830172 1830172 1830172 56942002342928
830 14 1830172 1830172 1830172 46893413694176
831 103 1830172 1830172 1830172 345001543607152
832 3 1830172 1830172 1830172 10048588648752
833 3 1830172 1830172 1830172 10048588648752
834 103 1830172 1830172 1830172 345001543607152
835 101 1830172 1830172 1830172 338302484507984
836 31 1830172 1830172 1830172 103835416037104
837 11 1830172 1830172 1830172 36844825045424
838 11 1830172 1830172 1830172 36844825045424
839 31 1830172 1830172 1830172 103835416037104
840 1 1830172 1830172 1830172 3349529549584
841 1 1830172 1830172 1830172 3349529549584
842 1439 1830172 1830172 1830172 4819973021851376
843 1438 1830172 1830172 1830172 4816623492301792
844 1440 1830172 1830172 1830172 4823322551400960
845 1439 1830172 1830172 1830172 4819973021851376
846 1441 1830172 1830172 1830172 4826672080950544
847 1441 1830172 1830172 1830172 4826672080950544
850 1 1830172 1830172 1830172 3349529549584
851 1 1830172 1830172 1830172 3349529549584
852 4 1830172 1830172 1830172 13398118198336
857 1 1830172 1830172 1830172 3349529549584
858 592 1830172 1830172 1830172 1982921493353728
859 188 1830172 1830172 1830172 629711555321792
860 187 1830172 1830172 1830172 626362025772208
861 593 1830172 1830172 1830172 1986271022903312
864 16 1830172 1830172 1830172 53592472793344
865 16 1830172 1830172 1830172 53592472793344
866 1 1830172 1830172 1830172 3349529549584
867 1 1830172 1830172 1830172 3349529549584
868 1 1830172 1830172 1830172 3349529549584
869 1 1830172 1830172 1830172 3349529549584
870 1 1830172 1830172 1830172 3349529549584
871 1 1830172 1830172 1830172 3349529549584
876 1 1830172 1830172 1830172 3349529549584
877 1 1830172 1830172 1830172 3349529549584
878 1 1830172 1830172 1830172 3349529549584
879 1 1830172 1830172 1830172 3349529549584
880 1 1830172 1830172 1830172 3349529549584
881 1 1830172 1830172 1830172 3349529549584
882 1 1830172 1830172 1830172 3349529549584
883 1 1830172 1830172 1830172 3349529549584
884 1 1830172 1830172 1830172 3349529549584
885 1 1830172 1830172 1830172 3349529549584
886 1 1830172 1830172 1830172 3349529549584
887 1 20 20 20 400
888 1 1830172 1830172 1830172 3349529549584
889 1 1830172 1830172 1830172 3349529549584
890 2 1830172 1830172 1830172 6699059099168
891 2 1830172 1830172 1830172 6699059099168
892 2 1830172 1830172 1830172 6699059099168
893 2 1830172 1830172 1830172 6699059099168
894 2 1830172 1830172 1830172 6699059099168
895 2 1830172 1830172 1830172 6699059099168
896 2 1830172 1830172 1830172 6699059099168
897 2 1830172 1830172 1830172 6699059099168
898 2 1830172 1830172 1830172 6699059099168
899 2 1830172 1830172 1830172 6699059099168
900 2 1830172 1830172 1830172 6699059099168
901 2 1830172 1830172 1830172 6699059099168
902 2 1830172 1830172 1830172 6699059099168
903 2 1830172 1830172 1830172 6699059099168
904 2 1830172 1830172 1830172 6699059099168
905 2 1830172 1830172 1830172 6699059099168
906 2 1830172 1830172 1830172 6699059099168
907 2 1830172 1830172 1830172 6699059099168
908 2 1830172 1830172 1830172 6699059099168
909 2 1830172 1830172 1830172 6699059099168
910 2 0 0 0 0
911 2 1830172 1830172 1830172 6699059099168
912 2 1830172 1830172 1830172 6699059099168
913 2 1830172 1830172 1830172 6699059099168
914 1 1830172 1830172 1830172 3349529549584
915 1 1830172 1830172 1830172 3349529549584
916 1 1830172 1830172 1830172 3349529549584
917 1 1830172 1830172 1830172 3349529549584
918 1 1830172 1830172 1830172 3349529549584
919 1 1830172 1830172 1830172 3349529549584
920 1 1830172 1830172 1830172 3349529549584
921 1 1830172 1830172 1830172 3349529549584
922 1 1830172 1830172 1830172 3349529549584
923 1 0 0 0 0
924 1 1830172 1830172 1830172 3349529549584
925 1 1830172 1830172 1830172 3349529549584
926 1 1830172 1830172 1830172 3349529549584
927 1 1830172 1830172 1830172 3349529549584
928 1 1543544 1543544 1543544 2382528079936
929 1 1830172 1830172 1830172 3349529549584
930 1 1830172 1830172 1830172 3349529549584
931 2 1830172 1830172 1830172 6699059099168
932 2 1830172 1830172 1830172 6699059099168
933 1 1830172 1830172 1830172 3349529549584
934 1 1830172 1830172 1830172 3349529549584
935 1 1830172 1830172 1830172 3349529549584
936 1 1340408 1340408 1340408 1796693606464
937 1 10 10 10 100
938 1 0 0 0 0
939 1 0 0 0 0
940 1 1340408 1340408 1340408 1796693606464
941 1 1830172 1830172 1830172 3349529549584
942 1 10 10 10 100
943 1 0 0 0 0
944 1 0 0 0 0
945 1 1830172 1830172 1830172 3349529549584
946 1 1830172 1830172 1830172 3349529549584
947 1 1830172 1830172 1830172 3349529549584
948 1 1553016 1553016 1553016 2411858696256
949 1 1830172 1830172 1830172 3349529549584
</atomic_data>
</profile>

</profile_xml>
