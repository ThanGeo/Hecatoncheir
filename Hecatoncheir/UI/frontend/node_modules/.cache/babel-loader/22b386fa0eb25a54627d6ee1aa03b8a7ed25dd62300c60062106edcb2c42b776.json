{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"eventKey\", \"className\", \"style\", \"dragOver\", \"dragOverGapTop\", \"dragOverGapBottom\", \"isLeaf\", \"isStart\", \"isEnd\", \"expanded\", \"selected\", \"checked\", \"halfChecked\", \"loading\", \"domRef\", \"active\", \"data\", \"onMouseMove\", \"selectable\"];\nimport React from 'react';\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { TreeContext, UnstableContext } from \"./contextTypes\";\nimport Indent from \"./Indent\";\nimport getEntity from \"./utils/keyUtil\";\nimport { convertNodePropsToEventData } from \"./utils/treeUtil\";\nvar ICON_OPEN = 'open';\nvar ICON_CLOSE = 'close';\nvar defaultTitle = '---';\nvar TreeNode = function TreeNode(props) {\n  var _unstableContext$node, _context$filterTreeNo, _classNames4;\n  var eventKey = props.eventKey,\n    className = props.className,\n    style = props.style,\n    dragOver = props.dragOver,\n    dragOverGapTop = props.dragOverGapTop,\n    dragOverGapBottom = props.dragOverGapBottom,\n    isLeaf = props.isLeaf,\n    isStart = props.isStart,\n    isEnd = props.isEnd,\n    expanded = props.expanded,\n    selected = props.selected,\n    checked = props.checked,\n    halfChecked = props.halfChecked,\n    loading = props.loading,\n    domRef = props.domRef,\n    active = props.active,\n    data = props.data,\n    onMouseMove = props.onMouseMove,\n    selectable = props.selectable,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var context = React.useContext(TreeContext);\n  var unstableContext = React.useContext(UnstableContext);\n  var selectHandleRef = React.useRef(null);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    dragNodeHighlight = _React$useState2[0],\n    setDragNodeHighlight = _React$useState2[1];\n\n  // ======= State: Disabled State =======\n  var isDisabled = !!(context.disabled || props.disabled || (_unstableContext$node = unstableContext.nodeDisabled) !== null && _unstableContext$node !== void 0 && _unstableContext$node.call(unstableContext, data));\n  var isCheckable = React.useMemo(function () {\n    // Return false if tree or treeNode is not checkable\n    if (!context.checkable || props.checkable === false) {\n      return false;\n    }\n    return context.checkable;\n  }, [context.checkable, props.checkable]);\n\n  // ======= Event Handlers: Selection and Check =======\n  var onSelect = function onSelect(e) {\n    if (isDisabled) {\n      return;\n    }\n    context.onNodeSelect(e, convertNodePropsToEventData(props));\n  };\n  var onCheck = function onCheck(e) {\n    if (isDisabled) {\n      return;\n    }\n    if (!isCheckable || props.disableCheckbox) {\n      return;\n    }\n    context.onNodeCheck(e, convertNodePropsToEventData(props), !checked);\n  };\n\n  // ======= State: Selectable Check =======\n  var isSelectable = React.useMemo(function () {\n    // Ignore when selectable is undefined or null\n    if (typeof selectable === 'boolean') {\n      return selectable;\n    }\n    return context.selectable;\n  }, [selectable, context.selectable]);\n  var onSelectorClick = function onSelectorClick(e) {\n    // Click trigger before select/check operation\n    context.onNodeClick(e, convertNodePropsToEventData(props));\n    if (isSelectable) {\n      onSelect(e);\n    } else {\n      onCheck(e);\n    }\n  };\n  var onSelectorDoubleClick = function onSelectorDoubleClick(e) {\n    context.onNodeDoubleClick(e, convertNodePropsToEventData(props));\n  };\n  var onMouseEnter = function onMouseEnter(e) {\n    context.onNodeMouseEnter(e, convertNodePropsToEventData(props));\n  };\n  var onMouseLeave = function onMouseLeave(e) {\n    context.onNodeMouseLeave(e, convertNodePropsToEventData(props));\n  };\n  var onContextMenu = function onContextMenu(e) {\n    context.onNodeContextMenu(e, convertNodePropsToEventData(props));\n  };\n\n  // ======= Drag: Drag Enabled =======\n  var isDraggable = React.useMemo(function () {\n    return !!(context.draggable && (!context.draggable.nodeDraggable || context.draggable.nodeDraggable(data)));\n  }, [context.draggable, data]);\n\n  // ======= Drag: Drag Event Handlers =======\n  var onDragStart = function onDragStart(e) {\n    e.stopPropagation();\n    setDragNodeHighlight(true);\n    context.onNodeDragStart(e, props);\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer.setData('text/plain', '');\n    } catch (_unused) {\n      // empty\n    }\n  };\n  var onDragEnter = function onDragEnter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    context.onNodeDragEnter(e, props);\n  };\n  var onDragOver = function onDragOver(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    context.onNodeDragOver(e, props);\n  };\n  var onDragLeave = function onDragLeave(e) {\n    e.stopPropagation();\n    context.onNodeDragLeave(e, props);\n  };\n  var onDragEnd = function onDragEnd(e) {\n    e.stopPropagation();\n    setDragNodeHighlight(false);\n    context.onNodeDragEnd(e, props);\n  };\n  var onDrop = function onDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragNodeHighlight(false);\n    context.onNodeDrop(e, props);\n  };\n\n  // ======= Expand: Node Expansion =======\n  var onExpand = function onExpand(e) {\n    if (loading) {\n      return;\n    }\n    context.onNodeExpand(e, convertNodePropsToEventData(props));\n  };\n\n  // ======= State: Has Children =======\n  var hasChildren = React.useMemo(function () {\n    var _ref = getEntity(context.keyEntities, eventKey) || {},\n      children = _ref.children;\n    return Boolean((children || []).length);\n  }, [context.keyEntities, eventKey]);\n\n  // ======= State: Leaf Check =======\n  var memoizedIsLeaf = React.useMemo(function () {\n    if (isLeaf === false) {\n      return false;\n    }\n    return isLeaf || !context.loadData && !hasChildren || context.loadData && props.loaded && !hasChildren;\n  }, [isLeaf, context.loadData, hasChildren, props.loaded]);\n\n  // ============== Effect ==============\n  React.useEffect(function () {\n    // Load data to avoid default expanded tree without data\n    if (loading) {\n      return;\n    }\n    // read from state to avoid loadData at same time\n    if (typeof context.loadData === 'function' && expanded && !memoizedIsLeaf && !props.loaded) {\n      // We needn't reload data when has children in sync logic\n      // It's only needed in node expanded\n      context.onNodeLoad(convertNodePropsToEventData(props));\n    }\n  }, [loading, context.loadData, context.onNodeLoad, expanded, memoizedIsLeaf, props]);\n\n  // ==================== Render: Drag Handler ====================\n  var dragHandlerNode = React.useMemo(function () {\n    var _context$draggable;\n    if (!((_context$draggable = context.draggable) !== null && _context$draggable !== void 0 && _context$draggable.icon)) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(context.prefixCls, \"-draggable-icon\")\n    }, context.draggable.icon);\n  }, [context.draggable]);\n\n  // ====================== Render: Switcher ======================\n  var renderSwitcherIconDom = function renderSwitcherIconDom(isInternalLeaf) {\n    var switcherIcon = props.switcherIcon || context.switcherIcon;\n    // if switcherIconDom is null, no render switcher span\n    if (typeof switcherIcon === 'function') {\n      return switcherIcon(_objectSpread(_objectSpread({}, props), {}, {\n        isLeaf: isInternalLeaf\n      }));\n    }\n    return switcherIcon;\n  };\n\n  // Switcher\n  var renderSwitcher = function renderSwitcher() {\n    if (memoizedIsLeaf) {\n      // if switcherIconDom is null, no render switcher span\n      var _switcherIconDom = renderSwitcherIconDom(true);\n      return _switcherIconDom !== false ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(\"\".concat(context.prefixCls, \"-switcher\"), \"\".concat(context.prefixCls, \"-switcher-noop\"))\n      }, _switcherIconDom) : null;\n    }\n    var switcherIconDom = renderSwitcherIconDom(false);\n    return switcherIconDom !== false ? /*#__PURE__*/React.createElement(\"span\", {\n      onClick: onExpand,\n      className: classNames(\"\".concat(context.prefixCls, \"-switcher\"), \"\".concat(context.prefixCls, \"-switcher_\").concat(expanded ? ICON_OPEN : ICON_CLOSE))\n    }, switcherIconDom) : null;\n  };\n\n  // ====================== Checkbox ======================\n  var checkboxNode = React.useMemo(function () {\n    if (!isCheckable) {\n      return null;\n    }\n\n    // [Legacy] Custom element should be separate with `checkable` in future\n    var $custom = typeof isCheckable !== 'boolean' ? isCheckable : null;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(context.prefixCls, \"-checkbox\"), _defineProperty(_defineProperty(_defineProperty({}, \"\".concat(context.prefixCls, \"-checkbox-checked\"), checked), \"\".concat(context.prefixCls, \"-checkbox-indeterminate\"), !checked && halfChecked), \"\".concat(context.prefixCls, \"-checkbox-disabled\"), isDisabled || props.disableCheckbox)),\n      onClick: onCheck,\n      role: \"checkbox\",\n      \"aria-checked\": halfChecked ? 'mixed' : checked,\n      \"aria-disabled\": isDisabled || props.disableCheckbox,\n      \"aria-label\": \"Select \".concat(typeof props.title === 'string' ? props.title : 'tree node')\n    }, $custom);\n  }, [isCheckable, checked, halfChecked, isDisabled, props.disableCheckbox, props.title]);\n\n  // ============== State: Node State (Open/Close) ==============\n  var nodeState = React.useMemo(function () {\n    if (memoizedIsLeaf) {\n      return null;\n    }\n    return expanded ? ICON_OPEN : ICON_CLOSE;\n  }, [memoizedIsLeaf, expanded]);\n\n  // ==================== Render: Title + Icon ====================\n  var iconNode = React.useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(context.prefixCls, \"-iconEle\"), \"\".concat(context.prefixCls, \"-icon__\").concat(nodeState || 'docu'), _defineProperty({}, \"\".concat(context.prefixCls, \"-icon_loading\"), loading))\n    });\n  }, [context.prefixCls, nodeState, loading]);\n\n  // =================== Drop Indicator ===================\n  var dropIndicatorNode = React.useMemo(function () {\n    var rootDraggable = Boolean(context.draggable);\n    // allowDrop is calculated in Tree.tsx, there is no need for calc it here\n    var showIndicator = !props.disabled && rootDraggable && context.dragOverNodeKey === eventKey;\n    if (!showIndicator) {\n      return null;\n    }\n    return context.dropIndicatorRender({\n      dropPosition: context.dropPosition,\n      dropLevelOffset: context.dropLevelOffset,\n      indent: context.indent,\n      prefixCls: context.prefixCls,\n      direction: context.direction\n    });\n  }, [context.dropPosition, context.dropLevelOffset, context.indent, context.prefixCls, context.direction, context.draggable, context.dragOverNodeKey, context.dropIndicatorRender]);\n\n  // Icon + Title\n  var selectorNode = React.useMemo(function () {\n    var _props$title = props.title,\n      title = _props$title === void 0 ? defaultTitle : _props$title;\n    var wrapClass = \"\".concat(context.prefixCls, \"-node-content-wrapper\");\n\n    // Icon - Still show loading icon when loading without showIcon\n    var $icon;\n    if (context.showIcon) {\n      var currentIcon = props.icon || context.icon;\n      $icon = currentIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(\"\".concat(context.prefixCls, \"-iconEle\"), \"\".concat(context.prefixCls, \"-icon__customize\"))\n      }, typeof currentIcon === 'function' ? currentIcon(props) : currentIcon) : iconNode;\n    } else if (context.loadData && loading) {\n      $icon = iconNode;\n    }\n\n    // Title\n    var titleNode;\n    if (typeof title === 'function') {\n      titleNode = title(data);\n    } else if (context.titleRender) {\n      titleNode = context.titleRender(data);\n    } else {\n      titleNode = title;\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      ref: selectHandleRef,\n      title: typeof title === 'string' ? title : '',\n      className: classNames(wrapClass, \"\".concat(wrapClass, \"-\").concat(nodeState || 'normal'), _defineProperty({}, \"\".concat(context.prefixCls, \"-node-selected\"), !isDisabled && (selected || dragNodeHighlight))),\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onContextMenu: onContextMenu,\n      onClick: onSelectorClick,\n      onDoubleClick: onSelectorDoubleClick\n    }, $icon, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(context.prefixCls, \"-title\")\n    }, titleNode), dropIndicatorNode);\n  }, [context.prefixCls, context.showIcon, props, context.icon, iconNode, context.titleRender, data, nodeState, onMouseEnter, onMouseLeave, onContextMenu, onSelectorClick, onSelectorDoubleClick]);\n  var dataOrAriaAttributeProps = pickAttrs(otherProps, {\n    aria: true,\n    data: true\n  });\n  var _ref2 = getEntity(context.keyEntities, eventKey) || {},\n    level = _ref2.level;\n  var isEndNode = isEnd[isEnd.length - 1];\n  var draggableWithoutDisabled = !isDisabled && isDraggable;\n  var dragging = context.draggingNodeKey === eventKey;\n  var ariaSelected = selectable !== undefined ? {\n    'aria-selected': !!selectable\n  } : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: domRef,\n    role: \"treeitem\",\n    \"aria-expanded\": isLeaf ? undefined : expanded,\n    className: classNames(className, \"\".concat(context.prefixCls, \"-treenode\"), (_classNames4 = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classNames4, \"\".concat(context.prefixCls, \"-treenode-disabled\"), isDisabled), \"\".concat(context.prefixCls, \"-treenode-switcher-\").concat(expanded ? 'open' : 'close'), !isLeaf), \"\".concat(context.prefixCls, \"-treenode-checkbox-checked\"), checked), \"\".concat(context.prefixCls, \"-treenode-checkbox-indeterminate\"), halfChecked), \"\".concat(context.prefixCls, \"-treenode-selected\"), selected), \"\".concat(context.prefixCls, \"-treenode-loading\"), loading), \"\".concat(context.prefixCls, \"-treenode-active\"), active), \"\".concat(context.prefixCls, \"-treenode-leaf-last\"), isEndNode), \"\".concat(context.prefixCls, \"-treenode-draggable\"), isDraggable), \"dragging\", dragging), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classNames4, 'drop-target', context.dropTargetKey === eventKey), 'drop-container', context.dropContainerKey === eventKey), 'drag-over', !isDisabled && dragOver), 'drag-over-gap-top', !isDisabled && dragOverGapTop), 'drag-over-gap-bottom', !isDisabled && dragOverGapBottom), 'filter-node', (_context$filterTreeNo = context.filterTreeNode) === null || _context$filterTreeNo === void 0 ? void 0 : _context$filterTreeNo.call(context, convertNodePropsToEventData(props))), \"\".concat(context.prefixCls, \"-treenode-leaf\"), memoizedIsLeaf))),\n    style: style\n    // Draggable config\n    ,\n\n    draggable: draggableWithoutDisabled,\n    onDragStart: draggableWithoutDisabled ? onDragStart : undefined\n    // Drop config\n    ,\n\n    onDragEnter: isDraggable ? onDragEnter : undefined,\n    onDragOver: isDraggable ? onDragOver : undefined,\n    onDragLeave: isDraggable ? onDragLeave : undefined,\n    onDrop: isDraggable ? onDrop : undefined,\n    onDragEnd: isDraggable ? onDragEnd : undefined,\n    onMouseMove: onMouseMove\n  }, ariaSelected, dataOrAriaAttributeProps), /*#__PURE__*/React.createElement(Indent, {\n    prefixCls: context.prefixCls,\n    level: level,\n    isStart: isStart,\n    isEnd: isEnd\n  }), dragHandlerNode, renderSwitcher(), checkboxNode, selectorNode);\n};\nTreeNode.isTreeNode = 1;\nif (process.env.NODE_ENV !== 'production') {\n  TreeNode.displayName = 'TreeNode';\n}\nexport default TreeNode;","map":{"version":3,"names":["_extends","_defineProperty","_objectSpread","_slicedToArray","_objectWithoutProperties","_excluded","React","classNames","pickAttrs","TreeContext","UnstableContext","Indent","getEntity","convertNodePropsToEventData","ICON_OPEN","ICON_CLOSE","defaultTitle","TreeNode","props","_unstableContext$node","_context$filterTreeNo","_classNames4","eventKey","className","style","dragOver","dragOverGapTop","dragOverGapBottom","isLeaf","isStart","isEnd","expanded","selected","checked","halfChecked","loading","domRef","active","data","onMouseMove","selectable","otherProps","context","useContext","unstableContext","selectHandleRef","useRef","_React$useState","useState","_React$useState2","dragNodeHighlight","setDragNodeHighlight","isDisabled","disabled","nodeDisabled","call","isCheckable","useMemo","checkable","onSelect","e","onNodeSelect","onCheck","disableCheckbox","onNodeCheck","isSelectable","onSelectorClick","onNodeClick","onSelectorDoubleClick","onNodeDoubleClick","onMouseEnter","onNodeMouseEnter","onMouseLeave","onNodeMouseLeave","onContextMenu","onNodeContextMenu","isDraggable","draggable","nodeDraggable","onDragStart","stopPropagation","onNodeDragStart","dataTransfer","setData","_unused","onDragEnter","preventDefault","onNodeDragEnter","onDragOver","onNodeDragOver","onDragLeave","onNodeDragLeave","onDragEnd","onNodeDragEnd","onDrop","onNodeDrop","onExpand","onNodeExpand","hasChildren","_ref","keyEntities","children","Boolean","length","memoizedIsLeaf","loadData","loaded","useEffect","onNodeLoad","dragHandlerNode","_context$draggable","icon","createElement","concat","prefixCls","renderSwitcherIconDom","isInternalLeaf","switcherIcon","renderSwitcher","_switcherIconDom","switcherIconDom","onClick","checkboxNode","$custom","role","title","nodeState","iconNode","dropIndicatorNode","rootDraggable","showIndicator","dragOverNodeKey","dropIndicatorRender","dropPosition","dropLevelOffset","indent","direction","selectorNode","_props$title","wrapClass","$icon","showIcon","currentIcon","titleNode","titleRender","ref","onDoubleClick","dataOrAriaAttributeProps","aria","_ref2","level","isEndNode","draggableWithoutDisabled","dragging","draggingNodeKey","ariaSelected","undefined","dropTargetKey","dropContainerKey","filterTreeNode","isTreeNode","process","env","NODE_ENV","displayName"],"sources":["/home/command/Desktop/Hecatoncheir/Hecatoncheir/UI/frontend/node_modules/rc-tree/es/TreeNode.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"eventKey\", \"className\", \"style\", \"dragOver\", \"dragOverGapTop\", \"dragOverGapBottom\", \"isLeaf\", \"isStart\", \"isEnd\", \"expanded\", \"selected\", \"checked\", \"halfChecked\", \"loading\", \"domRef\", \"active\", \"data\", \"onMouseMove\", \"selectable\"];\nimport React from 'react';\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { TreeContext, UnstableContext } from \"./contextTypes\";\nimport Indent from \"./Indent\";\nimport getEntity from \"./utils/keyUtil\";\nimport { convertNodePropsToEventData } from \"./utils/treeUtil\";\nvar ICON_OPEN = 'open';\nvar ICON_CLOSE = 'close';\nvar defaultTitle = '---';\nvar TreeNode = function TreeNode(props) {\n  var _unstableContext$node, _context$filterTreeNo, _classNames4;\n  var eventKey = props.eventKey,\n    className = props.className,\n    style = props.style,\n    dragOver = props.dragOver,\n    dragOverGapTop = props.dragOverGapTop,\n    dragOverGapBottom = props.dragOverGapBottom,\n    isLeaf = props.isLeaf,\n    isStart = props.isStart,\n    isEnd = props.isEnd,\n    expanded = props.expanded,\n    selected = props.selected,\n    checked = props.checked,\n    halfChecked = props.halfChecked,\n    loading = props.loading,\n    domRef = props.domRef,\n    active = props.active,\n    data = props.data,\n    onMouseMove = props.onMouseMove,\n    selectable = props.selectable,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var context = React.useContext(TreeContext);\n  var unstableContext = React.useContext(UnstableContext);\n  var selectHandleRef = React.useRef(null);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    dragNodeHighlight = _React$useState2[0],\n    setDragNodeHighlight = _React$useState2[1];\n\n  // ======= State: Disabled State =======\n  var isDisabled = !!(context.disabled || props.disabled || (_unstableContext$node = unstableContext.nodeDisabled) !== null && _unstableContext$node !== void 0 && _unstableContext$node.call(unstableContext, data));\n  var isCheckable = React.useMemo(function () {\n    // Return false if tree or treeNode is not checkable\n    if (!context.checkable || props.checkable === false) {\n      return false;\n    }\n    return context.checkable;\n  }, [context.checkable, props.checkable]);\n\n  // ======= Event Handlers: Selection and Check =======\n  var onSelect = function onSelect(e) {\n    if (isDisabled) {\n      return;\n    }\n    context.onNodeSelect(e, convertNodePropsToEventData(props));\n  };\n  var onCheck = function onCheck(e) {\n    if (isDisabled) {\n      return;\n    }\n    if (!isCheckable || props.disableCheckbox) {\n      return;\n    }\n    context.onNodeCheck(e, convertNodePropsToEventData(props), !checked);\n  };\n\n  // ======= State: Selectable Check =======\n  var isSelectable = React.useMemo(function () {\n    // Ignore when selectable is undefined or null\n    if (typeof selectable === 'boolean') {\n      return selectable;\n    }\n    return context.selectable;\n  }, [selectable, context.selectable]);\n  var onSelectorClick = function onSelectorClick(e) {\n    // Click trigger before select/check operation\n    context.onNodeClick(e, convertNodePropsToEventData(props));\n    if (isSelectable) {\n      onSelect(e);\n    } else {\n      onCheck(e);\n    }\n  };\n  var onSelectorDoubleClick = function onSelectorDoubleClick(e) {\n    context.onNodeDoubleClick(e, convertNodePropsToEventData(props));\n  };\n  var onMouseEnter = function onMouseEnter(e) {\n    context.onNodeMouseEnter(e, convertNodePropsToEventData(props));\n  };\n  var onMouseLeave = function onMouseLeave(e) {\n    context.onNodeMouseLeave(e, convertNodePropsToEventData(props));\n  };\n  var onContextMenu = function onContextMenu(e) {\n    context.onNodeContextMenu(e, convertNodePropsToEventData(props));\n  };\n\n  // ======= Drag: Drag Enabled =======\n  var isDraggable = React.useMemo(function () {\n    return !!(context.draggable && (!context.draggable.nodeDraggable || context.draggable.nodeDraggable(data)));\n  }, [context.draggable, data]);\n\n  // ======= Drag: Drag Event Handlers =======\n  var onDragStart = function onDragStart(e) {\n    e.stopPropagation();\n    setDragNodeHighlight(true);\n    context.onNodeDragStart(e, props);\n    try {\n      // ie throw error\n      // firefox-need-it\n      e.dataTransfer.setData('text/plain', '');\n    } catch (_unused) {\n      // empty\n    }\n  };\n  var onDragEnter = function onDragEnter(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    context.onNodeDragEnter(e, props);\n  };\n  var onDragOver = function onDragOver(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    context.onNodeDragOver(e, props);\n  };\n  var onDragLeave = function onDragLeave(e) {\n    e.stopPropagation();\n    context.onNodeDragLeave(e, props);\n  };\n  var onDragEnd = function onDragEnd(e) {\n    e.stopPropagation();\n    setDragNodeHighlight(false);\n    context.onNodeDragEnd(e, props);\n  };\n  var onDrop = function onDrop(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragNodeHighlight(false);\n    context.onNodeDrop(e, props);\n  };\n\n  // ======= Expand: Node Expansion =======\n  var onExpand = function onExpand(e) {\n    if (loading) {\n      return;\n    }\n    context.onNodeExpand(e, convertNodePropsToEventData(props));\n  };\n\n  // ======= State: Has Children =======\n  var hasChildren = React.useMemo(function () {\n    var _ref = getEntity(context.keyEntities, eventKey) || {},\n      children = _ref.children;\n    return Boolean((children || []).length);\n  }, [context.keyEntities, eventKey]);\n\n  // ======= State: Leaf Check =======\n  var memoizedIsLeaf = React.useMemo(function () {\n    if (isLeaf === false) {\n      return false;\n    }\n    return isLeaf || !context.loadData && !hasChildren || context.loadData && props.loaded && !hasChildren;\n  }, [isLeaf, context.loadData, hasChildren, props.loaded]);\n\n  // ============== Effect ==============\n  React.useEffect(function () {\n    // Load data to avoid default expanded tree without data\n    if (loading) {\n      return;\n    }\n    // read from state to avoid loadData at same time\n    if (typeof context.loadData === 'function' && expanded && !memoizedIsLeaf && !props.loaded) {\n      // We needn't reload data when has children in sync logic\n      // It's only needed in node expanded\n      context.onNodeLoad(convertNodePropsToEventData(props));\n    }\n  }, [loading, context.loadData, context.onNodeLoad, expanded, memoizedIsLeaf, props]);\n\n  // ==================== Render: Drag Handler ====================\n  var dragHandlerNode = React.useMemo(function () {\n    var _context$draggable;\n    if (!((_context$draggable = context.draggable) !== null && _context$draggable !== void 0 && _context$draggable.icon)) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(context.prefixCls, \"-draggable-icon\")\n    }, context.draggable.icon);\n  }, [context.draggable]);\n\n  // ====================== Render: Switcher ======================\n  var renderSwitcherIconDom = function renderSwitcherIconDom(isInternalLeaf) {\n    var switcherIcon = props.switcherIcon || context.switcherIcon;\n    // if switcherIconDom is null, no render switcher span\n    if (typeof switcherIcon === 'function') {\n      return switcherIcon(_objectSpread(_objectSpread({}, props), {}, {\n        isLeaf: isInternalLeaf\n      }));\n    }\n    return switcherIcon;\n  };\n\n  // Switcher\n  var renderSwitcher = function renderSwitcher() {\n    if (memoizedIsLeaf) {\n      // if switcherIconDom is null, no render switcher span\n      var _switcherIconDom = renderSwitcherIconDom(true);\n      return _switcherIconDom !== false ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(\"\".concat(context.prefixCls, \"-switcher\"), \"\".concat(context.prefixCls, \"-switcher-noop\"))\n      }, _switcherIconDom) : null;\n    }\n    var switcherIconDom = renderSwitcherIconDom(false);\n    return switcherIconDom !== false ? /*#__PURE__*/React.createElement(\"span\", {\n      onClick: onExpand,\n      className: classNames(\"\".concat(context.prefixCls, \"-switcher\"), \"\".concat(context.prefixCls, \"-switcher_\").concat(expanded ? ICON_OPEN : ICON_CLOSE))\n    }, switcherIconDom) : null;\n  };\n\n  // ====================== Checkbox ======================\n  var checkboxNode = React.useMemo(function () {\n    if (!isCheckable) {\n      return null;\n    }\n\n    // [Legacy] Custom element should be separate with `checkable` in future\n    var $custom = typeof isCheckable !== 'boolean' ? isCheckable : null;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(context.prefixCls, \"-checkbox\"), _defineProperty(_defineProperty(_defineProperty({}, \"\".concat(context.prefixCls, \"-checkbox-checked\"), checked), \"\".concat(context.prefixCls, \"-checkbox-indeterminate\"), !checked && halfChecked), \"\".concat(context.prefixCls, \"-checkbox-disabled\"), isDisabled || props.disableCheckbox)),\n      onClick: onCheck,\n      role: \"checkbox\",\n      \"aria-checked\": halfChecked ? 'mixed' : checked,\n      \"aria-disabled\": isDisabled || props.disableCheckbox,\n      \"aria-label\": \"Select \".concat(typeof props.title === 'string' ? props.title : 'tree node')\n    }, $custom);\n  }, [isCheckable, checked, halfChecked, isDisabled, props.disableCheckbox, props.title]);\n\n  // ============== State: Node State (Open/Close) ==============\n  var nodeState = React.useMemo(function () {\n    if (memoizedIsLeaf) {\n      return null;\n    }\n    return expanded ? ICON_OPEN : ICON_CLOSE;\n  }, [memoizedIsLeaf, expanded]);\n\n  // ==================== Render: Title + Icon ====================\n  var iconNode = React.useMemo(function () {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(context.prefixCls, \"-iconEle\"), \"\".concat(context.prefixCls, \"-icon__\").concat(nodeState || 'docu'), _defineProperty({}, \"\".concat(context.prefixCls, \"-icon_loading\"), loading))\n    });\n  }, [context.prefixCls, nodeState, loading]);\n\n  // =================== Drop Indicator ===================\n  var dropIndicatorNode = React.useMemo(function () {\n    var rootDraggable = Boolean(context.draggable);\n    // allowDrop is calculated in Tree.tsx, there is no need for calc it here\n    var showIndicator = !props.disabled && rootDraggable && context.dragOverNodeKey === eventKey;\n    if (!showIndicator) {\n      return null;\n    }\n    return context.dropIndicatorRender({\n      dropPosition: context.dropPosition,\n      dropLevelOffset: context.dropLevelOffset,\n      indent: context.indent,\n      prefixCls: context.prefixCls,\n      direction: context.direction\n    });\n  }, [context.dropPosition, context.dropLevelOffset, context.indent, context.prefixCls, context.direction, context.draggable, context.dragOverNodeKey, context.dropIndicatorRender]);\n\n  // Icon + Title\n  var selectorNode = React.useMemo(function () {\n    var _props$title = props.title,\n      title = _props$title === void 0 ? defaultTitle : _props$title;\n    var wrapClass = \"\".concat(context.prefixCls, \"-node-content-wrapper\");\n\n    // Icon - Still show loading icon when loading without showIcon\n    var $icon;\n    if (context.showIcon) {\n      var currentIcon = props.icon || context.icon;\n      $icon = currentIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: classNames(\"\".concat(context.prefixCls, \"-iconEle\"), \"\".concat(context.prefixCls, \"-icon__customize\"))\n      }, typeof currentIcon === 'function' ? currentIcon(props) : currentIcon) : iconNode;\n    } else if (context.loadData && loading) {\n      $icon = iconNode;\n    }\n\n    // Title\n    var titleNode;\n    if (typeof title === 'function') {\n      titleNode = title(data);\n    } else if (context.titleRender) {\n      titleNode = context.titleRender(data);\n    } else {\n      titleNode = title;\n    }\n    return /*#__PURE__*/React.createElement(\"span\", {\n      ref: selectHandleRef,\n      title: typeof title === 'string' ? title : '',\n      className: classNames(wrapClass, \"\".concat(wrapClass, \"-\").concat(nodeState || 'normal'), _defineProperty({}, \"\".concat(context.prefixCls, \"-node-selected\"), !isDisabled && (selected || dragNodeHighlight))),\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onContextMenu: onContextMenu,\n      onClick: onSelectorClick,\n      onDoubleClick: onSelectorDoubleClick\n    }, $icon, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(context.prefixCls, \"-title\")\n    }, titleNode), dropIndicatorNode);\n  }, [context.prefixCls, context.showIcon, props, context.icon, iconNode, context.titleRender, data, nodeState, onMouseEnter, onMouseLeave, onContextMenu, onSelectorClick, onSelectorDoubleClick]);\n  var dataOrAriaAttributeProps = pickAttrs(otherProps, {\n    aria: true,\n    data: true\n  });\n  var _ref2 = getEntity(context.keyEntities, eventKey) || {},\n    level = _ref2.level;\n  var isEndNode = isEnd[isEnd.length - 1];\n  var draggableWithoutDisabled = !isDisabled && isDraggable;\n  var dragging = context.draggingNodeKey === eventKey;\n  var ariaSelected = selectable !== undefined ? {\n    'aria-selected': !!selectable\n  } : undefined;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: domRef,\n    role: \"treeitem\",\n    \"aria-expanded\": isLeaf ? undefined : expanded,\n    className: classNames(className, \"\".concat(context.prefixCls, \"-treenode\"), (_classNames4 = {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classNames4, \"\".concat(context.prefixCls, \"-treenode-disabled\"), isDisabled), \"\".concat(context.prefixCls, \"-treenode-switcher-\").concat(expanded ? 'open' : 'close'), !isLeaf), \"\".concat(context.prefixCls, \"-treenode-checkbox-checked\"), checked), \"\".concat(context.prefixCls, \"-treenode-checkbox-indeterminate\"), halfChecked), \"\".concat(context.prefixCls, \"-treenode-selected\"), selected), \"\".concat(context.prefixCls, \"-treenode-loading\"), loading), \"\".concat(context.prefixCls, \"-treenode-active\"), active), \"\".concat(context.prefixCls, \"-treenode-leaf-last\"), isEndNode), \"\".concat(context.prefixCls, \"-treenode-draggable\"), isDraggable), \"dragging\", dragging), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_classNames4, 'drop-target', context.dropTargetKey === eventKey), 'drop-container', context.dropContainerKey === eventKey), 'drag-over', !isDisabled && dragOver), 'drag-over-gap-top', !isDisabled && dragOverGapTop), 'drag-over-gap-bottom', !isDisabled && dragOverGapBottom), 'filter-node', (_context$filterTreeNo = context.filterTreeNode) === null || _context$filterTreeNo === void 0 ? void 0 : _context$filterTreeNo.call(context, convertNodePropsToEventData(props))), \"\".concat(context.prefixCls, \"-treenode-leaf\"), memoizedIsLeaf))),\n    style: style\n    // Draggable config\n    ,\n    draggable: draggableWithoutDisabled,\n    onDragStart: draggableWithoutDisabled ? onDragStart : undefined\n    // Drop config\n    ,\n    onDragEnter: isDraggable ? onDragEnter : undefined,\n    onDragOver: isDraggable ? onDragOver : undefined,\n    onDragLeave: isDraggable ? onDragLeave : undefined,\n    onDrop: isDraggable ? onDrop : undefined,\n    onDragEnd: isDraggable ? onDragEnd : undefined,\n    onMouseMove: onMouseMove\n  }, ariaSelected, dataOrAriaAttributeProps), /*#__PURE__*/React.createElement(Indent, {\n    prefixCls: context.prefixCls,\n    level: level,\n    isStart: isStart,\n    isEnd: isEnd\n  }), dragHandlerNode, renderSwitcher(), checkboxNode, selectorNode);\n};\nTreeNode.isTreeNode = 1;\nif (process.env.NODE_ENV !== 'production') {\n  TreeNode.displayName = 'TreeNode';\n}\nexport default TreeNode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}