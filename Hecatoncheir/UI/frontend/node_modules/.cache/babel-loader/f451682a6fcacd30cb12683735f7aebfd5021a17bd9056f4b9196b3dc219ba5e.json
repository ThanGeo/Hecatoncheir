{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useForm as useRcForm } from 'rc-field-form';\nimport { getDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { getFieldId, toArray } from '../util';\nfunction toNamePathStr(name) {\n  const namePath = toArray(name);\n  return namePath.join('_');\n}\nfunction getFieldDOMNode(name, wrapForm) {\n  const field = wrapForm.getFieldInstance(name);\n  const fieldDom = getDOM(field);\n  if (fieldDom) {\n    return fieldDom;\n  }\n  const fieldId = getFieldId(toArray(name), wrapForm.__INTERNAL__.name);\n  if (fieldId) {\n    return document.getElementById(fieldId);\n  }\n}\nexport default function useForm(form) {\n  const [rcForm] = useRcForm();\n  const itemsRef = React.useRef({});\n  const wrapForm = React.useMemo(() => form !== null && form !== void 0 ? form : Object.assign(Object.assign({}, rcForm), {\n    __INTERNAL__: {\n      itemRef: name => node => {\n        const namePathStr = toNamePathStr(name);\n        if (node) {\n          itemsRef.current[namePathStr] = node;\n        } else {\n          delete itemsRef.current[namePathStr];\n        }\n      }\n    },\n    scrollToField: (name, options = {}) => {\n      const {\n          focus\n        } = options,\n        restOpt = __rest(options, [\"focus\"]);\n      const node = getFieldDOMNode(name, wrapForm);\n      if (node) {\n        scrollIntoView(node, Object.assign({\n          scrollMode: 'if-needed',\n          block: 'nearest'\n        }, restOpt));\n        // Focus if scroll success\n        if (focus) {\n          wrapForm.focusField(name);\n        }\n      }\n    },\n    focusField: name => {\n      var _a, _b;\n      const itemRef = wrapForm.getFieldInstance(name);\n      if (typeof (itemRef === null || itemRef === void 0 ? void 0 : itemRef.focus) === 'function') {\n        itemRef.focus();\n      } else {\n        (_b = (_a = getFieldDOMNode(name, wrapForm)) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    },\n    getFieldInstance: name => {\n      const namePathStr = toNamePathStr(name);\n      return itemsRef.current[namePathStr];\n    }\n  }), [form, rcForm]);\n  return [wrapForm];\n}","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","useForm","useRcForm","getDOM","scrollIntoView","getFieldId","toArray","toNamePathStr","name","namePath","join","getFieldDOMNode","wrapForm","field","getFieldInstance","fieldDom","fieldId","__INTERNAL__","document","getElementById","form","rcForm","itemsRef","useRef","useMemo","assign","itemRef","node","namePathStr","current","scrollToField","options","focus","restOpt","scrollMode","block","focusField","_a","_b"],"sources":["/home/command/Desktop/hecatoncheir-app/hecatoncheir-ui/frontend/node_modules/antd/es/form/hooks/useForm.js"],"sourcesContent":["var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useForm as useRcForm } from 'rc-field-form';\nimport { getDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport { getFieldId, toArray } from '../util';\nfunction toNamePathStr(name) {\n  const namePath = toArray(name);\n  return namePath.join('_');\n}\nfunction getFieldDOMNode(name, wrapForm) {\n  const field = wrapForm.getFieldInstance(name);\n  const fieldDom = getDOM(field);\n  if (fieldDom) {\n    return fieldDom;\n  }\n  const fieldId = getFieldId(toArray(name), wrapForm.__INTERNAL__.name);\n  if (fieldId) {\n    return document.getElementById(fieldId);\n  }\n}\nexport default function useForm(form) {\n  const [rcForm] = useRcForm();\n  const itemsRef = React.useRef({});\n  const wrapForm = React.useMemo(() => form !== null && form !== void 0 ? form : Object.assign(Object.assign({}, rcForm), {\n    __INTERNAL__: {\n      itemRef: name => node => {\n        const namePathStr = toNamePathStr(name);\n        if (node) {\n          itemsRef.current[namePathStr] = node;\n        } else {\n          delete itemsRef.current[namePathStr];\n        }\n      }\n    },\n    scrollToField: (name, options = {}) => {\n      const {\n          focus\n        } = options,\n        restOpt = __rest(options, [\"focus\"]);\n      const node = getFieldDOMNode(name, wrapForm);\n      if (node) {\n        scrollIntoView(node, Object.assign({\n          scrollMode: 'if-needed',\n          block: 'nearest'\n        }, restOpt));\n        // Focus if scroll success\n        if (focus) {\n          wrapForm.focusField(name);\n        }\n      }\n    },\n    focusField: name => {\n      var _a, _b;\n      const itemRef = wrapForm.getFieldInstance(name);\n      if (typeof (itemRef === null || itemRef === void 0 ? void 0 : itemRef.focus) === 'function') {\n        itemRef.focus();\n      } else {\n        (_b = (_a = getFieldDOMNode(name, wrapForm)) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    },\n    getFieldInstance: name => {\n      const namePathStr = toNamePathStr(name);\n      return itemsRef.current[namePathStr];\n    }\n  }), [form, rcForm]);\n  return [wrapForm];\n}"],"mappings":"AAAA,IAAIA,MAAM,GAAG,IAAI,IAAI,IAAI,CAACA,MAAM,IAAI,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,CAAC,CAAC;EACV,KAAK,IAAIC,CAAC,IAAIH,CAAC,EAAE,IAAII,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACP,CAAC,EAAEG,CAAC,CAAC,IAAIF,CAAC,CAACO,OAAO,CAACL,CAAC,CAAC,GAAG,CAAC,EAAED,CAAC,CAACC,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EAChG,IAAIH,CAAC,IAAI,IAAI,IAAI,OAAOI,MAAM,CAACK,qBAAqB,KAAK,UAAU,EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEP,CAAC,GAAGC,MAAM,CAACK,qBAAqB,CAACT,CAAC,CAAC,EAAEU,CAAC,GAAGP,CAAC,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;IAC3I,IAAIT,CAAC,CAACO,OAAO,CAACL,CAAC,CAACO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIN,MAAM,CAACC,SAAS,CAACO,oBAAoB,CAACL,IAAI,CAACP,CAAC,EAAEG,CAAC,CAACO,CAAC,CAAC,CAAC,EAAER,CAAC,CAACC,CAAC,CAACO,CAAC,CAAC,CAAC,GAAGV,CAAC,CAACG,CAAC,CAACO,CAAC,CAAC,CAAC;EACnG;EACA,OAAOR,CAAC;AACV,CAAC;AACD,OAAO,KAAKW,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,IAAIC,SAAS,QAAQ,eAAe;AACpD,SAASC,MAAM,QAAQ,4BAA4B;AACnD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,SAASC,UAAU,EAAEC,OAAO,QAAQ,SAAS;AAC7C,SAASC,aAAaA,CAACC,IAAI,EAAE;EAC3B,MAAMC,QAAQ,GAAGH,OAAO,CAACE,IAAI,CAAC;EAC9B,OAAOC,QAAQ,CAACC,IAAI,CAAC,GAAG,CAAC;AAC3B;AACA,SAASC,eAAeA,CAACH,IAAI,EAAEI,QAAQ,EAAE;EACvC,MAAMC,KAAK,GAAGD,QAAQ,CAACE,gBAAgB,CAACN,IAAI,CAAC;EAC7C,MAAMO,QAAQ,GAAGZ,MAAM,CAACU,KAAK,CAAC;EAC9B,IAAIE,QAAQ,EAAE;IACZ,OAAOA,QAAQ;EACjB;EACA,MAAMC,OAAO,GAAGX,UAAU,CAACC,OAAO,CAACE,IAAI,CAAC,EAAEI,QAAQ,CAACK,YAAY,CAACT,IAAI,CAAC;EACrE,IAAIQ,OAAO,EAAE;IACX,OAAOE,QAAQ,CAACC,cAAc,CAACH,OAAO,CAAC;EACzC;AACF;AACA,eAAe,SAASf,OAAOA,CAACmB,IAAI,EAAE;EACpC,MAAM,CAACC,MAAM,CAAC,GAAGnB,SAAS,CAAC,CAAC;EAC5B,MAAMoB,QAAQ,GAAGtB,KAAK,CAACuB,MAAM,CAAC,CAAC,CAAC,CAAC;EACjC,MAAMX,QAAQ,GAAGZ,KAAK,CAACwB,OAAO,CAAC,MAAMJ,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAG7B,MAAM,CAACkC,MAAM,CAAClC,MAAM,CAACkC,MAAM,CAAC,CAAC,CAAC,EAAEJ,MAAM,CAAC,EAAE;IACtHJ,YAAY,EAAE;MACZS,OAAO,EAAElB,IAAI,IAAImB,IAAI,IAAI;QACvB,MAAMC,WAAW,GAAGrB,aAAa,CAACC,IAAI,CAAC;QACvC,IAAImB,IAAI,EAAE;UACRL,QAAQ,CAACO,OAAO,CAACD,WAAW,CAAC,GAAGD,IAAI;QACtC,CAAC,MAAM;UACL,OAAOL,QAAQ,CAACO,OAAO,CAACD,WAAW,CAAC;QACtC;MACF;IACF,CAAC;IACDE,aAAa,EAAEA,CAACtB,IAAI,EAAEuB,OAAO,GAAG,CAAC,CAAC,KAAK;MACrC,MAAM;UACFC;QACF,CAAC,GAAGD,OAAO;QACXE,OAAO,GAAG/C,MAAM,CAAC6C,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC;MACtC,MAAMJ,IAAI,GAAGhB,eAAe,CAACH,IAAI,EAAEI,QAAQ,CAAC;MAC5C,IAAIe,IAAI,EAAE;QACRvB,cAAc,CAACuB,IAAI,EAAEpC,MAAM,CAACkC,MAAM,CAAC;UACjCS,UAAU,EAAE,WAAW;UACvBC,KAAK,EAAE;QACT,CAAC,EAAEF,OAAO,CAAC,CAAC;QACZ;QACA,IAAID,KAAK,EAAE;UACTpB,QAAQ,CAACwB,UAAU,CAAC5B,IAAI,CAAC;QAC3B;MACF;IACF,CAAC;IACD4B,UAAU,EAAE5B,IAAI,IAAI;MAClB,IAAI6B,EAAE,EAAEC,EAAE;MACV,MAAMZ,OAAO,GAAGd,QAAQ,CAACE,gBAAgB,CAACN,IAAI,CAAC;MAC/C,IAAI,QAAQkB,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACM,KAAK,CAAC,KAAK,UAAU,EAAE;QAC3FN,OAAO,CAACM,KAAK,CAAC,CAAC;MACjB,CAAC,MAAM;QACL,CAACM,EAAE,GAAG,CAACD,EAAE,GAAG1B,eAAe,CAACH,IAAI,EAAEI,QAAQ,CAAC,MAAM,IAAI,IAAIyB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACL,KAAK,MAAM,IAAI,IAAIM,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC5C,IAAI,CAAC2C,EAAE,CAAC;MAC9I;IACF,CAAC;IACDvB,gBAAgB,EAAEN,IAAI,IAAI;MACxB,MAAMoB,WAAW,GAAGrB,aAAa,CAACC,IAAI,CAAC;MACvC,OAAOc,QAAQ,CAACO,OAAO,CAACD,WAAW,CAAC;IACtC;EACF,CAAC,CAAC,EAAE,CAACR,IAAI,EAAEC,MAAM,CAAC,CAAC;EACnB,OAAO,CAACT,QAAQ,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}