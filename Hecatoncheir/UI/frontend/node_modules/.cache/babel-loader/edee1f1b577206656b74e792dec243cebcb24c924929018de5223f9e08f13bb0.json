{"ast":null,"code":"var _jsxFileName = \"/home/command/Desktop/hecatoncheir-app/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\n// src/App.tsx\nimport React, { useState, useEffect } from 'react';\nimport ClusterSetup from './components/set-up-hecatoncheir';\nimport PCListDisplay from './components/pc-list';\nimport { Layout, theme, Typography, Col, Row } from 'antd'; // Removed Menu, Spin, MenuProps\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout; // Removed Sider\n\nconst {\n  Title\n} = Typography;\n\n// Example for what might appear after initialization\nconst ClusterDashboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    padding: 24,\n    minHeight: 360,\n    background: '#fff'\n  },\n  children: [/*#__PURE__*/_jsxDEV(Title, {\n    level: 3,\n    children: \"HEC Cluster Dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Your HEC cluster is initialized and ready!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"This is where your cluster monitoring, control, and other functionalities would be displayed.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"You can see the list of identified PCs on the left.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n_c = ClusterDashboard;\nconst App = () => {\n  _s();\n  // Removed collapsed state as Sider is removed\n  const [isClusterInitialized, setIsClusterInitialized] = useState(false);\n  const [pcNamesInput, setPcNamesInput] = useState(''); // Lifted state\n  const [currentPcs, setCurrentPcs] = useState([]); // Lifted state\n\n  const {\n    token: {\n      colorBgContainer,\n      borderRadiusLG\n    }\n  } = theme.useToken();\n\n  // Effect to update currentPcs whenever pcNamesInput changes\n  useEffect(() => {\n    const names = pcNamesInput.split('\\n').map(name => name.trim()).filter(name => name !== '');\n    setCurrentPcs(names.map(name => ({\n      nameOrIp: name\n    })));\n  }, [pcNamesInput]);\n  const handleClusterInitialized = () => {\n    setIsClusterInitialized(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        style: {\n          padding: 0,\n          background: colorBgContainer\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        style: {\n          margin: '0 16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 24,\n            minHeight: 'calc(100vh - 114px)',\n            // Adjust minHeight to fill content area, considering header/footer\n            background: colorBgContainer,\n            borderRadius: borderRadiusLG,\n            marginTop: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: 20,\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(PCListDisplay, {\n                pcs: currentPcs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 16,\n              children: !isClusterInitialized ? /*#__PURE__*/_jsxDEV(ClusterSetup, {\n                onClusterInitialized: handleClusterInitialized,\n                pcNamesInput: pcNamesInput,\n                setPcNamesInput: setPcNamesInput,\n                currentPcs: currentPcs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this) :\n              /*#__PURE__*/\n              // After initialization, ClusterDashboard is rendered here\n              _jsxDEV(ClusterDashboard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        style: {\n          textAlign: 'center'\n        },\n        children: [\"HEC Cluster \\xA9\", new Date().getFullYear(), \" Created by You\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Sx251EcCBZhgrRHWbIjFS5mOhrA=\", false, function () {\n  return [theme.useToken];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClusterDashboard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ClusterSetup","PCListDisplay","Layout","theme","Typography","Col","Row","jsxDEV","_jsxDEV","Header","Content","Footer","Title","ClusterDashboard","style","padding","minHeight","background","children","level","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","isClusterInitialized","setIsClusterInitialized","pcNamesInput","setPcNamesInput","currentPcs","setCurrentPcs","token","colorBgContainer","borderRadiusLG","useToken","names","split","map","name","trim","filter","nameOrIp","handleClusterInitialized","margin","borderRadius","marginTop","gutter","span","pcs","onClusterInitialized","textAlign","Date","getFullYear","_c2","$RefreshReg$"],"sources":["/home/command/Desktop/hecatoncheir-app/frontend/src/App.tsx"],"sourcesContent":["// src/App.tsx\nimport React, { useState, useEffect } from 'react';\nimport ClusterSetup from './components/set-up-hecatoncheir';\nimport PCListDisplay from './components/pc-list';\nimport { Layout, theme, Typography, Col, Row } from 'antd'; // Removed Menu, Spin, MenuProps\nimport './App.css';\n\nconst { Header, Content, Footer } = Layout; // Removed Sider\n\nconst { Title } = Typography;\n\n// Example for what might appear after initialization\nconst ClusterDashboard: React.FC = () => (\n  <div style={{ padding: 24, minHeight: 360, background: '#fff' }}>\n    <Title level={3}>HEC Cluster Dashboard</Title>\n    <p>Your HEC cluster is initialized and ready!</p>\n    <p>This is where your cluster monitoring, control, and other functionalities would be displayed.</p>\n    <p>You can see the list of identified PCs on the left.</p>\n  </div>\n);\n\nconst App: React.FC = () => {\n  // Removed collapsed state as Sider is removed\n  const [isClusterInitialized, setIsClusterInitialized] = useState(false);\n  const [pcNamesInput, setPcNamesInput] = useState<string>(''); // Lifted state\n  const [currentPcs, setCurrentPcs] = useState<{ nameOrIp: string }[]>([]); // Lifted state\n\n  const {\n    token: { colorBgContainer, borderRadiusLG },\n  } = theme.useToken();\n\n  // Effect to update currentPcs whenever pcNamesInput changes\n  useEffect(() => {\n    const names = pcNamesInput\n      .split('\\n')\n      .map((name) => name.trim())\n      .filter((name) => name !== '');\n    setCurrentPcs(names.map((name) => ({ nameOrIp: name })));\n  }, [pcNamesInput]);\n\n  const handleClusterInitialized = () => {\n    setIsClusterInitialized(true);\n  };\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      {/* Removed Sider */}\n      <Layout>\n        <Header style={{ padding: 0, background: colorBgContainer }} />\n        <Content style={{ margin: '0 16px' }}>\n          <div\n            style={{\n              padding: 24,\n              minHeight: 'calc(100vh - 114px)', // Adjust minHeight to fill content area, considering header/footer\n              background: colorBgContainer,\n              borderRadius: borderRadiusLG,\n              marginTop: 16,\n            }}\n          >\n            <Row gutter={20}>\n              {/* Left column for PCListDisplay - Always present */}\n              <Col span={8}>\n                <PCListDisplay pcs={currentPcs} />\n              </Col>\n              {/* Right column for the main content - Conditionally rendered */}\n              <Col span={16}>\n                {!isClusterInitialized ? (\n                  <ClusterSetup\n                    onClusterInitialized={handleClusterInitialized}\n                    pcNamesInput={pcNamesInput}\n                    setPcNamesInput={setPcNamesInput}\n                    currentPcs={currentPcs}\n                  />\n                ) : (\n                  // After initialization, ClusterDashboard is rendered here\n                  <ClusterDashboard />\n                )}\n              </Col>\n            </Row>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          HEC Cluster ©{new Date().getFullYear()} Created by You\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}