{"ast":null,"code":"var _jsxFileName = \"/home/command/Desktop/hecatoncheir-app/frontend/src/components/home-page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Select, Upload, Button, message, Space, Progress } from 'antd';\nimport { UploadOutlined, ReloadOutlined } from '@ant-design/icons';\nimport Input from 'antd/es/input/Input';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst HomePage = ({\n  onTerminateHec\n}) => {\n  _s();\n  const [form] = Form.useForm();\n  const [queryType, setQueryType] = useState(null);\n  const [spatialDataType, setSpatialDataType] = useState(null);\n  const [querySetType, setQuerySetType] = useState(null);\n  const [predicate, setPredicate] = useState(null);\n  const [isPrepareDatasetDisabled, setIsPrepareDatasetDisabled] = useState(true);\n\n  // States for the loading bar\n  const [loadingProgress, setLoadingProgress] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const checkFormValidity = () => {\n    const allFields = form.getFieldsValue();\n    let allRequiredFilled = true;\n    if (!allFields.queryType) {\n      allRequiredFilled = false;\n    }\n    if (allFields.queryType === 'rangeQuery' || allFields.queryType === 'knnQuery') {\n      if (!allFields.datasetFile || allFields.datasetFile.length === 0 || !allFields.queryDatasetFile || allFields.queryDatasetFile.length === 0 || !allFields.spatialDataType || !allFields.querySetType) {\n        allRequiredFilled = false;\n      }\n      if (allFields.queryType === 'knnQuery' && !allFields.kValue) {\n        allRequiredFilled = false;\n      }\n    } else if (allFields.queryType === 'spatialJoins') {\n      if (!allFields.leftDatasetFile || allFields.leftDatasetFile.length === 0 || !allFields.rightDatasetFile || allFields.rightDatasetFile.length === 0 || !allFields.predicate || !allFields.spatialDataType || !allFields.querySetType) {\n        allRequiredFilled = false;\n      }\n    }\n    setIsPrepareDatasetDisabled(!allRequiredFilled);\n  };\n  useEffect(() => {\n    checkFormValidity();\n  }, [queryType, spatialDataType, querySetType, predicate]);\n  useEffect(() => {\n    let interval = undefined;\n    if (isLoading) {\n      setLoadingProgress(0);\n      interval = setInterval(() => {\n        setLoadingProgress(prevProgress => {\n          if (prevProgress < 10000) {\n            return prevProgress + 1;\n          }\n          clearInterval(interval);\n          return 100;\n        });\n      }, 100);\n    } else {\n      if (interval) {\n        clearInterval(interval);\n      }\n      setLoadingProgress(0);\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [isLoading]);\n  const handleQueryTypeChange = value => {\n    setQueryType(value);\n    setSpatialDataType(null);\n    setQuerySetType(null);\n    setPredicate(null);\n    form.resetFields(['spatialDataType', 'querySetType', 'predicate', 'datasetFile', 'queryDatasetFile', 'leftDatasetFile', 'rightDatasetFile', 'kValue']);\n    setTimeout(checkFormValidity, 0);\n  };\n  const commonUploadProps = {\n    accept: '.tsv,.csv',\n    beforeUpload: file => {\n      const isTsc = file.name.endsWith('.tsv');\n      const isCsv = file.name.endsWith('.csv');\n      const isAllowed = isTsc || isCsv;\n      if (!isAllowed) {\n        message.error(`${file.name} is not a .tsv or .csv file!`);\n      }\n      return isAllowed || Upload.LIST_IGNORE;\n    },\n    maxCount: 1,\n    onRemove: () => {\n      return true;\n    }\n  };\n  const handleFinish = async values => {\n    setIsLoading(true); // Start loading animation\n    message.loading('Processing query...', 0);\n    const formData = new FormData();\n    formData.append('queryType', values.queryType || '');\n    if (values.queryType === 'rangeQuery' || values.queryType === 'knnQuery') {\n      if (values.spatialDataType) formData.append('spatialDataType', values.spatialDataType);\n      if (values.querySetType) formData.append('querySetType', values.querySetType);\n      if (values.datasetFile && values.datasetFile.length > 0 && values.datasetFile[0].originFileObj) {\n        formData.append('datasetFile', values.datasetFile[0].originFileObj);\n      }\n      if (values.queryDatasetFile && values.queryDatasetFile.length > 0 && values.queryDatasetFile[0].originFileObj) {\n        formData.append('queryDatasetFile', values.queryDatasetFile[0].originFileObj);\n      }\n      if (values.queryType === 'knnQuery' && values.kValue) {\n        formData.append('kValue', values.kValue);\n      }\n    } else if (values.queryType === 'spatialJoins') {\n      if (values.predicate) formData.append('predicate', values.predicate);\n      if (values.spatialDataType) formData.append('spatialDataType', values.spatialDataType);\n      if (values.querySetType) formData.append('querySetType', values.querySetType);\n      if (values.leftDatasetFile && values.leftDatasetFile.length > 0 && values.leftDatasetFile[0].originFileObj) {\n        formData.append('leftDatasetFile', values.leftDatasetFile[0].originFileObj);\n      }\n      if (values.rightDatasetFile && values.rightDatasetFile.length > 0 && values.rightDatasetFile[0].originFileObj) {\n        formData.append('rightDatasetFile', values.rightDatasetFile[0].originFileObj);\n      }\n    }\n    try {\n      const response = await fetch('http://localhost:5000/process-query', {\n        method: 'POST',\n        body: formData\n      });\n      message.destroy();\n      setIsLoading(false);\n      if (response.ok) {\n        const result = await response.json();\n        message.success('Query submitted successfully!');\n        console.log('Backend response:', result);\n      } else {\n        const errorText = await response.text();\n        message.error(`Query failed: ${errorText}`);\n        console.error('Backend error:', response.status, errorText);\n      }\n    } catch (error) {\n      message.destroy();\n      setIsLoading(false);\n      message.error('Network error or server unavailable.');\n      console.error('Fetch error:', error);\n    }\n  };\n  const handleResetForm = () => {\n    form.resetFields();\n    setQueryType(null);\n    setSpatialDataType(null);\n    setQuerySetType(null);\n    setPredicate(null);\n    message.info('Form cleared!');\n    // Trigger validation after reset\n    setTimeout(checkFormValidity, 0);\n  };\n  const handleTerminateButtonClick = () => {\n    message.info('Terminating HEC and returning to setup...');\n    onTerminateHec();\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: handleFinish,\n    initialValues: {\n      queryType: null\n    },\n    style: {\n      maxWidth: \"100%\",\n      margin: '20px auto',\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px'\n    },\n    onValuesChange: checkFormValidity,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"queryType\",\n      label: \"Query Type\",\n      rules: [{\n        required: true,\n        message: 'Please select a query type!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select a query type\",\n        onChange: handleQueryTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"rangeQuery\",\n          children: \"Range Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"knnQuery\",\n          children: \"KNN Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"spatialJoins\",\n          children: \"Spatial Joins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), queryType && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(queryType === 'rangeQuery' || queryType === 'knnQuery') && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          direction: \"vertical\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '16px',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"datasetFile\",\n              label: \"Dataset File\",\n              valuePropName: \"fileList\",\n              getValueFromEvent: e => e && e.fileList,\n              rules: [{\n                required: true,\n                message: 'Please select a dataset file!'\n              }],\n              style: {\n                flex: 1,\n                minWidth: '250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                ...commonUploadProps,\n                style: {\n                  width: \"-moz-available\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 37\n                  }, this),\n                  style: {\n                    width: '100%'\n                  },\n                  children: \"Select Dataset File (.tsv or .csv)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"spatialDataType\",\n              label: \"Spatial Data Type\",\n              rules: [{\n                required: true,\n                message: 'Please select a spatial data type!'\n              }],\n              style: {\n                flex: 1,\n                minWidth: '250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"Select spatial data type\",\n                onChange: value => setSpatialDataType(value),\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"polygon\",\n                  children: \"Polygon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"points\",\n                  children: \"Points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"line\",\n                  children: \"Line\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '16px',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"queryDatasetFile\",\n              label: \"Query Dataset File\",\n              valuePropName: \"fileList\",\n              getValueFromEvent: e => e && e.fileList,\n              rules: [{\n                required: true,\n                message: 'Please select a query dataset file!'\n              }],\n              style: {\n                flex: 1,\n                minWidth: '250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                ...commonUploadProps,\n                style: {\n                  width: \"-moz-available\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 37\n                  }, this),\n                  style: {\n                    width: '100%'\n                  },\n                  children: \"Select Query Dataset File (.tsv or .csv)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"querySetType\",\n              label: \"Query Set Type\",\n              rules: [{\n                required: true,\n                message: 'Please select a query set type!'\n              }],\n              style: {\n                flex: 1,\n                minWidth: '250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"Select query set type\",\n                onChange: value => setQuerySetType(value),\n                children: [queryType === 'rangeQuery' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Option, {\n                    value: \"polygon\",\n                    children: \"Polygon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Option, {\n                    value: \"box\",\n                    children: \"Box\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true), queryType === 'knnQuery' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Option, {\n                    value: \"point\",\n                    children: \"Point\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Option, {\n                    value: \"polygon\",\n                    children: \"Polygon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this), queryType === 'knnQuery' && /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"kValue\",\n            label: \"K Value (for KNN)\",\n            rules: [{\n              required: true,\n              message: 'Please input K value!'\n            }],\n            style: {\n              maxWidth: '250px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              placeholder: \"Enter K value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), queryType === 'spatialJoins' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          direction: \"vertical\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '16px',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"leftDatasetFile\",\n              label: \"Left Dataset File\",\n              valuePropName: \"fileList\",\n              getValueFromEvent: e => e && e.fileList,\n              rules: [{\n                required: true,\n                message: 'Please select a left dataset file!'\n              }],\n              style: {\n                flex: 1,\n                minWidth: '250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                ...commonUploadProps,\n                style: {\n                  width: \"-moz-available\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 37\n                  }, this),\n                  style: {\n                    width: '100%'\n                  },\n                  children: \"Select Left Dataset File (.tsv or .csv)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"spatialDataType\",\n              label: \"Left Dataset Type\",\n              rules: [{\n                required: true,\n                message: 'Please select a spatial data type!'\n              }],\n              style: {\n                flex: 1,\n                minWidth: '250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"Select spatial data type\",\n                onChange: value => setSpatialDataType(value),\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"polygon\",\n                  children: \"Polygon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"points\",\n                  children: \"Points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"line\",\n                  children: \"Line\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '16px',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"rightDatasetFile\",\n              label: \"Right Dataset File\",\n              valuePropName: \"fileList\",\n              getValueFromEvent: e => e && e.fileList,\n              rules: [{\n                required: true,\n                message: 'Please select a right dataset file!'\n              }],\n              style: {\n                flex: 1,\n                minWidth: '250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Upload, {\n                ...commonUploadProps,\n                style: {\n                  width: \"-moz-available\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 37\n                  }, this),\n                  style: {\n                    width: '100%'\n                  },\n                  children: \"Select Right Dataset File (.tsv or .csv)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"querySetType\",\n              label: \"Right Dataset Type\",\n              rules: [{\n                required: true,\n                message: 'Please select a query set type!'\n              }],\n              style: {\n                flex: 1,\n                minWidth: '250px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                placeholder: \"Select query set type\",\n                onChange: value => setQuerySetType(value),\n                children: [/*#__PURE__*/_jsxDEV(Option, {\n                  value: \"polygon\",\n                  children: \"Polygon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"box\",\n                  children: \"Box\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Option, {\n                  value: \"point\",\n                  children: \"Point\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"predicate\",\n            label: \"Predicate\",\n            rules: [{\n              required: true,\n              message: 'Please select a predicate!'\n            }],\n            style: {\n              maxWidth: '250px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select predicate\",\n              onChange: value => setPredicate(value),\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"intersect\",\n                children: \"Intersect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"inside\",\n                children: \"Inside\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"contains\",\n                children: \"Contains\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"covers\",\n                children: \"Covers\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"coveredBy\",\n                children: \"Covered By\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"equals\",\n                children: \"Equals\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"meet\",\n                children: \"Meet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"findRelation\",\n                children: \"Find Relation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          textAlignLast: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"default\",\n            danger: true,\n            onClick: handleTerminateButtonClick,\n            disabled: isLoading,\n            children: \"Terminate Hecatoncheir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"default\",\n            icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 44\n            }, this),\n            onClick: handleResetForm,\n            disabled: isLoading,\n            children: \"Clear Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            disabled: isPrepareDatasetDisabled || isLoading,\n            children: \"Prepare Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            disabled: isPrepareDatasetDisabled || isLoading,\n            children: \"Submit Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), queryType == null && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"default\",\n          danger: true,\n          onClick: handleTerminateButtonClick,\n          disabled: isLoading,\n          children: \"Terminate Hecatoncheir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 7\n      }, this)\n    }, void 0, false), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Progress, {\n        percent: loadingProgress,\n        status: \"active\",\n        showInfo: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '10px',\n          color: '#888'\n        },\n        children: \"Processing query... Please wait up to 10 seconds.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"92JtUAVz9haeEwCSHaGq7tGiM6A=\", false, function () {\n  return [Form.useForm];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Form","Select","Upload","Button","message","Space","Progress","UploadOutlined","ReloadOutlined","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","HomePage","onTerminateHec","_s","form","useForm","queryType","setQueryType","spatialDataType","setSpatialDataType","querySetType","setQuerySetType","predicate","setPredicate","isPrepareDatasetDisabled","setIsPrepareDatasetDisabled","loadingProgress","setLoadingProgress","isLoading","setIsLoading","checkFormValidity","allFields","getFieldsValue","allRequiredFilled","datasetFile","length","queryDatasetFile","kValue","leftDatasetFile","rightDatasetFile","interval","undefined","setInterval","prevProgress","clearInterval","handleQueryTypeChange","value","resetFields","setTimeout","commonUploadProps","accept","beforeUpload","file","isTsc","name","endsWith","isCsv","isAllowed","error","LIST_IGNORE","maxCount","onRemove","handleFinish","values","loading","formData","FormData","append","originFileObj","response","fetch","method","body","destroy","ok","result","json","success","console","log","errorText","text","status","handleResetForm","info","handleTerminateButtonClick","layout","onFinish","initialValues","style","maxWidth","margin","padding","border","borderRadius","onValuesChange","children","Item","label","rules","required","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","direction","width","display","gap","flexWrap","valuePropName","getValueFromEvent","e","fileList","flex","minWidth","icon","type","textAlignLast","danger","onClick","disabled","htmlType","justifyContent","marginTop","percent","showInfo","textAlign","color","_c","$RefreshReg$"],"sources":["/home/command/Desktop/hecatoncheir-app/frontend/src/components/home-page.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Select, Upload, Button, message, Space, Progress } from 'antd';\nimport { UploadOutlined, ReloadOutlined } from '@ant-design/icons';\nimport type { UploadProps } from 'antd/es/upload/interface';\nimport Input from 'antd/es/input/Input';\n\nconst { Option } = Select;\n\ntype QueryType = 'rangeQuery' | 'knnQuery' | 'spatialJoins' | null;\ntype SpatialDataType = 'polygon' | 'points' | 'line' | null;\ntype RangeQuerySetType = 'polygon' | 'box' | null;\ntype KNNQuerySetType = 'point' | 'polygon' | null;\ntype PredicateType = 'intersect' | 'inside' | 'contains' | 'covers' | 'coveredBy' | 'equals' | 'meet' | 'findRelation' | null;\ntype SpatialJoinQuerySetType = 'polygon' | 'box' | 'point' | null;\n\ninterface HomePageProps {\n  onTerminateHec: () => void;\n}\n\nconst HomePage: React.FC<HomePageProps> = ({ onTerminateHec }) => {\n  const [form] = Form.useForm();\n  const [queryType, setQueryType] = useState<QueryType>(null);\n  const [spatialDataType, setSpatialDataType] = useState<SpatialDataType>(null);\n  const [querySetType, setQuerySetType] = useState<RangeQuerySetType | KNNQuerySetType | SpatialJoinQuerySetType | null>(null);\n  const [predicate, setPredicate] = useState<PredicateType>(null);\n  const [isPrepareDatasetDisabled, setIsPrepareDatasetDisabled] = useState(true);\n\n  // States for the loading bar\n  const [loadingProgress, setLoadingProgress] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const checkFormValidity = () => {\n    const allFields = form.getFieldsValue();\n    let allRequiredFilled = true;\n\n    if (!allFields.queryType) {\n      allRequiredFilled = false;\n    }\n\n    if (allFields.queryType === 'rangeQuery' || allFields.queryType === 'knnQuery') {\n      if (\n        !allFields.datasetFile || allFields.datasetFile.length === 0 ||\n        !allFields.queryDatasetFile || allFields.queryDatasetFile.length === 0 ||\n        !allFields.spatialDataType ||\n        !allFields.querySetType\n      ) {\n        allRequiredFilled = false;\n      }\n      if (allFields.queryType === 'knnQuery' && !allFields.kValue) {\n        allRequiredFilled = false;\n      }\n    } else if (allFields.queryType === 'spatialJoins') {\n      if (\n        !allFields.leftDatasetFile || allFields.leftDatasetFile.length === 0 ||\n        !allFields.rightDatasetFile || allFields.rightDatasetFile.length === 0 ||\n        !allFields.predicate ||\n        !allFields.spatialDataType ||\n        !allFields.querySetType\n      ) {\n        allRequiredFilled = false;\n      }\n    }\n\n    setIsPrepareDatasetDisabled(!allRequiredFilled);\n  };\n\n  useEffect(() => {\n    checkFormValidity();\n  }, [queryType, spatialDataType, querySetType, predicate]);\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout | undefined = undefined;\n    if (isLoading) {\n      setLoadingProgress(0);\n      interval = setInterval(() => {\n        setLoadingProgress((prevProgress) => {\n          if (prevProgress < 10000) {\n            return prevProgress + 1;\n          }\n          clearInterval(interval!);\n          return 100;\n        });\n      }, 100);\n    } else {\n      if (interval) {\n        clearInterval(interval);\n      }\n      setLoadingProgress(0);\n    }\n\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [isLoading]);\n\n  const handleQueryTypeChange = (value: QueryType) => {\n    setQueryType(value);\n    setSpatialDataType(null);\n    setQuerySetType(null);\n    setPredicate(null);\n    form.resetFields([\n      'spatialDataType',\n      'querySetType',\n      'predicate',\n      'datasetFile',\n      'queryDatasetFile',\n      'leftDatasetFile',\n      'rightDatasetFile',\n      'kValue',\n    ]);\n    setTimeout(checkFormValidity, 0);\n  };\n\n  const commonUploadProps: UploadProps = {\n    accept: '.tsv,.csv',\n    beforeUpload: (file) => {\n      const isTsc = file.name.endsWith('.tsv');\n      const isCsv = file.name.endsWith('.csv');\n      const isAllowed = isTsc || isCsv;\n      if (!isAllowed) {\n        message.error(`${file.name} is not a .tsv or .csv file!`);\n      }\n      return isAllowed || Upload.LIST_IGNORE;\n    },\n    maxCount: 1,\n    onRemove: () => {\n      return true;\n    },\n  };\n\n  const handleFinish = async (values: any) => {\n    setIsLoading(true); // Start loading animation\n    message.loading('Processing query...', 0);\n\n    const formData = new FormData();\n\n    formData.append('queryType', values.queryType || '');\n\n    if (values.queryType === 'rangeQuery' || values.queryType === 'knnQuery') {\n      if (values.spatialDataType) formData.append('spatialDataType', values.spatialDataType);\n      if (values.querySetType) formData.append('querySetType', values.querySetType);\n\n      if (values.datasetFile && values.datasetFile.length > 0 && values.datasetFile[0].originFileObj) {\n        formData.append('datasetFile', values.datasetFile[0].originFileObj);\n      }\n      if (values.queryDatasetFile && values.queryDatasetFile.length > 0 && values.queryDatasetFile[0].originFileObj) {\n        formData.append('queryDatasetFile', values.queryDatasetFile[0].originFileObj);\n      }\n\n      if (values.queryType === 'knnQuery' && values.kValue) {\n        formData.append('kValue', values.kValue);\n      }\n    } else if (values.queryType === 'spatialJoins') {\n      if (values.predicate) formData.append('predicate', values.predicate);\n      if (values.spatialDataType) formData.append('spatialDataType', values.spatialDataType);\n      if (values.querySetType) formData.append('querySetType', values.querySetType);\n\n      if (values.leftDatasetFile && values.leftDatasetFile.length > 0 && values.leftDatasetFile[0].originFileObj) {\n        formData.append('leftDatasetFile', values.leftDatasetFile[0].originFileObj);\n      }\n      if (values.rightDatasetFile && values.rightDatasetFile.length > 0 && values.rightDatasetFile[0].originFileObj) {\n        formData.append('rightDatasetFile', values.rightDatasetFile[0].originFileObj);\n      }\n    }\n\n    try {\n        const response = await fetch('http://localhost:5000/process-query', {\n            method: 'POST',\n            body: formData,\n        });\n\n        message.destroy();\n        setIsLoading(false);\n\n        if (response.ok) {\n            const result = await response.json();\n            message.success('Query submitted successfully!');\n            console.log('Backend response:', result);\n        } else {\n            const errorText = await response.text();\n            message.error(`Query failed: ${errorText}`);\n            console.error('Backend error:', response.status, errorText);\n        }\n    } catch (error) {\n        message.destroy();\n        setIsLoading(false);\n        message.error('Network error or server unavailable.');\n        console.error('Fetch error:', error);\n    }\n  };\n\n  const handleResetForm = () => {\n    form.resetFields();\n    setQueryType(null);\n    setSpatialDataType(null);\n    setQuerySetType(null);\n    setPredicate(null);\n    message.info('Form cleared!');\n    // Trigger validation after reset\n    setTimeout(checkFormValidity, 0);\n  };\n\n  const handleTerminateButtonClick = () => {\n    message.info('Terminating HEC and returning to setup...');\n    onTerminateHec();\n  };\n\n  return (\n    <Form\n      form={form}\n      layout=\"vertical\"\n      onFinish={handleFinish}\n      initialValues={{ queryType: null }}\n      style={{ maxWidth: \"100%\", margin: '20px auto', padding: '20px', border: '1px solid #eee', borderRadius: '8px' }}\n      onValuesChange={checkFormValidity}\n    >\n      <Form.Item\n        name=\"queryType\"\n        label=\"Query Type\"\n        rules={[{ required: true, message: 'Please select a query type!'}]}\n      >\n        <Select placeholder=\"Select a query type\" onChange={handleQueryTypeChange}>\n          <Option value=\"rangeQuery\">Range Query</Option>\n          <Option value=\"knnQuery\">KNN Query</Option>\n          <Option value=\"spatialJoins\">Spatial Joins</Option>\n        </Select>\n      </Form.Item>\n\n      {queryType && (\n        <>\n          {(queryType === 'rangeQuery' || queryType === 'knnQuery') && (\n            <>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <div style={{ display: 'flex', gap: '16px', flexWrap: 'wrap' }}>\n                  <Form.Item\n                    name=\"datasetFile\"\n                    label=\"Dataset File\"\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={(e) => e && e.fileList}\n                    rules={[{ required: true, message: 'Please select a dataset file!' }]}\n                    style={{ flex: 1, minWidth: '250px' }}\n                  >\n                    <Upload {...commonUploadProps}  style={{ width:\"-moz-available\"}}>\n                      <Button icon={<UploadOutlined />} style={{ width: '100%' }}>Select Dataset File (.tsv or .csv)</Button>\n                    </Upload>\n                  </Form.Item>\n                  <Form.Item\n                    name=\"spatialDataType\"\n                    label=\"Spatial Data Type\"\n                    rules={[{ required: true, message: 'Please select a spatial data type!' }]}\n                    style={{ flex: 1, minWidth: '250px' }}\n                  >\n                    <Select placeholder=\"Select spatial data type\" onChange={(value: SpatialDataType) => setSpatialDataType(value)}>\n                      <Option value=\"polygon\">Polygon</Option>\n                      <Option value=\"points\">Points</Option>\n                      <Option value=\"line\">Line</Option>\n                    </Select>\n                  </Form.Item>\n                </div>\n\n                <div style={{ display: 'flex', gap: '16px', flexWrap: 'wrap' }}>\n                  <Form.Item\n                    name=\"queryDatasetFile\"\n                    label=\"Query Dataset File\"\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={(e) => e && e.fileList}\n                    rules={[{ required: true, message: 'Please select a query dataset file!' }]}\n                    style={{ flex: 1, minWidth: '250px' }}\n                  >\n                    <Upload {...commonUploadProps}  style={{ width:\"-moz-available\"}}>\n                      <Button icon={<UploadOutlined />} style={{ width: '100%' }}>Select Query Dataset File (.tsv or .csv)</Button>\n                    </Upload>\n                  </Form.Item>\n                  <Form.Item\n                    name=\"querySetType\"\n                    label=\"Query Set Type\"\n                    rules={[{ required: true, message: 'Please select a query set type!' }]}\n                    style={{ flex: 1, minWidth: '250px' }}\n                  >\n                    <Select placeholder=\"Select query set type\" onChange={(value: RangeQuerySetType | KNNQuerySetType) => setQuerySetType(value)}>\n                      {queryType === 'rangeQuery' && (\n                        <>\n                          <Option value=\"polygon\">Polygon</Option>\n                          <Option value=\"box\">Box</Option>\n                        </>\n                      )}\n                      {queryType === 'knnQuery' && (\n                        <>\n                          <Option value=\"point\">Point</Option>\n                          <Option value=\"polygon\">Polygon</Option>\n                        </>\n                      )}\n                    </Select>\n                  </Form.Item>\n                </div>\n\n                {queryType === 'knnQuery' && (\n                  <Form.Item\n                    name=\"kValue\"\n                    label=\"K Value (for KNN)\"\n                    rules={[{ required: true, message: 'Please input K value!' }]}\n                    style={{ maxWidth: '250px' }}\n                  >\n                    <Input type=\"number\" placeholder=\"Enter K value\" />\n                  </Form.Item>\n                )}\n              </Space>\n            </>\n          )}\n\n          {queryType === 'spatialJoins' && (\n            <>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <div style={{ display: 'flex', gap: '16px', flexWrap: 'wrap' }}>\n                  <Form.Item\n                    name=\"leftDatasetFile\"\n                    label=\"Left Dataset File\"\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={(e) => e && e.fileList}\n                    rules={[{ required: true, message: 'Please select a left dataset file!' }]}\n                    style={{ flex: 1, minWidth: '250px' }}\n                  >\n                    <Upload {...commonUploadProps}  style={{ width:\"-moz-available\"}}>\n                      <Button icon={<UploadOutlined />} style={{ width: '100%' }}>Select Left Dataset File (.tsv or .csv)</Button>\n                    </Upload>\n                  </Form.Item>\n\n                  <Form.Item\n                    name=\"spatialDataType\"\n                    label=\"Left Dataset Type\"\n                    rules={[{ required: true, message: 'Please select a spatial data type!' }]}\n                    style={{ flex: 1, minWidth: '250px' }}\n                  >\n                    <Select placeholder=\"Select spatial data type\" onChange={(value: SpatialDataType) => setSpatialDataType(value)}>\n                      <Option value=\"polygon\">Polygon</Option>\n                      <Option value=\"points\">Points</Option>\n                      <Option value=\"line\">Line</Option>\n                    </Select>\n                  </Form.Item>\n                </div>\n\n                <div style={{ display: 'flex', gap: '16px', flexWrap: 'wrap' }}>\n                  <Form.Item\n                    name=\"rightDatasetFile\"\n                    label=\"Right Dataset File\"\n                    valuePropName=\"fileList\"\n                    getValueFromEvent={(e) => e && e.fileList}\n                    rules={[{ required: true, message: 'Please select a right dataset file!' }]}\n                    style={{ flex: 1, minWidth: '250px' }}\n                  >\n                    <Upload {...commonUploadProps}  style={{ width:\"-moz-available\"}}>\n                      <Button icon={<UploadOutlined />} style={{ width: '100%' }}>Select Right Dataset File (.tsv or .csv)</Button>\n                    </Upload>\n                  </Form.Item>\n\n                  <Form.Item\n                    name=\"querySetType\"\n                    label=\"Right Dataset Type\"\n                    rules={[{ required: true, message: 'Please select a query set type!' }]}\n                    style={{ flex: 1, minWidth: '250px' }}\n                  >\n                    <Select placeholder=\"Select query set type\" onChange={(value: SpatialJoinQuerySetType) => setQuerySetType(value)}>\n                      <Option value=\"polygon\">Polygon</Option>\n                      <Option value=\"box\">Box</Option>\n                      <Option value=\"point\">Point</Option>\n                    </Select>\n                  </Form.Item>\n                </div>\n\n                <Form.Item\n                  name=\"predicate\"\n                  label=\"Predicate\"\n                  rules={[{ required: true, message: 'Please select a predicate!' }]}\n                  style={{ maxWidth: '250px' }}\n                >\n                  <Select placeholder=\"Select predicate\" onChange={(value: PredicateType) => setPredicate(value)}>\n                    <Option value=\"intersect\">Intersect</Option>\n                    <Option value=\"inside\">Inside</Option>\n                    <Option value=\"contains\">Contains</Option>\n                    <Option value=\"covers\">Covers</Option>\n                    <Option value=\"coveredBy\">Covered By</Option>\n                    <Option value=\"equals\">Equals</Option>\n                    <Option value=\"meet\">Meet</Option>\n                    <Option value=\"findRelation\">Find Relation</Option>\n                  </Select>\n                </Form.Item>\n              </Space>\n            </>\n          )}\n\n          <Form.Item style={{textAlignLast:\"right\"}}>\n            <Space>\n              <Button type=\"default\" danger onClick={handleTerminateButtonClick} disabled={isLoading}>\n                Terminate Hecatoncheir\n              </Button>\n              <Button type=\"default\" icon={<ReloadOutlined />} onClick={handleResetForm} disabled={isLoading}>\n                Clear Form\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\" disabled={isPrepareDatasetDisabled || isLoading}>\n                Prepare Dataset\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\" disabled={isPrepareDatasetDisabled || isLoading}>\n                Submit Query\n              </Button>\n            </Space>\n          </Form.Item>\n        </>\n      )}\n\n      { queryType == null && (\n      <>\n      <Form.Item style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px' }}>\n        <Button type=\"default\" danger onClick={handleTerminateButtonClick} disabled={isLoading}>\n          Terminate Hecatoncheir\n        </Button>\n      </Form.Item>\n      </>\n      )}\n\n\n      {isLoading && (\n        <div style={{ marginTop: '20px' }}>\n          <Progress percent={loadingProgress} status=\"active\" showInfo={false} />\n          <p style={{ textAlign: 'center', marginTop: '10px', color: '#888' }}>Processing query... Please wait up to 10 seconds.</p>\n        </div>\n      )}\n    </Form>\n  );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}