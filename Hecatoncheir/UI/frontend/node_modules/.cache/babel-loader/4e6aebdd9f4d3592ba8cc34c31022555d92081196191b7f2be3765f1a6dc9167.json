{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport { useEvent, useMergedState } from 'rc-util';\nimport * as React from 'react';\nimport CascaderContext from \"./context\";\nimport useMissingValues from \"./hooks/useMissingValues\";\nimport useOptions from \"./hooks/useOptions\";\nimport useSelect from \"./hooks/useSelect\";\nimport useValues from \"./hooks/useValues\";\nimport RawOptionList from \"./OptionList/List\";\nimport { fillFieldNames, toRawValues } from \"./utils/commonUtil\";\nimport { toPathOptions } from \"./utils/treeUtil\";\nfunction noop() {}\nexport default function Panel(props) {\n  var _classNames;\n  var _ref = props,\n    _ref$prefixCls = _ref.prefixCls,\n    prefixCls = _ref$prefixCls === void 0 ? 'rc-cascader' : _ref$prefixCls,\n    style = _ref.style,\n    className = _ref.className,\n    options = _ref.options,\n    checkable = _ref.checkable,\n    defaultValue = _ref.defaultValue,\n    value = _ref.value,\n    fieldNames = _ref.fieldNames,\n    changeOnSelect = _ref.changeOnSelect,\n    onChange = _ref.onChange,\n    showCheckedStrategy = _ref.showCheckedStrategy,\n    loadData = _ref.loadData,\n    expandTrigger = _ref.expandTrigger,\n    _ref$expandIcon = _ref.expandIcon,\n    expandIcon = _ref$expandIcon === void 0 ? '>' : _ref$expandIcon,\n    loadingIcon = _ref.loadingIcon,\n    direction = _ref.direction,\n    _ref$notFoundContent = _ref.notFoundContent,\n    notFoundContent = _ref$notFoundContent === void 0 ? 'Not Found' : _ref$notFoundContent,\n    disabled = _ref.disabled;\n\n  // ======================== Multiple ========================\n  var multiple = !!checkable;\n\n  // ========================= Values =========================\n  var _useMergedState = useMergedState(defaultValue, {\n      value: value,\n      postState: toRawValues\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    rawValues = _useMergedState2[0],\n    setRawValues = _useMergedState2[1];\n\n  // ========================= FieldNames =========================\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [JSON.stringify(fieldNames)]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n\n  // =========================== Option ===========================\n  var _useOptions = useOptions(mergedFieldNames, options),\n    _useOptions2 = _slicedToArray(_useOptions, 3),\n    mergedOptions = _useOptions2[0],\n    getPathKeyEntities = _useOptions2[1],\n    getValueByKeyPath = _useOptions2[2];\n\n  // ========================= Values =========================\n  var getMissingValues = useMissingValues(mergedOptions, mergedFieldNames);\n\n  // Fill `rawValues` with checked conduction values\n  var _useValues = useValues(multiple, rawValues, getPathKeyEntities, getValueByKeyPath, getMissingValues),\n    _useValues2 = _slicedToArray(_useValues, 3),\n    checkedValues = _useValues2[0],\n    halfCheckedValues = _useValues2[1],\n    missingCheckedValues = _useValues2[2];\n\n  // =========================== Change ===========================\n  var triggerChange = useEvent(function (nextValues) {\n    setRawValues(nextValues);\n\n    // Save perf if no need trigger event\n    if (onChange) {\n      var nextRawValues = toRawValues(nextValues);\n      var valueOptions = nextRawValues.map(function (valueCells) {\n        return toPathOptions(valueCells, mergedOptions, mergedFieldNames).map(function (valueOpt) {\n          return valueOpt.option;\n        });\n      });\n      var triggerValues = multiple ? nextRawValues : nextRawValues[0];\n      var triggerOptions = multiple ? valueOptions : valueOptions[0];\n      onChange(triggerValues, triggerOptions);\n    }\n  });\n\n  // =========================== Select ===========================\n  var handleSelection = useSelect(multiple, triggerChange, checkedValues, halfCheckedValues, missingCheckedValues, getPathKeyEntities, getValueByKeyPath, showCheckedStrategy);\n  var onInternalSelect = useEvent(function (valuePath) {\n    handleSelection(valuePath);\n  });\n\n  // ======================== Context =========================\n  var cascaderContext = React.useMemo(function () {\n    return {\n      options: mergedOptions,\n      fieldNames: mergedFieldNames,\n      values: checkedValues,\n      halfValues: halfCheckedValues,\n      changeOnSelect: changeOnSelect,\n      onSelect: onInternalSelect,\n      checkable: checkable,\n      searchOptions: [],\n      dropdownPrefixCls: undefined,\n      loadData: loadData,\n      expandTrigger: expandTrigger,\n      expandIcon: expandIcon,\n      loadingIcon: loadingIcon,\n      dropdownMenuColumnStyle: undefined\n    };\n  }, [mergedOptions, mergedFieldNames, checkedValues, halfCheckedValues, changeOnSelect, onInternalSelect, checkable, loadData, expandTrigger, expandIcon, loadingIcon]);\n\n  // ========================= Render =========================\n  var panelPrefixCls = \"\".concat(prefixCls, \"-panel\");\n  var isEmpty = !mergedOptions.length;\n  return /*#__PURE__*/React.createElement(CascaderContext.Provider, {\n    value: cascaderContext\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(panelPrefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(panelPrefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(panelPrefixCls, \"-empty\"), isEmpty), _classNames), className),\n    style: style\n  }, isEmpty ? notFoundContent : /*#__PURE__*/React.createElement(RawOptionList, {\n    prefixCls: prefixCls,\n    searchValue: \"\",\n    multiple: multiple,\n    toggleOpen: noop,\n    open: true,\n    direction: direction,\n    disabled: disabled\n  })));\n}","map":{"version":3,"names":["_defineProperty","_slicedToArray","classNames","useEvent","useMergedState","React","CascaderContext","useMissingValues","useOptions","useSelect","useValues","RawOptionList","fillFieldNames","toRawValues","toPathOptions","noop","Panel","props","_classNames","_ref","_ref$prefixCls","prefixCls","style","className","options","checkable","defaultValue","value","fieldNames","changeOnSelect","onChange","showCheckedStrategy","loadData","expandTrigger","_ref$expandIcon","expandIcon","loadingIcon","direction","_ref$notFoundContent","notFoundContent","disabled","multiple","_useMergedState","postState","_useMergedState2","rawValues","setRawValues","mergedFieldNames","useMemo","JSON","stringify","_useOptions","_useOptions2","mergedOptions","getPathKeyEntities","getValueByKeyPath","getMissingValues","_useValues","_useValues2","checkedValues","halfCheckedValues","missingCheckedValues","triggerChange","nextValues","nextRawValues","valueOptions","map","valueCells","valueOpt","option","triggerValues","triggerOptions","handleSelection","onInternalSelect","valuePath","cascaderContext","values","halfValues","onSelect","searchOptions","dropdownPrefixCls","undefined","dropdownMenuColumnStyle","panelPrefixCls","concat","isEmpty","length","createElement","Provider","searchValue","toggleOpen","open"],"sources":["/home/command/Desktop/hecatoncheir-app/frontend/node_modules/rc-cascader/es/Panel.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport classNames from 'classnames';\nimport { useEvent, useMergedState } from 'rc-util';\nimport * as React from 'react';\nimport CascaderContext from \"./context\";\nimport useMissingValues from \"./hooks/useMissingValues\";\nimport useOptions from \"./hooks/useOptions\";\nimport useSelect from \"./hooks/useSelect\";\nimport useValues from \"./hooks/useValues\";\nimport RawOptionList from \"./OptionList/List\";\nimport { fillFieldNames, toRawValues } from \"./utils/commonUtil\";\nimport { toPathOptions } from \"./utils/treeUtil\";\nfunction noop() {}\nexport default function Panel(props) {\n  var _classNames;\n  var _ref = props,\n    _ref$prefixCls = _ref.prefixCls,\n    prefixCls = _ref$prefixCls === void 0 ? 'rc-cascader' : _ref$prefixCls,\n    style = _ref.style,\n    className = _ref.className,\n    options = _ref.options,\n    checkable = _ref.checkable,\n    defaultValue = _ref.defaultValue,\n    value = _ref.value,\n    fieldNames = _ref.fieldNames,\n    changeOnSelect = _ref.changeOnSelect,\n    onChange = _ref.onChange,\n    showCheckedStrategy = _ref.showCheckedStrategy,\n    loadData = _ref.loadData,\n    expandTrigger = _ref.expandTrigger,\n    _ref$expandIcon = _ref.expandIcon,\n    expandIcon = _ref$expandIcon === void 0 ? '>' : _ref$expandIcon,\n    loadingIcon = _ref.loadingIcon,\n    direction = _ref.direction,\n    _ref$notFoundContent = _ref.notFoundContent,\n    notFoundContent = _ref$notFoundContent === void 0 ? 'Not Found' : _ref$notFoundContent,\n    disabled = _ref.disabled;\n\n  // ======================== Multiple ========================\n  var multiple = !!checkable;\n\n  // ========================= Values =========================\n  var _useMergedState = useMergedState(defaultValue, {\n      value: value,\n      postState: toRawValues\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    rawValues = _useMergedState2[0],\n    setRawValues = _useMergedState2[1];\n\n  // ========================= FieldNames =========================\n  var mergedFieldNames = React.useMemo(function () {\n    return fillFieldNames(fieldNames);\n  }, /* eslint-disable react-hooks/exhaustive-deps */\n  [JSON.stringify(fieldNames)]\n  /* eslint-enable react-hooks/exhaustive-deps */);\n\n  // =========================== Option ===========================\n  var _useOptions = useOptions(mergedFieldNames, options),\n    _useOptions2 = _slicedToArray(_useOptions, 3),\n    mergedOptions = _useOptions2[0],\n    getPathKeyEntities = _useOptions2[1],\n    getValueByKeyPath = _useOptions2[2];\n\n  // ========================= Values =========================\n  var getMissingValues = useMissingValues(mergedOptions, mergedFieldNames);\n\n  // Fill `rawValues` with checked conduction values\n  var _useValues = useValues(multiple, rawValues, getPathKeyEntities, getValueByKeyPath, getMissingValues),\n    _useValues2 = _slicedToArray(_useValues, 3),\n    checkedValues = _useValues2[0],\n    halfCheckedValues = _useValues2[1],\n    missingCheckedValues = _useValues2[2];\n\n  // =========================== Change ===========================\n  var triggerChange = useEvent(function (nextValues) {\n    setRawValues(nextValues);\n\n    // Save perf if no need trigger event\n    if (onChange) {\n      var nextRawValues = toRawValues(nextValues);\n      var valueOptions = nextRawValues.map(function (valueCells) {\n        return toPathOptions(valueCells, mergedOptions, mergedFieldNames).map(function (valueOpt) {\n          return valueOpt.option;\n        });\n      });\n      var triggerValues = multiple ? nextRawValues : nextRawValues[0];\n      var triggerOptions = multiple ? valueOptions : valueOptions[0];\n      onChange(triggerValues, triggerOptions);\n    }\n  });\n\n  // =========================== Select ===========================\n  var handleSelection = useSelect(multiple, triggerChange, checkedValues, halfCheckedValues, missingCheckedValues, getPathKeyEntities, getValueByKeyPath, showCheckedStrategy);\n  var onInternalSelect = useEvent(function (valuePath) {\n    handleSelection(valuePath);\n  });\n\n  // ======================== Context =========================\n  var cascaderContext = React.useMemo(function () {\n    return {\n      options: mergedOptions,\n      fieldNames: mergedFieldNames,\n      values: checkedValues,\n      halfValues: halfCheckedValues,\n      changeOnSelect: changeOnSelect,\n      onSelect: onInternalSelect,\n      checkable: checkable,\n      searchOptions: [],\n      dropdownPrefixCls: undefined,\n      loadData: loadData,\n      expandTrigger: expandTrigger,\n      expandIcon: expandIcon,\n      loadingIcon: loadingIcon,\n      dropdownMenuColumnStyle: undefined\n    };\n  }, [mergedOptions, mergedFieldNames, checkedValues, halfCheckedValues, changeOnSelect, onInternalSelect, checkable, loadData, expandTrigger, expandIcon, loadingIcon]);\n\n  // ========================= Render =========================\n  var panelPrefixCls = \"\".concat(prefixCls, \"-panel\");\n  var isEmpty = !mergedOptions.length;\n  return /*#__PURE__*/React.createElement(CascaderContext.Provider, {\n    value: cascaderContext\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(panelPrefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(panelPrefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames, \"\".concat(panelPrefixCls, \"-empty\"), isEmpty), _classNames), className),\n    style: style\n  }, isEmpty ? notFoundContent : /*#__PURE__*/React.createElement(RawOptionList, {\n    prefixCls: prefixCls,\n    searchValue: \"\",\n    multiple: multiple,\n    toggleOpen: noop,\n    open: true,\n    direction: direction,\n    disabled: disabled\n  })));\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}