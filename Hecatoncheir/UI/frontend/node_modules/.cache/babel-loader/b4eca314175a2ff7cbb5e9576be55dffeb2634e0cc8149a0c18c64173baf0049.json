{"ast":null,"code":"var _jsxFileName = \"/home/command/Desktop/hecatoncheir-app/frontend/src/components/set-up-hecatoncheir.tsx\",\n  _s = $RefreshSig$();\n// src/components/ClusterSetup.tsx\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Space, InputNumber, message } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClusterSetup = ({\n  onClusterInitialized\n}) => {\n  _s();\n  const [form] = Form.useForm();\n  const [pendingNumPcs, setPendingNumPcs] = useState(0);\n  const [actualNumPcs, setActualNumPcs] = useState(0);\n  useEffect(() => {\n    if (actualNumPcs >= 0) {\n      const initialPcs = Array(actualNumPcs).fill({\n        nameOrIp: ''\n      });\n      form.setFieldsValue({\n        pcs: initialPcs\n      });\n    } else {\n      form.setFieldsValue({\n        pcs: []\n      });\n    }\n  }, [actualNumPcs, form]);\n  const handleSetPcs = () => {\n    const value = pendingNumPcs;\n    if (value === null || value < 0 || isNaN(value)) {\n      message.error('Please enter a valid non-negative number for PCs.');\n      setPendingNumPcs(0);\n      setActualNumPcs(0);\n      return;\n    }\n    setActualNumPcs(value);\n    form.resetFields(['pcs']);\n  };\n  const handleInitHec = async values => {\n    if (values.pcs && values.pcs.length !== actualNumPcs) {\n      message.error('The number of PC fields does not match the set number of PCs. Please click \"Set PCs\" again.');\n      return;\n    }\n    message.loading('Initializing HEC cluster...', 0);\n    const clusterConfig = {\n      numPcs: actualNumPcs,\n      pcs: values.pcs || []\n    };\n    try {\n      const response = await fetch('http://localhost:5000/init-hec', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(clusterConfig)\n      });\n      message.destroy();\n      if (response.ok) {\n        const result = await response.json();\n        message.success('HEC cluster initialized successfully!');\n        console.log('Backend response (init-hec):', result);\n        onClusterInitialized();\n      } else {\n        const errorText = await response.text();\n        message.error(`HEC initialization failed: ${errorText}`);\n        console.error('Backend error (init-hec):', response.status, errorText);\n      }\n    } catch (error) {\n      message.destroy();\n      message.error('Network error or server unavailable during HEC initialization.');\n      console.error('Fetch error (init-hec):', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: handleInitHec,\n    initialValues: {\n      pcs: []\n    },\n    style: {\n      maxWidth: 600,\n      margin: '20px auto',\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .hide-number-arrows .ant-input-number-handler-wrap {\n          display: none !important;\n        }\n        .hide-number-arrows.ant-input-number {\n          padding-right: 11px !important;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Number of PCs in the Cluster\",\n      required: true,\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(InputNumber, {\n          min: 0,\n          value: pendingNumPcs,\n          onChange: setPendingNumPcs,\n          placeholder: \"Enter number of PCs\",\n          style: {\n            width: '100%',\n            flexGrow: 1\n          },\n          onPressEnter: handleSetPcs,\n          className: \"hide-number-arrows\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSetPcs,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), actualNumPcs > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxHeight: actualNumPcs > 5 ? '50vh' : 'none',\n        overflowY: actualNumPcs > 5 ? 'auto' : 'visible'\n      },\n      children: Array.from({\n        length: actualNumPcs\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(Space, {\n        style: {\n          display: 'block',\n          marginBottom: 8\n        },\n        align: \"baseline\",\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['pcs', index, 'nameOrIp'],\n          rules: [{\n            required: true,\n            message: 'Please enter PC name/IP!'\n          }],\n          label: `PC ${index + 1} Name/IP`,\n          style: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: `Enter PC ${index + 1} Name or IP`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        size: \"large\",\n        block: true,\n        style: {\n          backgroundColor: \"green\"\n        },\n        disabled: actualNumPcs == 0,\n        children: \"Init Hecatoncheir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(ClusterSetup, \"c+7bPTXuCm+riCiXoxm6x6fyo/A=\", false, function () {\n  return [Form.useForm];\n});\n_c = ClusterSetup;\nexport default ClusterSetup;\nvar _c;\n$RefreshReg$(_c, \"ClusterSetup\");","map":{"version":3,"names":["React","useState","useEffect","Form","Input","Button","Space","InputNumber","message","jsxDEV","_jsxDEV","ClusterSetup","onClusterInitialized","_s","form","useForm","pendingNumPcs","setPendingNumPcs","actualNumPcs","setActualNumPcs","initialPcs","Array","fill","nameOrIp","setFieldsValue","pcs","handleSetPcs","value","isNaN","error","resetFields","handleInitHec","values","length","loading","clusterConfig","numPcs","response","fetch","method","headers","body","JSON","stringify","destroy","ok","result","json","success","console","log","errorText","text","status","layout","onFinish","initialValues","style","maxWidth","margin","padding","border","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","Item","label","required","min","onChange","placeholder","width","flexGrow","onPressEnter","className","onClick","maxHeight","overflowY","from","map","_","index","display","marginBottom","align","name","rules","marginTop","type","htmlType","size","block","backgroundColor","disabled","_c","$RefreshReg$"],"sources":["/home/command/Desktop/hecatoncheir-app/frontend/src/components/set-up-hecatoncheir.tsx"],"sourcesContent":["// src/components/ClusterSetup.tsx\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Space, InputNumber, message } from 'antd';\nimport { CheckCircleOutlined, SettingOutlined } from '@ant-design/icons';\n\ninterface ClusterSetupProps {\n  onClusterInitialized: () => void;\n}\n\nconst ClusterSetup: React.FC<ClusterSetupProps> = ({ onClusterInitialized }) => {\n  const [form] = Form.useForm();\n  const [pendingNumPcs, setPendingNumPcs] = useState<number | null>(0);\n  const [actualNumPcs, setActualNumPcs] = useState<number>(0);\n\n  useEffect(() => {\n    if (actualNumPcs >= 0) {\n      const initialPcs = Array(actualNumPcs).fill({ nameOrIp: '' });\n      form.setFieldsValue({ pcs: initialPcs });\n    } else {\n      form.setFieldsValue({ pcs: [] });\n    }\n  }, [actualNumPcs, form]);\n\n  const handleSetPcs = () => {\n    const value = pendingNumPcs;\n    if (value === null || value < 0 || isNaN(value)) {\n      message.error('Please enter a valid non-negative number for PCs.');\n      setPendingNumPcs(0);\n      setActualNumPcs(0);\n      return;\n    }\n    setActualNumPcs(value);\n    form.resetFields(['pcs']);\n  };\n\n  const handleInitHec = async (values: any) => {\n    if (values.pcs && values.pcs.length !== actualNumPcs) {\n        message.error('The number of PC fields does not match the set number of PCs. Please click \"Set PCs\" again.');\n        return;\n    }\n\n    message.loading('Initializing HEC cluster...', 0);\n\n    const clusterConfig = {\n      numPcs: actualNumPcs,\n      pcs: values.pcs || [],\n    };\n\n    try {\n      const response = await fetch('http://localhost:5000/init-hec', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(clusterConfig),\n      });\n\n      message.destroy();\n\n      if (response.ok) {\n        const result = await response.json();\n        message.success('HEC cluster initialized successfully!');\n        console.log('Backend response (init-hec):', result);\n        onClusterInitialized();\n      } else {\n        const errorText = await response.text();\n        message.error(`HEC initialization failed: ${errorText}`);\n        console.error('Backend error (init-hec):', response.status, errorText);\n      }\n    } catch (error) {\n      message.destroy();\n      message.error('Network error or server unavailable during HEC initialization.');\n      console.error('Fetch error (init-hec):', error);\n    }\n  };\n\n  return (\n    <Form\n      form={form}\n      layout=\"vertical\"\n      onFinish={handleInitHec}\n      initialValues={{ pcs: [] }}\n      style={{ maxWidth: 600, margin: '20px auto', padding: '20px', border: '1px solid #eee', borderRadius: '8px' }}\n    >\n      <style>{`\n        .hide-number-arrows .ant-input-number-handler-wrap {\n          display: none !important;\n        }\n        .hide-number-arrows.ant-input-number {\n          padding-right: 11px !important;\n        }\n      `}</style>\n\n      <Form.Item label=\"Number of PCs in the Cluster\" required>\n        <Space>\n          <InputNumber\n            min={0}\n            value={pendingNumPcs}\n            onChange={setPendingNumPcs}\n            placeholder=\"Enter number of PCs\"\n            style={{ width: '100%', flexGrow: 1 }}\n            onPressEnter={handleSetPcs}\n            className=\"hide-number-arrows\"\n          />\n          <Button onClick={handleSetPcs}>\n            Submit\n          </Button>\n        </Space>\n      </Form.Item>\n\n      {actualNumPcs > 0 && (\n        <div style={{\n          maxHeight: actualNumPcs > 5 ? '50vh' : 'none',\n          overflowY: actualNumPcs > 5 ? 'auto' : 'visible',\n        }}>\n          {Array.from({ length: actualNumPcs }).map((_, index) => (\n            <Space key={index} style={{ display: 'block', marginBottom: 8 }} align=\"baseline\">\n              <Form.Item\n                name={['pcs', index, 'nameOrIp']}\n                rules={[{ required: true, message: 'Please enter PC name/IP!' }]}\n                label={`PC ${index + 1} Name/IP`}\n                style={{ flexGrow: 1 }}\n              >\n                <Input placeholder={`Enter PC ${index + 1} Name or IP`} />\n              </Form.Item>\n            </Space>\n          ))}\n        </div>\n      )}\n\n      <Form.Item style={{ marginTop: 20 }}>\n        <Button type = \"primary\" htmlType = \"submit\" size = \"large\" block style = {{backgroundColor:\"green\"}} disabled = {actualNumPcs == 0}>\n          Init Hecatoncheir\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ClusterSetup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}