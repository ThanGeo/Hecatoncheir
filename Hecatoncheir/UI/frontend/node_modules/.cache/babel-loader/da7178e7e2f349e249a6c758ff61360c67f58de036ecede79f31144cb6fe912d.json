{"ast":null,"code":"var _jsxFileName = \"/home/command/Desktop/hecatoncheir-app/frontend/src/components/home-page.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Select, Upload, Button, message, Space } from 'antd';\nimport { UploadOutlined, ReloadOutlined } from '@ant-design/icons';\nimport Input from 'antd/es/input/Input';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst HomePage = ({\n  onTerminateHec\n}) => {\n  _s();\n  const [form] = Form.useForm();\n  const [queryType, setQueryType] = useState(null);\n  const [spatialDataType, setSpatialDataType] = useState(null);\n  const [querySetType, setQuerySetType] = useState(null);\n  const [predicate, setPredicate] = useState(null);\n  const [isPrepareDatasetDisabled, setIsPrepareDatasetDisabled] = useState(true);\n  const checkFormValidity = () => {\n    const allFields = form.getFieldsValue();\n    let allRequiredFilled = true;\n    if (!allFields.queryType) {\n      allRequiredFilled = false;\n    }\n    if (allFields.queryType === 'rangeQuery' || allFields.queryType === 'knnQuery') {\n      if (!allFields.datasetFile || allFields.datasetFile.length === 0 || !allFields.queryDatasetFile || allFields.queryDatasetFile.length === 0 || !allFields.spatialDataType || !allFields.querySetType) {\n        allRequiredFilled = false;\n      }\n      if (allFields.queryType === 'knnQuery' && !allFields.kValue) {\n        allRequiredFilled = false;\n      }\n    } else if (allFields.queryType === 'spatialJoins') {\n      if (!allFields.leftDatasetFile || allFields.leftDatasetFile.length === 0 || !allFields.rightDatasetFile || allFields.rightDatasetFile.length === 0 || !allFields.predicate || !allFields.spatialDataType || !allFields.querySetType) {\n        allRequiredFilled = false;\n      }\n    }\n    setIsPrepareDatasetDisabled(!allRequiredFilled);\n  };\n  useEffect(() => {\n    checkFormValidity();\n  }, [queryType]);\n  const handleQueryTypeChange = value => {\n    setQueryType(value);\n    setSpatialDataType(null);\n    setQuerySetType(null);\n    setPredicate(null);\n    form.resetFields(['spatialDataType', 'querySetType', 'predicate', 'datasetFile', 'queryDatasetFile', 'leftDatasetFile', 'rightDatasetFile', 'kValue']);\n    setTimeout(checkFormValidity, 0);\n  };\n  const commonUploadProps = {\n    accept: '.tsv,.csv',\n    beforeUpload: file => {\n      const isTsc = file.name.endsWith('.tsv');\n      const isCsv = file.name.endsWith('.csv');\n      const isAllowed = isTsc || isCsv;\n      if (!isAllowed) {\n        message.error(`${file.name} is not a .tsv or .csv file!`);\n      }\n      return isAllowed || Upload.LIST_IGNORE;\n    },\n    maxCount: 1,\n    onRemove: () => {\n      return true;\n    }\n  };\n  const handleFinish = async values => {\n    message.loading('Processing query...', 0);\n    const formData = new FormData();\n    formData.append('queryType', values.queryType || '');\n    if (values.queryType === 'rangeQuery' || values.queryType === 'knnQuery') {\n      if (values.spatialDataType) formData.append('spatialDataType', values.spatialDataType);\n      if (values.querySetType) formData.append('querySetType', values.querySetType);\n      if (values.datasetFile && values.datasetFile.length > 0 && values.datasetFile[0].originFileObj) {\n        formData.append('datasetFile', values.datasetFile[0].originFileObj);\n      }\n      if (values.queryDatasetFile && values.queryDatasetFile.length > 0 && values.queryDatasetFile[0].originFileObj) {\n        formData.append('queryDatasetFile', values.queryDatasetFile[0].originFileObj);\n      }\n      if (values.queryType === 'knnQuery' && values.kValue) {\n        formData.append('kValue', values.kValue);\n      }\n    } else if (values.queryType === 'spatialJoins') {\n      if (values.predicate) formData.append('predicate', values.predicate);\n      if (values.spatialDataType) formData.append('spatialDataType', values.spatialDataType);\n      if (values.querySetType) formData.append('querySetType', values.querySetType);\n      if (values.leftDatasetFile && values.leftDatasetFile.length > 0 && values.leftDatasetFile[0].originFileObj) {\n        formData.append('leftDatasetFile', values.leftDatasetFile[0].originFileObj);\n      }\n      if (values.rightDatasetFile && values.rightDatasetFile.length > 0 && values.rightDatasetFile[0].originFileObj) {\n        formData.append('rightDatasetFile', values.rightDatasetFile[0].originFileObj);\n      }\n    }\n    try {\n      const response = await fetch('http://localhost:5000/process-query', {\n        method: 'POST',\n        body: formData\n      });\n      message.destroy();\n      if (response.ok) {\n        const result = await response.json();\n        message.success('Query submitted successfully!');\n        console.log('Backend response:', result);\n      } else {\n        const errorText = await response.text();\n        message.error(`Query failed: ${errorText}`);\n        console.error('Backend error:', response.status, errorText);\n      }\n    } catch (error) {\n      message.destroy();\n      message.error('Network error or server unavailable.');\n      console.error('Fetch error:', error);\n    }\n  };\n  const handleResetForm = () => {\n    form.resetFields();\n    setQueryType(null);\n    setSpatialDataType(null);\n    setQuerySetType(null);\n    setPredicate(null);\n    message.info('Form cleared!');\n    // Trigger validation after reset\n    setTimeout(checkFormValidity, 0);\n  };\n  const handleTerminateButtonClick = () => {\n    message.info('Terminating HEC and returning to setup...');\n    onTerminateHec();\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: handleFinish,\n    initialValues: {\n      queryType: null\n    },\n    style: {\n      maxWidth: \"100%\",\n      margin: '20px auto',\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px'\n    },\n    onValuesChange: checkFormValidity // <--- Added this line for Ant Design v4\n    ,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"queryType\",\n      label: \"Query Type\",\n      rules: [{\n        required: true,\n        message: 'Please select a query type!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select a query type\",\n        onChange: handleQueryTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"rangeQuery\",\n          children: \"Range Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"knnQuery\",\n          children: \"KNN Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"spatialJoins\",\n          children: \"Spatial Joins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), queryType && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [(queryType === 'rangeQuery' || queryType === 'knnQuery') && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"datasetFile\",\n          label: \"Dataset File\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: e => e && e.fileList,\n          rules: [{\n            required: true,\n            message: 'Please select a dataset file!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            ...commonUploadProps,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this),\n              style: {\n                width: '100%'\n              },\n              children: \"Select Dataset File (.tsv or .csv)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"queryDatasetFile\",\n          label: \"Query Dataset File\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: e => e && e.fileList,\n          rules: [{\n            required: true,\n            message: 'Please select a query dataset file!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            ...commonUploadProps,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this),\n              style: {\n                width: '100%'\n              },\n              children: \"Select Query Dataset File (.tsv or .csv)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), queryType === 'rangeQuery' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"spatialDataType\",\n            label: \"Spatial Data Type\",\n            rules: [{\n              required: true,\n              message: 'Please select a spatial data type!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select spatial data type\",\n              onChange: value => setSpatialDataType(value),\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"polygon\",\n                children: \"Polygon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"points\",\n                children: \"Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"line\",\n                children: \"Line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"querySetType\",\n            label: \"Query Set Type\",\n            rules: [{\n              required: true,\n              message: 'Please select a query set type!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select query set type\",\n              onChange: value => setQuerySetType(value),\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"polygon\",\n                children: \"Polygon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"box\",\n                children: \"Box\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), queryType === 'knnQuery' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"spatialDataType\",\n            label: \"Spatial Data Type\",\n            rules: [{\n              required: true,\n              message: 'Please select a spatial data type!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select spatial data type\",\n              onChange: value => setSpatialDataType(value),\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"polygon\",\n                children: \"Polygon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"points\",\n                children: \"Points\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"line\",\n                children: \"Line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"querySetType\",\n            label: \"Query Set Type\",\n            rules: [{\n              required: true,\n              message: 'Please select a query set type!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select query set type\",\n              onChange: value => setQuerySetType(value),\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"point\",\n                children: \"Point\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"polygon\",\n                children: \"Polygon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"kValue\",\n            label: \"K Value (for KNN)\",\n            rules: [{\n              required: true,\n              message: 'Please input K value!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              placeholder: \"Enter K value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true), queryType === 'spatialJoins' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"leftDatasetFile\",\n          label: \"Left Dataset File\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: e => e && e.fileList,\n          rules: [{\n            required: true,\n            message: 'Please select a left dataset file!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            ...commonUploadProps,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 33\n              }, this),\n              style: {\n                width: '100%'\n              },\n              children: \"Select Left Dataset File (.tsv or .csv)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"rightDatasetFile\",\n          label: \"Right Dataset File\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: e => e && e.fileList,\n          rules: [{\n            required: true,\n            message: 'Please select a right dataset file!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            ...commonUploadProps,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 33\n              }, this),\n              style: {\n                width: '100%'\n              },\n              children: \"Select Right Dataset File (.tsv or .csv)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"spatialDataType\",\n          label: \"Spatial Data Type\",\n          rules: [{\n            required: true,\n            message: 'Please select a spatial data type!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select spatial data type\",\n            onChange: value => setSpatialDataType(value),\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"polygon\",\n              children: \"Polygon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"points\",\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"line\",\n              children: \"Line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"querySetType\",\n          label: \"Query Set Type\",\n          rules: [{\n            required: true,\n            message: 'Please select a query set type!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select query set type\",\n            onChange: value => setQuerySetType(value),\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"polygon\",\n              children: \"Polygon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"box\",\n              children: \"Box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"point\",\n              children: \"Point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"predicate\",\n          label: \"Predicate\",\n          rules: [{\n            required: true,\n            message: 'Please select a predicate!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Select predicate\",\n            onChange: value => setPredicate(value),\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"intersect\",\n              children: \"Intersect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"inside\",\n              children: \"Inside\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"contains\",\n              children: \"Contains\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"covers\",\n              children: \"Covers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"coveredBy\",\n              children: \"Covered By\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"equals\",\n              children: \"Equals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"meet\",\n              children: \"Meet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"findRelation\",\n              children: \"Find Relation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          textAlignLast: \"right\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"default\",\n            danger: true,\n            onClick: handleTerminateButtonClick,\n            children: \"Terminate Hecatoncheir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"default\",\n            icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 44\n            }, this),\n            onClick: handleResetForm,\n            children: \"Clear Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            disabled: isPrepareDatasetDisabled,\n            children: \"Prepare Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            disabled: isPrepareDatasetDisabled,\n            children: \"Submit Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), queryType == null && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form.Item, {\n        style: {\n          display: 'flex',\n          justifyContent: 'end',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"default\",\n          danger: true,\n          onClick: handleTerminateButtonClick,\n          children: \"Terminate Hecatoncheir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"iwiQqeBbQjQYWK9O21Z23repOo8=\", false, function () {\n  return [Form.useForm];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Form","Select","Upload","Button","message","Space","UploadOutlined","ReloadOutlined","Input","jsxDEV","_jsxDEV","Fragment","_Fragment","Option","HomePage","onTerminateHec","_s","form","useForm","queryType","setQueryType","spatialDataType","setSpatialDataType","querySetType","setQuerySetType","predicate","setPredicate","isPrepareDatasetDisabled","setIsPrepareDatasetDisabled","checkFormValidity","allFields","getFieldsValue","allRequiredFilled","datasetFile","length","queryDatasetFile","kValue","leftDatasetFile","rightDatasetFile","handleQueryTypeChange","value","resetFields","setTimeout","commonUploadProps","accept","beforeUpload","file","isTsc","name","endsWith","isCsv","isAllowed","error","LIST_IGNORE","maxCount","onRemove","handleFinish","values","loading","formData","FormData","append","originFileObj","response","fetch","method","body","destroy","ok","result","json","success","console","log","errorText","text","status","handleResetForm","info","handleTerminateButtonClick","layout","onFinish","initialValues","style","maxWidth","margin","padding","border","borderRadius","onValuesChange","children","Item","label","rules","required","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","valuePropName","getValueFromEvent","e","fileList","icon","width","type","textAlignLast","danger","onClick","htmlType","disabled","display","justifyContent","marginTop","_c","$RefreshReg$"],"sources":["/home/command/Desktop/hecatoncheir-app/frontend/src/components/home-page.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Select, Upload, Button, message, Space } from 'antd';\nimport { UploadOutlined, ReloadOutlined } from '@ant-design/icons';\nimport type { UploadProps } from 'antd/es/upload/interface';\nimport Input from 'antd/es/input/Input';\n\nconst { Option } = Select;\n\ntype QueryType = 'rangeQuery' | 'knnQuery' | 'spatialJoins' | null;\ntype SpatialDataType = 'polygon' | 'points' | 'line' | null;\ntype RangeQuerySetType = 'polygon' | 'box' | null;\ntype KNNQuerySetType = 'point' | 'polygon' | null;\ntype PredicateType = 'intersect' | 'inside' | 'contains' | 'covers' | 'coveredBy' | 'equals' | 'meet' | 'findRelation' | null;\ntype SpatialJoinQuerySetType = 'polygon' | 'box' | 'point' | null;\n\ninterface HomePageProps {\n  onTerminateHec: () => void;\n}\n\nconst HomePage: React.FC<HomePageProps> = ({ onTerminateHec }) => {\n  const [form] = Form.useForm();\n  const [queryType, setQueryType] = useState<QueryType>(null);\n  const [spatialDataType, setSpatialDataType] = useState<SpatialDataType>(null);\n  const [querySetType, setQuerySetType] = useState<RangeQuerySetType | KNNQuerySetType | SpatialJoinQuerySetType | null>(null);\n  const [predicate, setPredicate] = useState<PredicateType>(null);\n  const [isPrepareDatasetDisabled, setIsPrepareDatasetDisabled] = useState(true);\n\n  const checkFormValidity = () => {\n    const allFields = form.getFieldsValue();\n    let allRequiredFilled = true;\n\n    if (!allFields.queryType) {\n      allRequiredFilled = false;\n    }\n\n    if (allFields.queryType === 'rangeQuery' || allFields.queryType === 'knnQuery') {\n      if (\n        !allFields.datasetFile || allFields.datasetFile.length === 0 ||\n        !allFields.queryDatasetFile || allFields.queryDatasetFile.length === 0 ||\n        !allFields.spatialDataType ||\n        !allFields.querySetType\n      ) {\n        allRequiredFilled = false;\n      }\n      if (allFields.queryType === 'knnQuery' && !allFields.kValue) {\n        allRequiredFilled = false;\n      }\n    } else if (allFields.queryType === 'spatialJoins') {\n      if (\n        !allFields.leftDatasetFile || allFields.leftDatasetFile.length === 0 ||\n        !allFields.rightDatasetFile || allFields.rightDatasetFile.length === 0 ||\n        !allFields.predicate ||\n        !allFields.spatialDataType ||\n        !allFields.querySetType\n      ) {\n        allRequiredFilled = false;\n      }\n    }\n\n    setIsPrepareDatasetDisabled(!allRequiredFilled);\n  };\n\n  useEffect(() => {\n    checkFormValidity();\n  }, [queryType]);\n\n  const handleQueryTypeChange = (value: QueryType) => {\n    setQueryType(value);\n    setSpatialDataType(null);\n    setQuerySetType(null);\n    setPredicate(null);\n    form.resetFields([\n      'spatialDataType',\n      'querySetType',\n      'predicate',\n      'datasetFile',\n      'queryDatasetFile',\n      'leftDatasetFile',\n      'rightDatasetFile',\n      'kValue',\n    ]);\n    setTimeout(checkFormValidity, 0);\n  };\n\n  const commonUploadProps: UploadProps = {\n    accept: '.tsv,.csv',\n    beforeUpload: (file) => {\n      const isTsc = file.name.endsWith('.tsv');\n      const isCsv = file.name.endsWith('.csv');\n      const isAllowed = isTsc || isCsv;\n      if (!isAllowed) {\n        message.error(`${file.name} is not a .tsv or .csv file!`);\n      }\n      return isAllowed || Upload.LIST_IGNORE;\n    },\n    maxCount: 1,\n    onRemove: () => {\n      return true;\n    },\n  };\n\n  const handleFinish = async (values: any) => {\n    message.loading('Processing query...', 0);\n\n    const formData = new FormData();\n\n    formData.append('queryType', values.queryType || '');\n\n    if (values.queryType === 'rangeQuery' || values.queryType === 'knnQuery') {\n      if (values.spatialDataType) formData.append('spatialDataType', values.spatialDataType);\n      if (values.querySetType) formData.append('querySetType', values.querySetType);\n\n      if (values.datasetFile && values.datasetFile.length > 0 && values.datasetFile[0].originFileObj) {\n        formData.append('datasetFile', values.datasetFile[0].originFileObj);\n      }\n      if (values.queryDatasetFile && values.queryDatasetFile.length > 0 && values.queryDatasetFile[0].originFileObj) {\n        formData.append('queryDatasetFile', values.queryDatasetFile[0].originFileObj);\n      }\n\n      if (values.queryType === 'knnQuery' && values.kValue) {\n        formData.append('kValue', values.kValue);\n      }\n    } else if (values.queryType === 'spatialJoins') {\n      if (values.predicate) formData.append('predicate', values.predicate);\n      if (values.spatialDataType) formData.append('spatialDataType', values.spatialDataType);\n      if (values.querySetType) formData.append('querySetType', values.querySetType);\n\n      if (values.leftDatasetFile && values.leftDatasetFile.length > 0 && values.leftDatasetFile[0].originFileObj) {\n        formData.append('leftDatasetFile', values.leftDatasetFile[0].originFileObj);\n      }\n      if (values.rightDatasetFile && values.rightDatasetFile.length > 0 && values.rightDatasetFile[0].originFileObj) {\n        formData.append('rightDatasetFile', values.rightDatasetFile[0].originFileObj);\n      }\n    }\n\n    try {\n        const response = await fetch('http://localhost:5000/process-query', {\n            method: 'POST',\n            body: formData,\n        });\n\n        message.destroy();\n\n        if (response.ok) {\n            const result = await response.json();\n            message.success('Query submitted successfully!');\n            console.log('Backend response:', result);\n        } else {\n            const errorText = await response.text();\n            message.error(`Query failed: ${errorText}`);\n            console.error('Backend error:', response.status, errorText);\n        }\n    } catch (error) {\n        message.destroy();\n        message.error('Network error or server unavailable.');\n        console.error('Fetch error:', error);\n    }\n  };\n\n  const handleResetForm = () => {\n    form.resetFields();\n    setQueryType(null);\n    setSpatialDataType(null);\n    setQuerySetType(null);\n    setPredicate(null);\n    message.info('Form cleared!');\n    // Trigger validation after reset\n    setTimeout(checkFormValidity, 0);\n  };\n\n  const handleTerminateButtonClick = () => {\n    message.info('Terminating HEC and returning to setup...');\n    onTerminateHec();\n  };\n\n  return (\n    <Form\n      form={form}\n      layout=\"vertical\"\n      onFinish={handleFinish}\n      initialValues={{ queryType: null }}\n      style={{ maxWidth: \"100%\", margin: '20px auto', padding: '20px', border: '1px solid #eee', borderRadius: '8px' }}\n      onValuesChange={checkFormValidity} // <--- Added this line for Ant Design v4\n    >\n      <Form.Item\n        name=\"queryType\"\n        label=\"Query Type\"\n        rules={[{ required: true, message: 'Please select a query type!'}]}\n      >\n        <Select placeholder=\"Select a query type\" onChange={handleQueryTypeChange}>\n          <Option value=\"rangeQuery\">Range Query</Option>\n          <Option value=\"knnQuery\">KNN Query</Option>\n          <Option value=\"spatialJoins\">Spatial Joins</Option>\n        </Select>\n      </Form.Item>\n\n      {queryType && (\n        <>\n          {(queryType === 'rangeQuery' || queryType === 'knnQuery') && (\n            <>\n              <Form.Item\n                name=\"datasetFile\"\n                label=\"Dataset File\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={(e) => e && e.fileList}\n                rules={[{ required: true, message: 'Please select a dataset file!' }]}\n              >\n                <Upload {...commonUploadProps}>\n                  <Button icon={<UploadOutlined />} style={{ width: '100%' }}>Select Dataset File (.tsv or .csv)</Button>\n                </Upload>\n              </Form.Item>\n\n              <Form.Item\n                name=\"queryDatasetFile\"\n                label=\"Query Dataset File\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={(e) => e && e.fileList}\n                rules={[{ required: true, message: 'Please select a query dataset file!' }]}\n              >\n                <Upload {...commonUploadProps}>\n                  <Button icon={<UploadOutlined />} style={{ width: '100%' }}>Select Query Dataset File (.tsv or .csv)</Button>\n                </Upload>\n              </Form.Item>\n\n              {queryType === 'rangeQuery' && (\n                <>\n                  <Form.Item\n                    name=\"spatialDataType\"\n                    label=\"Spatial Data Type\"\n                    rules={[{ required: true, message: 'Please select a spatial data type!' }]}\n                  >\n                    <Select placeholder=\"Select spatial data type\" onChange={(value: SpatialDataType) => setSpatialDataType(value)}>\n                      <Option value=\"polygon\">Polygon</Option>\n                      <Option value=\"points\">Points</Option>\n                      <Option value=\"line\">Line</Option>\n                    </Select>\n                  </Form.Item>\n\n                  <Form.Item\n                    name=\"querySetType\"\n                    label=\"Query Set Type\"\n                    rules={[{ required: true, message: 'Please select a query set type!' }]}\n                  >\n                    <Select placeholder=\"Select query set type\" onChange={(value: RangeQuerySetType) => setQuerySetType(value)}>\n                      <Option value=\"polygon\">Polygon</Option>\n                      <Option value=\"box\">Box</Option>\n                    </Select>\n                  </Form.Item>\n                </>\n              )}\n\n              {queryType === 'knnQuery' && (\n                <>\n                  <Form.Item\n                    name=\"spatialDataType\"\n                    label=\"Spatial Data Type\"\n                    rules={[{ required: true, message: 'Please select a spatial data type!' }]}\n                  >\n                    <Select placeholder=\"Select spatial data type\" onChange={(value: SpatialDataType) => setSpatialDataType(value)}>\n                      <Option value=\"polygon\">Polygon</Option>\n                      <Option value=\"points\">Points</Option>\n                      <Option value=\"line\">Line</Option>\n                    </Select>\n                  </Form.Item>\n\n                  <Form.Item\n                    name=\"querySetType\"\n                    label=\"Query Set Type\"\n                    rules={[{ required: true, message: 'Please select a query set type!' }]}\n                  >\n                    <Select placeholder=\"Select query set type\" onChange={(value: KNNQuerySetType) => setQuerySetType(value)}>\n                      <Option value=\"point\">Point</Option>\n                      <Option value=\"polygon\">Polygon</Option>\n                    </Select>\n                  </Form.Item>\n\n                  <Form.Item\n                    name=\"kValue\"\n                    label=\"K Value (for KNN)\"\n                    rules={[{ required: true, message: 'Please input K value!' }]}\n                  >\n                    <Input type=\"number\" placeholder=\"Enter K value\" />\n                  </Form.Item>\n                </>\n              )}\n            </>\n          )}\n\n          {queryType === 'spatialJoins' && (\n            <>\n              <Form.Item\n                name=\"leftDatasetFile\"\n                label=\"Left Dataset File\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={(e) => e && e.fileList}\n                rules={[{ required: true, message: 'Please select a left dataset file!' }]}\n              >\n                <Upload {...commonUploadProps}>\n                  <Button icon={<UploadOutlined />} style={{ width: '100%' }}>Select Left Dataset File (.tsv or .csv)</Button>\n                </Upload>\n              </Form.Item>\n\n              <Form.Item\n                name=\"rightDatasetFile\"\n                label=\"Right Dataset File\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={(e) => e && e.fileList}\n                rules={[{ required: true, message: 'Please select a right dataset file!' }]}\n              >\n                <Upload {...commonUploadProps}>\n                  <Button icon={<UploadOutlined />} style={{ width: '100%' }}>Select Right Dataset File (.tsv or .csv)</Button>\n                </Upload>\n              </Form.Item>\n\n              <Form.Item\n                name=\"spatialDataType\"\n                label=\"Spatial Data Type\"\n                rules={[{ required: true, message: 'Please select a spatial data type!' }]}\n              >\n                <Select placeholder=\"Select spatial data type\" onChange={(value: SpatialDataType) => setSpatialDataType(value)}>\n                  <Option value=\"polygon\">Polygon</Option>\n                  <Option value=\"points\">Points</Option>\n                  <Option value=\"line\">Line</Option>\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                name=\"querySetType\"\n                label=\"Query Set Type\"\n                rules={[{ required: true, message: 'Please select a query set type!' }]}\n              >\n                <Select placeholder=\"Select query set type\" onChange={(value: SpatialJoinQuerySetType) => setQuerySetType(value)}>\n                  <Option value=\"polygon\">Polygon</Option>\n                  <Option value=\"box\">Box</Option>\n                  <Option value=\"point\">Point</Option>\n                </Select>\n              </Form.Item>\n              <Form.Item\n                name=\"predicate\"\n                label=\"Predicate\"\n                rules={[{ required: true, message: 'Please select a predicate!' }]}\n              >\n                <Select placeholder=\"Select predicate\" onChange={(value: PredicateType) => setPredicate(value)}>\n                  <Option value=\"intersect\">Intersect</Option>\n                  <Option value=\"inside\">Inside</Option>\n                  <Option value=\"contains\">Contains</Option>\n                  <Option value=\"covers\">Covers</Option>\n                  <Option value=\"coveredBy\">Covered By</Option>\n                  <Option value=\"equals\">Equals</Option>\n                  <Option value=\"meet\">Meet</Option>\n                  <Option value=\"findRelation\">Find Relation</Option>\n                </Select>\n              </Form.Item>\n            </>\n          )}\n\n          <Form.Item style={{textAlignLast:\"right\"}}>\n            <Space>\n              <Button type=\"default\" danger onClick={handleTerminateButtonClick}>\n                Terminate Hecatoncheir\n              </Button>\n              <Button type=\"default\" icon={<ReloadOutlined />} onClick={handleResetForm}>\n                Clear Form\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\" disabled={isPrepareDatasetDisabled}>\n                Prepare Dataset\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\" disabled={isPrepareDatasetDisabled}>\n                Submit Query\n              </Button>\n            </Space>\n          </Form.Item>\n        </>\n      )}\n\n      { queryType == null && (\n      <>\n      <Form.Item style={{ display: 'flex', justifyContent: 'end', marginTop: '20px' }}>\n        <Button type=\"default\" danger onClick={handleTerminateButtonClick}>\n          Terminate Hecatoncheir\n        </Button>\n      </Form.Item>\n      </>\n      )}\n    </Form>\n  );\n};\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}