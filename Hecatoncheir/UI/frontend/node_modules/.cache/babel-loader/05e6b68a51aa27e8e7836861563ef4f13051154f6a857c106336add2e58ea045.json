{"ast":null,"code":"var _jsxFileName = \"/home/command/Desktop/hecatoncheir-app/frontend/src/components/set-up-hecatoncheir.tsx\",\n  _s = $RefreshSig$();\n// src/components/ClusterSetup.tsx\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Space, InputNumber, message } from 'antd';\nimport { PlusOutlined, DeleteOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClusterSetup = ({\n  onClusterInitialized\n}) => {\n  _s();\n  const [form] = Form.useForm();\n  const [numPcs, setNumPcs] = useState(0);\n  const handleNumPcsChange = value => {\n    setNumPcs(value || 0);\n  };\n  const handleInitHec = async values => {\n    message.loading('Initializing HEC cluster...', 0);\n    const clusterConfig = {\n      numPcs: values.numPcs,\n      pcs: values.pcs || [] // Ensure pcs is an array, even if empty\n    };\n    try {\n      const response = await fetch('http://localhost:5000/init-hec', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(clusterConfig)\n      });\n      message.destroy(); // Close loading message\n\n      if (response.ok) {\n        const result = await response.json();\n        message.success('HEC cluster initialized successfully!');\n        console.log('Backend response (init-hec):', result);\n        onClusterInitialized(); // Callback to tell parent component to render HomePage\n      } else {\n        const errorText = await response.text();\n        message.error(`HEC initialization failed: ${errorText}`);\n        console.error('Backend error (init-hec):', response.status, errorText);\n      }\n    } catch (error) {\n      message.destroy();\n      message.error('Network error or server unavailable during HEC initialization.');\n      console.error('Fetch error (init-hec):', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: handleInitHec,\n    style: {\n      maxWidth: 600,\n      margin: '20px auto',\n      padding: '20px',\n      border: '1px solid #eee',\n      borderRadius: '8px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"numPcs\",\n      label: \"Number of PCs in the Cluster\",\n      rules: [{\n        required: true,\n        message: 'Please enter the number of PCs!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(InputNumber, {\n        min: 0,\n        onChange: handleNumPcsChange,\n        placeholder: \"Enter number of PCs\",\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), numPcs > 0 && /*#__PURE__*/_jsxDEV(Form.List, {\n      name: \"pcs\",\n      children: (fields, {\n        add,\n        remove\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [fields.map(({\n          key,\n          name,\n          ...restField\n        }) => /*#__PURE__*/_jsxDEV(Space, {\n          style: {\n            display: 'flex',\n            marginBottom: 8\n          },\n          align: \"baseline\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            ...restField,\n            name: [name, 'nameOrIp'],\n            rules: [{\n              required: true,\n              message: 'Missing PC name/IP'\n            }],\n            label: `PC ${name + 1} Name/IP`,\n            style: {\n              flexGrow: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: `Enter PC ${name + 1} Name or IP`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"text\",\n            danger: true,\n            icon: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 52\n            }, this),\n            onClick: () => remove(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"dashed\",\n            onClick: () => add(),\n            block: true,\n            icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 73\n            }, this),\n            children: \"Add PC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        icon: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 56\n        }, this),\n        size: \"large\",\n        block: true,\n        children: \"Init HEC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ClusterSetup, \"bRG3lCaT9TU59CnqpTOwnYsxQlA=\", false, function () {\n  return [Form.useForm];\n});\n_c = ClusterSetup;\nexport default ClusterSetup;\nvar _c;\n$RefreshReg$(_c, \"ClusterSetup\");","map":{"version":3,"names":["React","useState","Form","Input","Button","Space","InputNumber","message","PlusOutlined","DeleteOutlined","CheckCircleOutlined","jsxDEV","_jsxDEV","Fragment","_Fragment","ClusterSetup","onClusterInitialized","_s","form","useForm","numPcs","setNumPcs","handleNumPcsChange","value","handleInitHec","values","loading","clusterConfig","pcs","response","fetch","method","headers","body","JSON","stringify","destroy","ok","result","json","success","console","log","errorText","text","error","status","layout","onFinish","style","maxWidth","margin","padding","border","borderRadius","children","Item","name","label","rules","required","min","onChange","placeholder","width","fileName","_jsxFileName","lineNumber","columnNumber","List","fields","add","remove","map","key","restField","display","marginBottom","align","flexGrow","type","danger","icon","onClick","block","marginTop","htmlType","size","_c","$RefreshReg$"],"sources":["/home/command/Desktop/hecatoncheir-app/frontend/src/components/set-up-hecatoncheir.tsx"],"sourcesContent":["// src/components/ClusterSetup.tsx\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Space, InputNumber, message } from 'antd';\nimport { PlusOutlined, DeleteOutlined, CheckCircleOutlined } from '@ant-design/icons';\n\ninterface ClusterSetupProps {\n  onClusterInitialized: () => void;\n}\n\nconst ClusterSetup: React.FC<ClusterSetupProps> = ({ onClusterInitialized }) => {\n  const [form] = Form.useForm();\n  const [numPcs, setNumPcs] = useState<number>(0);\n\n  const handleNumPcsChange = (value: number | null) => {\n    setNumPcs(value || 0);\n  };\n\n  const handleInitHec = async (values: any) => {\n    message.loading('Initializing HEC cluster...', 0);\n\n    const clusterConfig = {\n      numPcs: values.numPcs,\n      pcs: values.pcs || [], // Ensure pcs is an array, even if empty\n    };\n\n    try {\n      const response = await fetch('http://localhost:5000/init-hec', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(clusterConfig),\n      });\n\n      message.destroy(); // Close loading message\n\n      if (response.ok) {\n        const result = await response.json();\n        message.success('HEC cluster initialized successfully!');\n        console.log('Backend response (init-hec):', result);\n        onClusterInitialized(); // Callback to tell parent component to render HomePage\n      } else {\n        const errorText = await response.text();\n        message.error(`HEC initialization failed: ${errorText}`);\n        console.error('Backend error (init-hec):', response.status, errorText);\n      }\n    } catch (error) {\n      message.destroy();\n      message.error('Network error or server unavailable during HEC initialization.');\n      console.error('Fetch error (init-hec):', error);\n    }\n  };\n\n  return (\n    <Form\n      form={form}\n      layout=\"vertical\"\n      onFinish={handleInitHec}\n      style={{ maxWidth: 600, margin: '20px auto', padding: '20px', border: '1px solid #eee', borderRadius: '8px' }}\n    >\n      <Form.Item\n        name=\"numPcs\"\n        label=\"Number of PCs in the Cluster\"\n        rules={[{ required: true, message: 'Please enter the number of PCs!' }]}\n      >\n        <InputNumber\n          min={0}\n          onChange={handleNumPcsChange}\n          placeholder=\"Enter number of PCs\"\n          style={{ width: '100%' }}\n        />\n      </Form.Item>\n\n      {numPcs > 0 && (\n        <Form.List name=\"pcs\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(({ key, name, ...restField }) => (\n                <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\n                  <Form.Item\n                    {...restField}\n                    name={[name, 'nameOrIp']}\n                    rules={[{ required: true, message: 'Missing PC name/IP' }]}\n                    label={`PC ${name + 1} Name/IP`}\n                    style={{ flexGrow: 1 }}\n                  >\n                    <Input placeholder={`Enter PC ${name + 1} Name or IP`} />\n                  </Form.Item>\n                  <Button type=\"text\" danger icon={<DeleteOutlined />} onClick={() => remove(name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  Add PC\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n      )}\n\n      <Form.Item style={{ marginTop: 20 }}>\n        <Button type=\"primary\" htmlType=\"submit\" icon={<CheckCircleOutlined />} size=\"large\" block>\n          Init HEC\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ClusterSetup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}