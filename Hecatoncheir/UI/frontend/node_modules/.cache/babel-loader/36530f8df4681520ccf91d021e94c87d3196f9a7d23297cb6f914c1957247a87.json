{"ast":null,"code":"var _jsxFileName = \"/home/command/Desktop/hecatoncheir-app/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\n// src/App.tsx\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport AppHeader from './components/app-header';\nimport ClusterSetup from './components/set-up-hecatoncheir';\nimport HomePage from './components/home-page';\nimport PCListDisplay from './components/pc-list';\nimport { Layout, Row, Col, Typography, theme } from 'antd';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Content,\n  Footer\n} = Layout;\nconst {\n  Title\n} = Typography;\nfunction App() {\n  _s();\n  const [isClusterInitialized, setIsClusterInitialized] = useState(false);\n  const [pcNamesInput, setPcNamesInput] = useState('');\n  const [currentPcs, setCurrentPcs] = useState([]);\n  const {\n    token: {\n      colorBgContainer,\n      borderRadiusLG\n    }\n  } = theme.useToken();\n  useEffect(() => {\n    const names = pcNamesInput.split('\\n').map(name => name.trim()).filter(name => name !== '');\n    setCurrentPcs(names.map(name => ({\n      nameOrIp: name\n    })));\n  }, [pcNamesInput]);\n  const handleClusterInitialization = () => {\n    setIsClusterInitialized(true);\n  };\n  const handleTerminateHec = () => {\n    setIsClusterInitialized(false);\n    setPcNamesInput('');\n    setCurrentPcs([]);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    style: {\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(AppHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      style: {\n        margin: '0 0px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 0,\n          minHeight: 'calc(100vh - 114px)',\n          // Adjust minHeight to fill content area (considering header/footer height)\n          background: colorBgContainer,\n          borderRadius: borderRadiusLG,\n          marginTop: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 20,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(PCListDisplay, {\n              pcs: currentPcs\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 16,\n            children: isClusterInitialized ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'black',\n                  marginLeft: \"48%\"\n                },\n                children: \"STATUS:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'green'\n                },\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 84\n              }, this), /*#__PURE__*/_jsxDEV(HomePage, {\n                onTerminateHec: handleTerminateHec\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: 'center',\n                  color: 'green',\n                  marginTop: '10px'\n                },\n                children: \"hec is up and running...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ClusterSetup, {\n                onClusterInitialized: handleClusterInitialization,\n                pcNamesInput: pcNamesInput,\n                setPcNamesInput: setPcNamesInput,\n                currentPcs: currentPcs // Pass currentPcs to ClusterSetup for validation/button disabling\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: 'center',\n                  color: 'lightgrey',\n                  marginTop: '10px'\n                },\n                children: \"hec is down...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      style: {\n        textAlign: 'center'\n      },\n      children: [\"HEC Cluster \\xA9\", new Date().getFullYear(), \" Created by You\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Sx251EcCBZhgrRHWbIjFS5mOhrA=\", false, function () {\n  return [theme.useToken];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AppHeader","ClusterSetup","HomePage","PCListDisplay","Layout","Row","Col","Typography","theme","jsxDEV","_jsxDEV","Fragment","_Fragment","Content","Footer","Title","App","_s","isClusterInitialized","setIsClusterInitialized","pcNamesInput","setPcNamesInput","currentPcs","setCurrentPcs","token","colorBgContainer","borderRadiusLG","useToken","names","split","map","name","trim","filter","nameOrIp","handleClusterInitialization","handleTerminateHec","style","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","padding","background","borderRadius","marginTop","gutter","span","pcs","color","marginLeft","onTerminateHec","textAlign","onClusterInitialized","Date","getFullYear","_c","$RefreshReg$"],"sources":["/home/command/Desktop/hecatoncheir-app/frontend/src/App.tsx"],"sourcesContent":["// src/App.tsx\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport AppHeader from './components/app-header';\nimport ClusterSetup from './components/set-up-hecatoncheir';\nimport HomePage from './components/home-page';\nimport PCListDisplay from './components/pc-list';\n\nimport { Layout, Row, Col, Typography, theme } from 'antd';\n\nconst { Content, Footer } = Layout;\nconst { Title } = Typography;\n\nfunction App() {\n  const [isClusterInitialized, setIsClusterInitialized] = useState(false);\n  const [pcNamesInput, setPcNamesInput] = useState<string>('');\n  const [currentPcs, setCurrentPcs] = useState<{ nameOrIp: string }[]>([]);\n\n  const {\n    token: { colorBgContainer, borderRadiusLG },\n  } = theme.useToken();\n\n  useEffect(() => {\n    const names = pcNamesInput\n      .split('\\n')\n      .map((name) => name.trim())\n      .filter((name) => name !== '');\n    setCurrentPcs(names.map((name) => ({ nameOrIp: name })));\n  }, [pcNamesInput]);\n\n  const handleClusterInitialization = () => {\n    setIsClusterInitialized(true);\n  };\n\n  const handleTerminateHec = () => {\n    setIsClusterInitialized(false);\n    setPcNamesInput('');\n    setCurrentPcs([]);\n  };\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <header>\n        <AppHeader /> {/* Your custom AppHeader component */}\n      </header>\n      <Content style={{ margin: '0 0px' }}>\n        <div\n          style={{\n            padding:0,\n            minHeight: 'calc(100vh - 114px)', // Adjust minHeight to fill content area (considering header/footer height)\n            background: colorBgContainer,\n            borderRadius: borderRadiusLG,\n            marginTop: 0,\n          }}\n        >\n          <Row gutter={20}>\n            <Col span={8}>\n              <PCListDisplay pcs={currentPcs} />\n            </Col>\n            <Col span={16}>\n              {isClusterInitialized ? (\n                <>\n                  <span style={{ color: 'black', marginLeft:\"48%\"}}>STATUS:</span> <span style={{ color: 'green' }}>Active</span>\n                  <HomePage onTerminateHec={handleTerminateHec} /> {/* Your HomePage component (query form) */}\n                  <p style={{ textAlign: 'center', color: 'green', marginTop: '10px' }}>hec is up and running...</p>\n                </>\n              ) : (\n                <>\n                  <ClusterSetup\n                    onClusterInitialized={handleClusterInitialization}\n                    pcNamesInput={pcNamesInput}\n                    setPcNamesInput={setPcNamesInput}\n                    currentPcs={currentPcs} // Pass currentPcs to ClusterSetup for validation/button disabling\n                  />\n                  <p style={{ textAlign: 'center', color: 'lightgrey', marginTop: '10px' }}>hec is down...</p>\n                </>\n              )}\n            </Col>\n          </Row>\n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>\n        HEC Cluster ©{new Date().getFullYear()} Created by You\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}