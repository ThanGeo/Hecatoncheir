import type { CSSInterpolation, DerivativeFunc } from '@ant-design/cssinjs';
import type { AnyObject } from 'antd/es/_util/type';
import type { AliasToken } from 'antd/es/theme/interface/alias';
import type { MapToken } from 'antd/es/theme/interface/maps';
import type { SeedToken } from 'antd/es/theme/interface/seeds';
export type MappingAlgorithm = DerivativeFunc<SeedToken, MapToken>;
export type { GlobalToken, OverrideToken, FullToken, OverrideComponent, GetDefaultToken, GenStyleFn, } from 'antd/es/theme/interface/cssinjs-utils';
export type { AliasToken } from 'antd/es/theme/interface/alias';
export type { ComponentTokenMap } from 'antd/es/theme/interface/components';
export type { ColorMapToken, ColorNeutralMapToken, CommonMapToken, FontMapToken, HeightMapToken, MapToken, SizeMapToken, StyleMapToken, } from 'antd/es/theme/interface/maps';
export { PresetColors } from 'antd/es/theme/interface/presetColors';
export type { LegacyColorPalettes, ColorPalettes, PresetColorKey, PresetColorType, } from 'antd/es/theme/interface/presetColors';
export type { SeedToken } from 'antd/es/theme/interface/seeds';
export type UseComponentStyleResult = [(node: React.ReactNode) => React.ReactElement, string];
export type GenerateStyle<ComponentToken extends AnyObject = AliasToken, ReturnType = CSSInterpolation> = (token: ComponentToken) => ReturnType;
